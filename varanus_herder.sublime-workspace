{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Shepherd",
				"ShepherdClass"
			],
			[
				"fre",
				"freshBL"
			],
			[
				"bound",
				"boundValue"
			],
			[
				"sho",
				"showTipInterval"
			],
			[
				"fun",
				"function〔keyword〕"
			],
			[
				"back",
				"background-clip"
			],
			[
				"mouse",
				"mouseFollower"
			],
			[
				"app",
				"appendTo〔function〕"
			],
			[
				"get_COM",
				"get_all_commandable_entities"
			],
			[
				"entity",
				"entity"
			],
			[
				"box",
				"box_command_tool"
			],
			[
				"next_entity",
				"next_entity_key"
			],
			[
				"for",
				"forp\tfor k, v in pairs()"
			],
			[
				"MassCom",
				"MassCommandCallHandler"
			],
			[
				"mass_comm",
				"box_mass_command_tool"
			],
			[
				"Ma",
				"MassCommandCallHandler"
			],
			[
				"mass_",
				"box_mass_command_tool"
			],
			[
				"Pl",
				"PlayerCameraControllerMixinService"
			],
			[
				"inner",
				"innerHeight"
			],
			[
				"ed",
				"edge_pan_call_handler"
			],
			[
				"onPanB",
				"onPanBoxEnter"
			],
			[
				"get",
				"get_position"
			],
			[
				"sel",
				"scaled_continuous_delta"
			],
			[
				"panDi",
				"panDirX"
			],
			[
				"_",
				"_pan_direction"
			],
			[
				"e",
				"edge_pan_camera_controller"
			],
			[
				"placeabl",
				"placeable_entities"
			],
			[
				"stone",
				"stonehearth_client"
			],
			[
				"st",
				"stonehearthClient"
			],
			[
				"_cu",
				"_current_run_name"
			],
			[
				"sa",
				"saved_runs"
			],
			[
				"s",
				"saved_splits"
			],
			[
				"saved_",
				"saved_split"
			],
			[
				"curr",
				"currSplit"
			],
			[
				"split",
				"split_service"
			],
			[
				"spl",
				"split_service"
			],
			[
				"spee",
				"speedrunlingsSplitRow"
			],
			[
				"elapsed",
				"elapsedTime"
			],
			[
				"_clock",
				"_clockDateString"
			],
			[
				"_clo",
				"_clockDateString"
			],
			[
				"_date",
				"_dateElem"
			],
			[
				"_dat",
				"_dateElem"
			],
			[
				"_get",
				"_getGameSpeed"
			],
			[
				"current",
				"current_splits_name"
			],
			[
				"game",
				"game_speed_service"
			],
			[
				"show",
				"showSRL"
			],
			[
				"_s",
				"_speedrunlingsMainWindow"
			],
			[
				"show_",
				"show_speedrunlings_main_window"
			],
			[
				"speedrunlings",
				"SpeedrunlingsMainWindowView"
			],
			[
				"un",
				"unbindActionsWithin"
			],
			[
				"bind",
				"bindRootGroup"
			],
			[
				"on",
				"onMenuActivated"
			],
			[
				"hot",
				"hotkeyManager"
			],
			[
				"menu",
				"menuItemGroups"
			],
			[
				"root",
				"rootGroup"
			],
			[
				"ho",
				"hotkeyManager"
			],
			[
				"bin",
				"bindRootGroup"
			],
			[
				"t",
				"targetMenuItem"
			],
			[
				"startMenu",
				"startMenu"
			],
			[
				"pastu",
				"pasture_component"
			],
			[
				"pas",
				"pasture_component"
			],
			[
				"ha",
				"happiness_check_timer"
			],
			[
				"crea",
				"creature_comforts"
			],
			[
				"happ",
				"happiness_score"
			],
			[
				"de",
				"decor_pref_result"
			],
			[
				"at",
				"attributes_component"
			],
			[
				"Pref",
				"PreferencesComponent"
			],
			[
				"critt",
				"critter_preferences"
			],
			[
				"_set",
				"_set_critter_overlay"
			],
			[
				"decor",
				"decor_pref_result"
			],
			[
				"cri",
				"critter_preferences"
			],
			[
				"critter_",
				"critter_pet_prefs"
			],
			[
				"Pet",
				"PetPasturePrefsComponent"
			],
			[
				"equi",
				"equipment_component"
			],
			[
				"sh",
				"shepherded_animal_equip"
			],
			[
				"p",
				"pet_prefs_component"
			],
			[
				"pa",
				"pasture_component"
			],
			[
				"crit",
				"critter_pasture_data"
			],
			[
				"deco",
				"decor_pref_result"
			],
			[
				"re",
				"result"
			],
			[
				"happi",
				"happiness_score"
			],
			[
				"critte",
				"critter_happiness"
			],
			[
				"lik",
				"liked_decor"
			],
			[
				"def",
				"default_happiness"
			],
			[
				"critter",
				"critter_pasture_data"
			],
			[
				"pasture",
				"pasture_entity"
			],
			[
				"disl",
				"disliked_uri"
			],
			[
				"disli",
				"disliked_decor"
			],
			[
				"dis",
				"disliked_decor"
			],
			[
				"preferr",
				"preferred_decor"
			],
			[
				"_ch",
				"_check_decor_pref"
			],
			[
				"cul",
				"_calculate_happiness"
			],
			[
				"_calcul",
				"_calculate_happiness_check_timer"
			],
			[
				"worl",
				"world_location"
			],
			[
				"world",
				"_world_location"
			],
			[
				"crene",
				"crenellated_adobe"
			],
			[
				"met",
				"evtMetaKey"
			],
			[
				"clie",
				"clientY"
			],
			[
				"cli",
				"clientX"
			],
			[
				"page",
				"pageY"
			],
			[
				"detail",
				"detailLine"
			],
			[
				"hi",
				"highlighted"
			],
			[
				"align",
				"align-items"
			],
			[
				"inline",
				"inline-flex"
			],
			[
				"dat",
				"data-type"
			]
		]
	},
	"buffers":
	[
		{
			"file": "manifest.json",
			"settings":
			{
				"buffer_size": 792,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/stonehearth/manifest.json",
			"settings":
			{
				"buffer_size": 218154,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/Users/Adam/AppData/Local/Temp/7zO87A0A35A/fisher.lua",
			"settings":
			{
				"buffer_size": 2199,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "Searching 955 files for \"require\"\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\box_command_tool\\call_handlers\\box_command_tool_call_handler\\box_command_tool_call_handler.lua:\n    6  \n    7  \n    8: local entity_forms_lib = require ('stonehearth.lib.entity_forms.entity_forms_lib')\n    9: local ItemPlacer = require ('stonehearth.services.client.build_editor.item_placer')\n   10: local PlaceItemCallHandler = require('stonehearth.call_handlers.place_item_call_handler')\n   11  \n   12  local BoxCommandCallHandler = class()\n   ..\n   25     local deferred_selector = stonehearth.selection:select_xz_region('box_command_' .. command_name)\n   26  \n   27:       -- Require the entity or box to be supported (usually by ground)?\n   28:       :require_supported(false)\n   29  \n   30        -- Change the box color (to a nice purple color)\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\debugtools\\debugtools_server.lua:\n    8  local function create_service(name)\n    9     local path = string.format('debugtools.services.server.%s.%s_service', name, name)\n   10:    local service_path = require(path)\n   11     assert(service_path, \"Could not find a debug tools service. Are you sure your debugtools mod folder is named correctly? It should be 'debugtools' not 'debugtools_master'\")\n   12     local service = service_path()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\debugtools\\call_handlers\\debugtools_commands.lua:\n    1  local Point3 = _radiant.csg.Point3\n    2: local InterruptAi = require 'mixintos.interrupt_ai.interrupt_ai'\n    3: local entity_forms_lib = require 'stonehearth.lib.entity_forms.entity_forms_lib'\n    4  \n    5  local Commands = class()\n    .\n  509     }\n  510  \n  511:    stonehearth.game_master:set_ignore_start_requirements(true)\n  512     stonehearth.game_master:debug_trigger_campaign_encounter(options)\n  513:    stonehearth.game_master:set_ignore_start_requirements(false)\n  514     response:resolve({})\n  515  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\edge_pan\\call_handlers\\edge_pan_call_handler\\edge_pan_call_handler.lua:\n    1: local PlayerCameraController = require 'stonehearth.services.client.camera.player_camera_controller'\n    2  local Point3 = _radiant.csg.Point3\n    3  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\microworld\\micro_world.lua:\n    1  local MicroWorld = class()\n    2: local game_master_lib = require 'stonehearth.lib.game_master.game_master_lib'\n    3: local entity_forms_lib = require 'stonehearth.lib.entity_forms.entity_forms_lib'\n    4  \n    5  local Point2 = _radiant.csg.Point2\n    .\n  110     radiant.terrain.place_entity(citizen, Point3(x, 1, z), { facing = 180 })\n  111  \n  112:    if job_json.parent_level_requirement then\n  113        job_component:promote_to(job_json.parent_job)\n  114:       self:level_up_citizen(citizen, job_json.parent_level_requirement)\n  115     end\n  116  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\microworld\\micro_world_server.lua:\n   13  \n   14        -- try to load the script.\n   15:       local script = require(script_name)\n   16        if not script then\n   17:          error(string.format('failed to require world script \"%s\".', script_name))\n   18        end\n   19  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\microworld\\worlds\\data_driven_world.lua:\n    3  local is_table, is_string, is_number = radiant.check.is_table, radiant.check.is_string, radiant.check.is_number\n    4  \n    5: local MicroWorld = require 'micro_world'\n    6  local DataDriven = class(MicroWorld)\n    7  \n    .\n   64     -- entities (Array)\n   65     -- Each entity may have the following properties:\n   66:    --  | `alias` (string, required): alias/entity reference of the entity\n   67:    --  |\\  `position` (table, required): position of the entity\n   68:    --  | | `x` (number, required): x-position of the entity\n   69:    --  | | `z` (number, required): z-position of the entity\n   70     --  |\n   71:    --  | `requires_owner` (boolean, optional): If set, this entity will have its owner set. Required for stonehearth:decoration:firepit. Default false.\n   72     --  | `full_size` (boolean, optional): If set to `true` it will spawn a \"real\" entity, if set to `false` it spawns an iconic version. Default false.\n   73     --  | `rotation` (number, optional): If set, the entity will be rotated by `rotation` degrees. Default 0.\n   ..\n  103        local offset_x, offset_z = _get_value(entity_def, 'offset.x', 1), _get_value(entity_def, 'offset.z', 1)\n  104        \n  105:       -- Whether the owner-field needs to be set; this is currently required for the firepit and might\n  106:       -- be required for other player-created fields\n  107:       local owner = _get_value(entity_def, 'requires_owner', false) and player_id or nil\n  108        local full_size = _get_value(entity_def, 'full_size', false)\n  109        \n  ...\n  141     -- Each citizen definition may have the following properties:\n  142     --  \\ \n  143:    --  |\\ `position` (table, required): The location of the citizen\n  144:    --  | | `x` (number, required): x-position of the worker\n  145:    --  | | `z` (number, required): z-position of the worker\n  146     --  |\n  147     --  | `carrying` (string; optional): alias/entity reference that the worker will carry\n  ...\n  149     --  | \n  150     --  |\\ `workshop` (table, optional): If set, a workshop for this worker is spawned too.\n  151:    --  | | `x` (number, required): x-position of the workshop\n  152:    --  | | `z` (number, required): z-position of the workshop\n  153     --  |\n  154     --  | `equipment` (table, optional): Items that will be equipped to this worker\n  ...\n  195     -- stockpiles (Array)\n  196     -- Each stockpile definition may have the following properties:\n  197:    --  |\\  `position` (table, required): position of the stockpile\n  198:    --  | | `x` (number, required): x of the stockpile\n  199:    --  | | `z` (number, required): z of the stockpile\n  200     --  |\n  201:    --  |\\  `dimension` (table, required): dimension of the stockpile\n  202:    --  | | `width` (number, required): width of the stockpile\n  203:    --  | | `height` (number, required): height of the stockpile\n  204     local stockpiles = self:_get_config('stockpiles', {})\n  205     for _, stockpile_def in pairs(stockpiles) do\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\microworld\\worlds\\harvest_test_world.lua:\n    1: local MicroWorld = require 'microworld.micro_world'\n    2  local HarvestTest = class(MicroWorld)\n    3  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\microworld\\worlds\\mini_game_world.lua:\n    1: local MicroWorld = require 'micro_world'\n    2  local Point3 = _radiant.csg.Point3\n    3  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\microworld\\worlds\\settlement_test_world.lua:\n    1: local MicroWorld = require 'micro_world'\n    2  local SettlementTest = class(MicroWorld)\n    3  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\radiant\\client.lua:\n    1: _host:require 'radiant.lib.env' -- there's no module path installed, so use the script version...\n    2  decoda_name = \"radiant client\"\n    3  \n    .\n    7  }\n    8  \n    9: require 'modules.common'\n   10  \n   11  function radiant.get_entity(addr)\n   ..\n   22  \n   23  radiant.lib = {\n   24:    Destructor = require 'modules.destructor'\n   25  }\n   26: radiant.log = require 'modules.log'\n   27: radiant.util = require 'lib.util'\n   28: radiant.resources = require 'modules.resources'\n   29: radiant.check = require 'lib.check'\n   30: radiant.math = require 'lib.math'\n   31: radiant.events = require 'modules.events'\n   32: radiant.mods = require 'modules.mods'\n   33: radiant.entities = require 'modules.client_entities'\n   34: radiant.terrain = require 'modules.terrain'\n   35  \n   36: require 'modules.timer'\n   37  \n   38  -- xxx: radiant client and server need to share much more stuff!!! -- tony\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\radiant\\server.lua:\n    1: _host:require 'radiant.lib.env' -- there's no module path installed, so use the script version...\n    2  decoda_name = \"radiant server\"\n    3  \n    .\n    6     _root_entity = _radiant.sim.get_entity(addr)\n    7  }\n    8: require 'modules.common'\n    9  \n   10  function radiant.get_entity(addr)\n   ..\n   25  \n   26  radiant.lib = {\n   27:    Destructor = require 'modules.destructor'\n   28  }\n   29: radiant.log = require 'modules.log'\n   30: radiant.util = require 'lib.util'\n   31: radiant.check = require 'lib.check'\n   32: radiant.math = require 'lib.math'\n   33: radiant.gamestate = require 'modules.gamestate'\n   34: radiant.resources = require 'modules.resources'\n   35: radiant.events = require 'modules.events'\n   36: radiant.effects = require 'modules.effects'\n   37: radiant.entities = require 'modules.entities'\n   38: radiant.terrain = require 'modules.terrain'\n   39: radiant.mods = require 'modules.mods'\n   40: radiant.object_tracker = require 'modules.object_tracker'\n   41  \n   42  radiant.log.info('radiant', 'radiant api initialized.')\n   43  \n   44: require 'modules.timer'\n   45  \n   46  function radiant.not_reached(reason, ...)\n   ..\n   49  end\n   50  \n   51: local ProFi = require 'lib.ProFi'\n   52  local _profile = {\n   53     enabled = radiant.util.get_config('enable_lua_profling', false),\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\radiant\\controllers\\time_tracker_controller.lua:\n    1: local NonPersistentTimer = require 'controllers.nonpersistent_timer'\n    2  \n    3  local ALWAYS_CLEAR_TIMERS = radiant.util.get_global_config('mods.stonehearth.always_clear_timers', false)\n    .\n  196  end\n  197  \n  198: function TimeTracker:is_tracking_timer(required_timer)\n  199     for _, bucket in pairs(self._sv._buckets) do\n  200        for _, timer in ipairs(bucket) do\n  201:          if timer == required_timer then\n  202              return true\n  203           end\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\radiant\\lib\\env.lua:\n   25  \n   26     if not info.source then\n   27:       _host:log('env', 1, 'could not determine module file in radiant \"require\"')\n   28        return nil\n   29     end\n   ..\n   43  end\n   44  \n   45: local old_require = require   -- hide the lua implementation\n   46: require = function(s)\n   47     local result\n   48     \n   ..\n   54  \n   55     -- level 1 would be the __get_current_module_name function in env.lua...\n   56:    -- level 2 would be the caller of this function (e.g. require in env.lua...)\n   57     -- level 3 is the caller of the caller, which is in the module we're looking for!\n   58     local mod\n   59     local modname = __get_current_module_name(3)\n   60     if modname then\n   61:       mod = _host:require(modname .. '.' .. s)\n   62     end\n   63  \n   64     if not mod then\n   65        -- try the full path...\n   66:       mod =  _host:require(s)\n   67     end\n   68  \n   69     if not mod then\n   70        -- try radiant.lib\n   71:       mod = _host:require('radiant.lib.' .. s)\n   72     end\n   73     \n   ..\n  116  end\n  117  \n  118: require 'lib.unclasslib'\n  119: require 'lib.checks'\n  120  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\radiant\\lib\\persistence.lua:\n    1: local SvTable = require 'radiant.lib.sv_table'\n    2  \n    3  --[[\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\radiant\\lib\\ProFi.lua:\n    3  \t\n    4  \tExample:\n    5: \t\tProFi = require 'ProFi'\n    6  \t\tProFi:start()\n    7  \t\tsome_function()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\radiant\\lib\\sv_table.lua:\n   19     To iterate through fields of the table, both nil and non-nil, use the expairs\n   20  --]]\n   21: local util = require 'lib.util'\n   22  \n   23  local M = {}\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\radiant\\lib\\compiler\\file_mapper.lua:\n    1: local mlc = require 'metalua.compiler'.new()\n    2  local FileMapper = {}\n    3  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\radiant\\lib\\metalua\\compiler.lua:\n   39  --------------------------------------------------------------------------------\n   40  \n   41: require 'checks'\n   42  \n   43  local M  = { }\n   ..\n   89  end\n   90  \n   91: local bytecode_compiler = nil -- cache to avoid repeated `pcall(require(...))`\n   92  local function get_bytecode_compiler()\n   93      if bytecode_compiler then return bytecode_compiler else\n   94:         local status, result = pcall(require, 'metalua.compiler.bytecode')\n   95          if status then\n   96              bytecode_compiler = result\n   ..\n  147  \n  148  function CONV :ast_to_src(...)\n  149: \trequire 'metalua.loader' -- ast_to_string isn't written in plain lua\n  150: \treturn require 'metalua.compiler.ast_to_src' (...)\n  151  end\n  152  \n  ...\n  154  \n  155  function M.new()\n  156: \tlocal parser = require 'metalua.compiler.parser' .new()\n  157  \tlocal self = { parser = parser }\n  158  \tsetmetatable(self, MT)\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\radiant\\lib\\metalua\\pprint.lua:\n  124  \n  125  \n  126: -- Compute the number of chars it would require to display the table\n  127  -- on a single line. Helps to decide whether some carriage returns are\n  128: -- required. Since the size of each sub-table is required many times,\n  129  -- it's cached in [xlen_cache].\n  130  xlen = function (x, cfg, nested)\n  ...\n  196                  end\n  197  \n  198:                 -- Determine whether a newline is required\n  199                  local is_id, expected_len=valid_id(p.cfg, k)\n  200                  if is_id then expected_len=#k+xlen(v, p.cfg, p.nested)+#\" = , \"\n  ...\n  222          if has_hash and has_arr then p:acc \", \"\n  223          elseif has_tag and not has_hash and alen==1 and type(adt[1])~=\"table\" then\n  224:             -- No brace required; don't print \"{\", remember not to print \"}\"\n  225              p:acc (\" \"); acc_value (p, adt[1]) -- indent= indent+(cfg.fix_indent or 0))\n  226              no_brace = true\n  227          elseif not has_hash then\n  228:             -- Braces required, but not opened by hash-part handler yet\n  229              p:acc \"{ \"; indent(p)\n  230          end\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\radiant\\lib\\metalua\\compiler\\parser.lua:\n   27  local function new()\n   28      local M = {\n   29:         lexer = require \"metalua.compiler.parser.lexer\" ();\n   30          extensions = { } }\n   31      for _, rel_name in ipairs(MODULE_REL_NAMES) do\n   32          local abs_name = \"metalua.compiler.parser.\"..rel_name\n   33:         local extender = require (abs_name)\n   34          if not M.extensions[abs_name] then\n   35              if type (extender) == 'function' then extender(M) end\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\radiant\\lib\\metalua\\compiler\\parser\\expr.lua:\n   27  -------------------------------------------------------------------------------\n   28  \n   29: local pp    = require 'metalua.pprint'\n   30: local gg    = require 'metalua.grammar.generator'\n   31: local annot = require 'metalua.compiler.parser.annot.generator'\n   32  \n   33  return function(M)\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\radiant\\lib\\metalua\\compiler\\parser\\ext.lua:\n   24  --------------------------------------------------------------------------------\n   25  \n   26: local gg        = require 'metalua.grammar.generator'\n   27  \n   28  return function(M)\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\radiant\\lib\\metalua\\compiler\\parser\\lexer.lua:\n   22  ----------------------------------------------------------------------\n   23  \n   24: local generic_lexer = require 'metalua.grammar.lexer'\n   25  \n   26  return function()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\radiant\\lib\\metalua\\compiler\\parser\\meta.lua:\n   21  -- AST quasi-quoting helpers.\n   22  \n   23: local gg       = require 'metalua.grammar.generator'\n   24  \n   25  return function(M)\n   ..\n   37      function M.meta.eval (ast)\n   38          -- TODO: should there be one mlc per splice, or per parser instance?\n   39:         local mlc = require 'metalua.compiler'.new()\n   40          local f = mlc :ast_to_function (ast, '=splice')\n   41          local result=f(M) -- splices act on the current parser\n   ..\n   96          end\n   97          -- TODO FIXME running a new parser with the old lexer?!\n   98:         local parser = require 'metalua.compiler.parser'.new()\n   99          local ast = parser [parser_name](lx)\n  100          if in_a_quote then -- only prevent quotation in this subtree\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\radiant\\lib\\metalua\\compiler\\parser\\misc.lua:\n   37  --------------------------------------------------------------------------------\n   38  \n   39: local gg       = require 'metalua.grammar.generator'\n   40  \n   41  -- TODO: replace splice-aware versions with naive ones, move etensions in ./meta\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\radiant\\lib\\metalua\\compiler\\parser\\stat.lua:\n   34  -------------------------------------------------------------------------------\n   35  \n   36: local lexer    = require 'metalua.grammar.lexer'\n   37: local gg       = require 'metalua.grammar.generator'\n   38  \n   39: local annot = require 'metalua.compiler.parser.annot.generator'\n   40  \n   41  --------------------------------------------------------------------------------\n   ..\n  104              local exprs = M.expr_list (lx)\n  105              if #exprs < 2 or #exprs > 3 then\n  106:                 gg.parse_error (lx, \"numeric for requires 2 or 3 boundaries\")\n  107              end\n  108              return { tag=\"Fornum\", vars[1], unpack (exprs) }\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\radiant\\lib\\metalua\\compiler\\parser\\table.lua:\n   30  --------------------------------------------------------------------------------\n   31  \n   32: local gg  = require 'metalua.grammar.generator'\n   33  \n   34  return function(M)\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\radiant\\lib\\metalua\\compiler\\parser\\annot\\generator.lua:\n   18  --------------------------------------------------------------------------------\n   19  \n   20: require 'checks'\n   21: local gg = require 'metalua.grammar.generator'\n   22  local M  = { }\n   23  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\radiant\\lib\\metalua\\compiler\\parser\\annot\\grammar.lua:\n   18  --------------------------------------------------------------------------------\n   19  \n   20: local gg    = require 'metalua.grammar.generator'\n   21  \n   22  return function(M)\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\radiant\\lib\\metalua\\grammar\\generator.lua:\n   47  local M = { }\n   48  \n   49: local lexer = require 'metalua.grammar.lexer'\n   50  \n   51  --------------------------------------------------------------------------------\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\radiant\\lib\\metalua\\grammar\\lexer.lua:\n   18  -------------------------------------------------------------------------------\n   19  \n   20: require 'checks'\n   21  \n   22  local M = { }\n   ..\n  213  ----------------------------------------------------------------------\n  214  -- unescape a whole string, applying [unesc_digits] and\n  215: -- [unesc_letter] as many times as required.\n  216  ----------------------------------------------------------------------\n  217  local function unescape_string (s)\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\radiant\\modules\\client_entities.lua:\n    1: local FilteredTrace = require 'modules.filtered_trace'\n    2  local Point3 = _radiant.csg.Point3\n    3   \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\radiant\\modules\\common.lua:\n    1: require 'checks'\n    2: local Persistence = require 'radiant.lib.persistence'\n    3: local DestroyedController = require 'radiant.controllers.destroyed_controller'\n    4  \n    5  -- These methods and tables define a 'radiant.class', which looks functions similarly in an object-oriented fashion\n    .\n  178  --\n  179  -- depending on `sort_key` and the optional `reversed` bool.\n  180: -- if values of the map are not tables, `sort_key` is not required\n  181  -- and entries in the sorted array will simply have `key` and `value`\n  182  -- variables.  if the sort key is missing, it's assumed value is 0.\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\radiant\\modules\\effects.lua:\n    1: local EffectManager = require 'modules.effects.effect_manager'\n    2  \n    3  local effects = {}\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\radiant\\modules\\entities.lua:\n    1: local FilteredTrace = require 'modules.filtered_trace'\n    2  \n    3  local Point2 = _radiant.csg.Point2\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\radiant\\modules\\mods.lua:\n    4  end\n    5  \n    6: function mods.require(s)\n    7:    return _host:require(s)\n    8  end\n    9  \n   10  function mods.load_script(s)\n   11:    return _host:require_script(s)\n   12  end\n   13  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\radiant\\modules\\effects\\activity_overlay_effect.lua:\n    1: local EffectTrack = require 'modules.effects.effect_track'\n    2  local ActivityOverlayEffect = radiant.class(EffectTrack)\n    3  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\radiant\\modules\\effects\\animation_effect.lua:\n    1: local EffectTrack = require 'modules.effects.effect_track'\n    2  local AnimationEffect = radiant.class(EffectTrack)\n    3  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\radiant\\modules\\effects\\effect_manager.lua:\n    1: local EffectTracks = require 'modules.effects.effect_tracks'\n    2  local EffectManager = radiant.class()\n    3  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\radiant\\modules\\effects\\effect_tracks.lua:\n    1: local EffectTrack = require 'modules.effects.effect_track'\n    2: local GenericEffect = require 'modules.effects.generic_effect'\n    3: local AnimationEffect = require 'modules.effects.animation_effect'\n    4: local TriggerEffect = require 'modules.effects.trigger_effect'\n    5: local SoundEffect = require 'modules.effects.sound_effect'\n    6: local LightEffect = require 'modules.effects.light_effect'\n    7: local ActivityOverlayEffect = require 'modules.effects.activity_overlay_effect'\n    8: local UnitStatusEffect = require 'modules.effects.unit_status_effect'\n    9  local Point3 = _radiant.csg.Point3\n   10  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\radiant\\modules\\effects\\generic_effect.lua:\n    1: local EffectTrack = require 'modules.effects.effect_track'\n    2  local GenericEffect = radiant.class(EffectTrack)\n    3  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\radiant\\modules\\effects\\light_effect.lua:\n    1: local EffectTrack = require 'modules.effects.effect_track'\n    2  local LightEffect = radiant.class(EffectTrack)\n    3  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\radiant\\modules\\effects\\sound_effect.lua:\n    1: local EffectTrack = require 'modules.effects.effect_track'\n    2  local SoundEffect = radiant.class(EffectTrack)\n    3  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\radiant\\modules\\effects\\trigger_effect.lua:\n    1: local EffectTrack = require 'modules.effects.effect_track'\n    2  local TriggerEffect = radiant.class(EffectTrack)\n    3  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\radiant\\modules\\effects\\unit_status_effect.lua:\n    1: local EffectTrack = require 'modules.effects.effect_track'\n    2  local UnitStatusEffect = radiant.class(EffectTrack)\n    3  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\roll_for_need\\services\\loot_recipe_unlocks.lua:\n    1: local game_master_lib = require 'lib.game_master.game_master_lib'\n    2  \n    3  local LootRecipeUnlocks = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\settlementdecor\\jobs\\gardener\\gardener.lua:\n    1: local CraftingJob = require 'stonehearth.jobs.crafting_job'\n    2  \n    3  local GardenerClass = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\settlementdecor\\services\\server\\encounters\\quiet_unlock_recipe_encounter.lua:\n    1: local game_master_lib = require 'lib.game_master.game_master_lib'\n    2  \n    3  local QuietUnlockRecipeEncounter = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\speedrunlings\\server_init.lua:\n    3  local function create_service(name)\n    4     local path = string.format('services.server.%s.%s', name, name)\n    5:    local service = require(path)()\n    6     local saved_variables = speedrunlings_server_init._sv[name]\n    7  \n    .\n   18  end\n   19  \n   20: function speedrunlings_server_init:_on_required_loaded()\n   21     speedrunlings_server_init._sv = speedrunlings_server_init.__saved_variables:get_data()\n   22     create_service('split_service')\n   23  end\n   24  \n   25: radiant.events.listen_once(radiant, 'radiant:required_loaded', speedrunlings_server_init, speedrunlings_server_init._on_required_loaded)\n   26  \n   27  return speedrunlings_server_init\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\constants.lua:\n   22  load_other_constants('happiness', 'stonehearth:data:happiness_constants')\n   23  \n   24: -- Lua constants that require some function calls\n   25  \n   26  -- Conversations\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\stonehearth_client.lua:\n    1: local StonehearthCommon = require 'stonehearth.stonehearth_common'\n    2  \n    3  stonehearth = {\n    4:    constants = require 'constants'\n    5  }\n    6  \n    .\n   30  local function create_service(name)\n   31     local path = string.format('services.client.%s.%s_service', name, name)\n   32:    local service = require(path)()\n   33  \n   34     local saved_variables = stonehearth._sv[name]\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\stonehearth_server.lua:\n    1: local StonehearthCommon = require 'stonehearth.stonehearth_common'\n    2: local LootTable = require 'stonehearth.lib.loot_table.loot_table'\n    3  \n    4  stonehearth = {\n    5:    constants = require 'constants'\n    6  }\n    7  \n    .\n   64  local function create_service(name)\n   65     local path = string.format('services.server.%s.%s_service', name, name)\n   66:    local service = require(path)()\n   67  \n   68     local saved_variables = stonehearth._sv[name]\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\admire_fire_action.lua:\n    1  local AdmireFire = class()\n    2: local constants = require 'constants'\n    3  \n    4  AdmireFire.name = 'admire fire'\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\build_ladder_action.lua:\n    1  local Entity = _radiant.om.Entity\n    2: local LadderBuilder = require 'services.server.build.ladder_builder'\n    3  \n    4  local BuildLadder = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\build_ladder_adjacent_action.lua:\n    1: local LadderBuilder = require 'services.server.build.ladder_builder'\n    2  local Entity = _radiant.om.Entity\n    3  local Point3 = _radiant.csg.Point3\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\bump_against_entity_action.lua:\n    1: local AiHelpers = require 'ai.actions.ai_helpers'\n    2  local Point3 = _radiant.csg.Point3\n    3  local Entity = _radiant.om.Entity\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\bump_allies_action.lua:\n    1: local AiHelpers = require 'ai.actions.ai_helpers'\n    2  local Cube3 = _radiant.csg.Cube3\n    3  local Point3 = _radiant.csg.Point3\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\bump_entity_action.lua:\n    1: local AiHelpers = require 'ai.actions.ai_helpers'\n    2  local Point3 = _radiant.csg.Point3\n    3  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\chase_entity_action.lua:\n    1: local FollowPath = require 'ai.lib.follow_path'\n    2  local Path = _radiant.sim.Path\n    3  local Entity = _radiant.om.Entity\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\chase_patrol_party_action.lua:\n    1: local constants = require 'constants'\n    2  \n    3  local ChasePatrolParty = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\collect_animal_for_pasture_action.lua:\n   15  -- TODO: wander into the part of the world that is appropriate for this animal type\n   16  \n   17: local function _is_pasture_that_requires_animals(player_id, entity)\n   18     if not entity or not entity:is_valid() then\n   19        return false\n   ..\n   44  \n   45     local filter_fn = stonehearth.ai:filter_from_key('stonehearth:collect_animals_for_pasture', player_id, function(item)\n   46:          return _is_pasture_that_requires_animals(player_id, item)\n   47        end)\n   48  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\collect_ingredient.lua:\n    1: local IngredientList = require 'components.workshop.ingredient_list'\n    2  local Entity = _radiant.om.Entity\n    3  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\destroy_items_in_stockpile_action.lua:\n    1: local entity_forms = require 'stonehearth.lib.entity_forms.entity_forms_lib'\n    2  \n    3  local Entity = _radiant.om.Entity\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\drop_carrying_now_action.lua:\n    8  --[[ @markdown\n    9  Use stonehearth:drop\\_carrying\\_now when an entity should drop whatever they are carrying immediately.\n   10: Often, this is used before starting an action that requires the entity's hands to be empty.\n   11  \n   12  For example,  _Admire\\_fire_, _death\\_action_, _harvest\\_plant_, and _combat\\_action_ all start by calling:\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\eat_action.lua:\n    1: local constants = require 'constants'\n    2  \n    3  local Eat = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\fabricate_structure_action.lua:\n    1: local build_util = require 'lib.build_util'\n    2  \n    3  local Point3 = _radiant.csg.Point3\n    4: local Fabricator = require 'components.fabricator.fabricator_component'\n    5  \n    6  local FabricateStructure = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\fabricate_structure_adjacent_action.lua:\n   21           not radiant.entities.is_material(ai.CURRENT.carrying, self._material) then\n   22  \n   23:       ai:get_log():info('not carrying required material.  bailing.')\n   24:       ai:halt('not carrying required material for fabricate_structure_adjacent')\n   25        return\n   26     end\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\find_path_to_storage_containing_entity_type_action.lua:\n    2  local Entity = _radiant.om.Entity\n    3  local FindPathToStorageContainingEntityType = class()\n    4: local constants = require 'constants'\n    5  \n    6  FindPathToStorageContainingEntityType.name = 'find path to storage containing entity type'\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\follow_path_action.lua:\n    1: local FollowPath = require 'ai.lib.follow_path'\n    2  local Path = _radiant.sim.Path\n    3  local log = radiant.log.create_logger('follow_path')\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\get_patrol_route_action.lua:\n    1: local PatrolHelpers = require 'ai.actions.patrol_helpers'\n    2  local Point3 = _radiant.csg.Point3\n    3  local Path = _radiant.sim.Path\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\get_placement_ghost_for_item_action.lua:\n    1: local entity_forms = require 'lib.entity_forms.entity_forms_lib'\n    2  \n    3  local Entity = _radiant.om.Entity\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\get_town_banner.lua:\n    1  local Entity = _radiant.om.Entity\n    2: local Town = require 'services.server.town.town'\n    3  local GetTownBanner = class()\n    4  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\get_town_center.lua:\n    1: local Town = require 'services.server.town.town'\n    2  local Point3 = _radiant.csg.Point3\n    3  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\goto_entity_in_storage_action.lua:\n    1: local entity_forms = require 'stonehearth.lib.entity_forms.entity_forms_lib'\n    2  \n    3  local Entity = _radiant.om.Entity\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\goto_town_banner.lua:\n    1  local Point3 = _radiant.csg.Point3\n    2  local Entity = _radiant.om.Entity\n    3: local Town = require 'services.server.town.town'\n    4  \n    5  local GotoTownBanner = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\goto_town_center.lua:\n    1: local Town = require 'services.server.town.town'\n    2  local Point3 = _radiant.csg.Point3\n    3  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\idle_despair_action.lua:\n    1: local constants = require 'constants'\n    2  \n    3  local IdleDespairAction = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\idle_weighted_action.lua:\n    1: local WeightedSet = require 'lib.algorithms.weighted_set'\n    2  local rng = _radiant.math.get_default_rng()\n    3  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\light_firepit.lua:\n    2     Task that represents a worker bringing a piece of wood to a firepit and setting it on fire.\n    3  ]]\n    4: FirepitComponent  = require 'components.firepit.firepit_component'\n    5  local Point3 = _radiant.csg.Point3\n    6  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\patrol_action.lua:\n    1: local constants = require 'constants'\n    2  \n    3  local Patrol = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\patrol_as_party_action.lua:\n    1: local constants = require 'constants'\n    2  \n    3  local PatrolAsParty = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\pickup_ingredient_with_material_action.lua:\n    1: local IngredientList = require 'components.workshop.ingredient_list'\n    2  local Entity = _radiant.om.Entity\n    3  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\pickup_ingredient_with_uri_action.lua:\n    1: local IngredientList = require 'components.workshop.ingredient_list'\n    2  local Entity = _radiant.om.Entity\n    3  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\pickup_item_action.lua:\n    1: local entity_forms_lib = require 'lib.entity_forms.entity_forms_lib'\n    2  local Entity = _radiant.om.Entity\n    3  local PickupItem = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\pickup_item_from_backpack_action.lua:\n    1: local entity_forms_lib = require 'lib.entity_forms.entity_forms_lib'\n    2  \n    3  local Entity = _radiant.om.Entity\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\pickup_item_from_crafter_backpack_action.lua:\n    1: local entity_forms_lib = require 'lib.entity_forms.entity_forms_lib'\n    2  \n    3  local Entity = _radiant.om.Entity\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\pickup_item_from_storage_action.lua:\n    1: local entity_forms = require 'stonehearth.lib.entity_forms.entity_forms_lib'\n    2  \n    3  local Entity = _radiant.om.Entity\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\pickup_item_with_uri_action.lua:\n    1  local Entity = _radiant.om.Entity\n    2: local entity_forms_lib = require 'stonehearth.lib.entity_forms.entity_forms_lib'\n    3  \n    4  local PickupItemWithUri = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\place_item_on_structure_action.lua:\n    1: local entity_forms = require 'lib.entity_forms.entity_forms_lib'\n    2  \n    3  local Entity = _radiant.om.Entity\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\place_item_type_on_structure_action.lua:\n    1: local entity_forms = require 'lib.entity_forms.entity_forms_lib'\n    2  \n    3  local Entity = _radiant.om.Entity\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\produce_crafted_items.lua:\n    1  local Entity = _radiant.om.Entity\n    2: local CraftOrder = require 'components.workshop.craft_order'\n    3  local rng = _radiant.math.get_default_rng()\n    4  local Point3 = _radiant.csg.Point3\n    5: local constants = require 'constants'\n    6  \n    7  local ProduceCraftedItems = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\restock_storage_action.lua:\n    1: local constants = require 'constants'\n    2  local Entity = _radiant.om.Entity\n    3  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\run_away_from_entity_action.lua:\n    1: local AiHelpers = require 'ai.actions.ai_helpers'\n    2  local Entity = _radiant.om.Entity\n    3  local Point3 = _radiant.csg.Point3\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\run_random_chance_effect_action.lua:\n    1  local RunRandomChanceEffectAction = class()\n    2  \n    3: local WeightedSet = require 'lib.algorithms.weighted_set'\n    4: local WeightedEffectsLib = require 'ai.lib.weighted_effects_lib'\n    5  local rng = _radiant.math.get_default_rng()\n    6  local Entity = _radiant.om.Entity\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\steal_items_in_stockpile_action.lua:\n    1: local entity_forms = require 'stonehearth.lib.entity_forms.entity_forms_lib'\n    2  \n    3  local Entity = _radiant.om.Entity\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\stockpile_arson_action.lua:\n    1  local StockpileArson = class()\n    2: local StockpileComponent = require 'components.stockpile.stockpile_component'\n    3  local Entity = _radiant.om.Entity\n    4  local Point3 = _radiant.csg.Point3\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\teardown_ladder_adjacent_action.lua:\n    1: local LadderBuilder = require 'services.server.build.ladder_builder'\n    2  local Entity = _radiant.om.Entity\n    3  local Point3 = _radiant.csg.Point3\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\teardown_structure_action.lua:\n    1: local build_util = require 'lib.build_util'\n    2  \n    3  local Point3 = _radiant.csg.Point3\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\walk_in_formation_action.lua:\n    1: local constants = require 'constants'\n    2: local PatrolHelpers = require 'ai.actions.patrol_helpers'\n    3  local Entity = _radiant.om.Entity\n    4  local log = radiant.log.create_logger('town_patrol')\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\walk_in_formation_trivial_action.lua:\n    1: local constants = require 'constants'\n    2: local PatrolHelpers = require 'ai.actions.patrol_helpers'\n    3  local Entity = _radiant.om.Entity\n    4  local WalkInFormationTrivial = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\work_at_workshop_action.lua:\n    1: local CraftOrder = require 'components.workshop.craft_order'\n    2  local Entity = _radiant.om.Entity\n    3  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\work_at_workshop_type.lua:\n    1  local Entity = _radiant.om.Entity\n    2: local CraftOrder = require 'components.workshop.craft_order'\n    3  \n    4  --This action only runs if we passed in a workshop type\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\carrying\\drop_carrying_unless_action.lua:\n    1  local Entity = _radiant.om.Entity\n    2: local entity_forms_lib = require 'lib.entity_forms.entity_forms_lib'\n    3  local DropCarryingUnless = class()\n    4  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\combat\\attack_after_cooldown_action.lua:\n    1: local constants = require 'constants'\n    2  local Entity = _radiant.om.Entity\n    3  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\combat\\attack_melee_adjacent_action.lua:\n    1: local AssaultContext = require 'services.server.combat.assault_context'\n    2: local BatteryContext = require 'services.server.combat.battery_context'\n    3: local constants = require 'constants'\n    4  local Entity = _radiant.om.Entity\n    5  local rng = _radiant.math.get_default_rng()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\combat\\attack_ranged_action.lua:\n    1: local AssaultContext = require 'services.server.combat.assault_context'\n    2: local BatteryContext = require 'services.server.combat.battery_context'\n    3: local constants = require 'constants'\n    4  local Entity = _radiant.om.Entity\n    5  local Point3 = _radiant.csg.Point3\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\combat\\combat_action.lua:\n    1: local constants = require 'constants'\n    2  local log = radiant.log.create_logger('combat')\n    3  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\combat\\combat_idle_dispatcher.lua:\n    1: local constants = require 'constants'\n    2  \n    3  local CombatIdleDispatcher = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\combat\\defend_dispatcher.lua:\n    1: local constants = require 'constants'\n    2  local Entity = _radiant.om.Entity\n    3  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\combat\\execute_heal_action.lua:\n    1: local HealContext = require 'services.server.combat.heal_context'\n    2: local constants = require 'constants'\n    3  local Entity = _radiant.om.Entity\n    4  local Point3 = _radiant.csg.Point3\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\combat\\heal_after_cooldown_action.lua:\n    1: local constants = require 'constants'\n    2  local Entity = _radiant.om.Entity\n    3  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\combat\\join_combat_action.lua:\n    1: local constants = require 'constants'\n    2  \n    3  local JoinCombat = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\combat\\move_to_targetable_location_action.lua:\n    1: local FollowPath = require 'ai.lib.follow_path'\n    2  local Path = _radiant.sim.Path\n    3  local Entity = _radiant.om.Entity\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\combat\\panic_dispatcher.lua:\n    1: local constants = require 'constants'\n    2  \n    3  local PanicDispatcher = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\combat\\siege_attack_ranged_action.lua:\n    1: local AssaultContext = require 'services.server.combat.assault_context'\n    2: local BatteryContext = require 'services.server.combat.battery_context'\n    3: local constants = require 'constants'\n    4  local Entity = _radiant.om.Entity\n    5  local Point3 = _radiant.csg.Point3\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\conversation\\conversation_talk_action.lua:\n    1  local log = radiant.log.create_logger('conversation')\n    2  local Entity = _radiant.om.Entity\n    3: local constants = require 'constants'\n    4  \n    5  local ConversationTalk = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\fabrication\\fabricate_structure_free_action.lua:\n    1: local build_util = require 'lib.build_util'\n    2  \n    3  local Point3 = _radiant.csg.Point3\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\health\\heal_entity_adjacent_action.lua:\n    1  local Point3 = _radiant.csg.Point3\n    2  local Entity = _radiant.om.Entity\n    3: local ConsumablesLib = require 'ai.lib.consumables_lib'\n    4  \n    5  local HealEntityAdjacent = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\pet\\check_out_random_friend_action.lua:\n    1: local pet_lib = require 'ai.lib.pet_lib'\n    2  local rng = _radiant.math.get_default_rng()\n    3: local WeightedSet = require 'lib.algorithms.weighted_set'\n    4  \n    5  local CheckOutRandomFriend = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\pet\\get_off_ladder_action.lua:\n    1: local constants = require 'constants'\n    2  \n    3  local GetOffLadder = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\pet\\pet_run_to_safety_action.lua:\n    1  local rng = _radiant.math.get_default_rng()\n    2: local constants = require 'constants'\n    3  \n    4  local PetRunToSafety = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\pet\\pet_wait_at_safety_point_action.lua:\n    1  local rng = _radiant.math.get_default_rng()\n    2: local constants = require 'constants'\n    3  \n    4  local PetWaitAtSafetyPoint = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\siege\\run_to_siege_object.lua:\n    1  local rng = _radiant.math.get_default_rng()\n    2: local constants = require 'constants'\n    3  \n    4  local RunToSiege = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\siege\\siege_idle_action.lua:\n    1: local constants = require 'constants'\n    2  local Entity = _radiant.om.Entity\n    3  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\town_alert\\run_to_safety_action.lua:\n    1  local rng = _radiant.math.get_default_rng()\n    2: local constants = require 'constants'\n    3  \n    4  local RunToSafety = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\town_alert\\wait_at_safety_point_action.lua:\n    1: local constants = require 'constants'\n    2  \n    3  local WaitAtSafetyPoint = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\trapping\\check_bait_trap_adjacent_action.lua:\n    1: local LootTable = require 'lib.loot_table.loot_table'\n    2  local Entity = _radiant.om.Entity\n    3  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\unit_control\\unit_hold_location_action.lua:\n    1  local Point3 = _radiant.csg.Point3\n    2  local Entity = _radiant.om.Entity\n    3: local IndividualCommand = require 'ai.actions.unit_control.individual_command_action'\n    4  local UnitHoldLocation = class()\n    5  UnitHoldLocation.status_text_key = 'stonehearth:ai.actions.status_text.unit_hold_location'\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\upgrade_equipment\\equip_carrying_action.lua:\n    1: local entity_forms = require 'lib.entity_forms.entity_forms_lib'\n    2  local entity = _radiant.om.Entity\n    3  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\upgrade_equipment\\upgrade_equipment_action.lua:\n    1: local constants = require 'constants'\n    2  \n    3  local UpgradeEquipmentPiece = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\lib\\consumables_lib.lua:\n    1  local ConsumablesLib = class()\n    2: local entity_forms_lib = require 'stonehearth.lib.entity_forms.entity_forms_lib'\n    3  \n    4  local SCRIPTS_CACHE = {}\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\lib\\raycast_lib.lua:\n    1: local constants = require 'constants'\n    2  local Point3 = _radiant.csg.Point3\n    3  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\lib\\weighted_effects_lib.lua:\n    1  local WeightedEffectsLib = class()\n    2  local rng = _radiant.math.get_default_rng()\n    3: local WeightedSet = require 'lib.algorithms.weighted_set'\n    4  \n    5  function WeightedEffectsLib.get_resolved_effect(entity, effect_name)\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\observers\\aggro_observer.lua:\n    1: local constants = require 'constants'\n    2  local log = radiant.log.create_logger('combat')\n    3  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\observers\\combat_panic_observer.lua:\n    3  -- @section observer\n    4  \n    5: local constants = require 'constants'\n    6  local log = radiant.log.create_logger('combat')\n    7  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\observers\\darkness_observer.lua:\n    1: local constants = require 'constants'\n    2: local RaycastLib = require 'ai.lib.raycast_lib'\n    3  local Point3 = _radiant.csg.Point3\n    4  local Cube3 = _radiant.csg.Cube3\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\observers\\health_observer.lua:\n    1: local ConsumptionComponent = require 'stonehearth.components.consumption.consumption_component'\n    2  \n    3   -- sigh these constants are here because sometimes this observer is accessed before constants are assigned to stonehearth -yshan\n    4: local constants = require 'constants'\n    5  \n    6  local HealthObserver = class()\n    .\n    8  local VERSIONS = {\n    9     ZERO = 0,\n   10:    ONE = 1, -- Used to be imminent death notification but that did not require the version bump.\n   11  }\n   12  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\observers\\open_space_observer.lua:\n    1: local constants = require 'constants'\n    2: local RaycastLib = require 'ai.lib.raycast_lib'\n    3  local Point3 = _radiant.csg.Point3\n    4  local Point2 = _radiant.csg.Point2\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\observers\\siege_find_target_observer.lua:\n    1: local FindTargetObserver = require 'ai.observers.find_target_observer'\n    2  local log = radiant.log.create_logger('combat')\n    3  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\observers\\sleepiness_observer.lua:\n    4     Sleeping always resets us to a sleepiness of 0.\n    5  ]]\n    6: local constants = require 'constants'\n    7: local RaycastLib = require 'ai.lib.raycast_lib'\n    8  local Point3 = _radiant.csg.Point3\n    9  local Cube3 = _radiant.csg.Cube3\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\call_handlers\\build_call_handler.lua:\n    1: local build_util = require 'lib.build_util'\n    2  \n    3  local Cube3 = _radiant.csg.Cube3\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\call_handlers\\camera_call_handler.lua:\n    2  local Point3 = _radiant.csg.Point3\n    3  \n    4: local MoveToCameraController = require 'services.client.camera.move_to_camera_controller'\n    5  local CameraCallHandler = class()\n    6  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\call_handlers\\entities_call_handler.lua:\n    1: local entity_forms_lib = require 'lib.entity_forms.entity_forms_lib'\n    2  local Point3 = _radiant.csg.Point3\n    3  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\call_handlers\\job_call_handler.lua:\n    1: local constants = require 'constants'\n    2: local GrabTalismanAction = require 'ai.actions.grab_talisman_action'\n    3  local JobCallHandler = class()\n    4  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\call_handlers\\mining_call_handler.lua:\n    1: local constants = require 'constants'\n    2: local csg_lib = require 'lib.csg.csg_lib'\n    3: local build_util = require 'lib.build_util'\n    4  local Point3 = _radiant.csg.Point3\n    5  local Cube3 = _radiant.csg.Cube3\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\call_handlers\\new_game_call_handler.lua:\n    1: local constants = require 'constants'\n    2: local Array2D = require 'services.server.world_generation.array_2D'\n    3: local BlueprintGenerator = require 'services.server.world_generation.blueprint_generator'\n    4  \n    5  local Point2 = _radiant.csg.Point2\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\call_handlers\\place_item_call_handler.lua:\n    1: local build_util = require 'lib.build_util'\n    2: local entity_forms = require 'lib.entity_forms.entity_forms_lib'\n    3: local ItemPlacer = require 'services.client.build_editor.item_placer'\n    4  local Entity = _radiant.om.Entity\n    5  local Point3 = _radiant.csg.Point3\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\call_handlers\\resource_call_handler.lua:\n    5  local Point2 = _radiant.csg.Point2\n    6  local farming_service = stonehearth.farming\n    7: local ConsumablesLib = require 'ai.lib.consumables_lib'\n    8: local entity_forms_lib = require 'stonehearth.lib.entity_forms.entity_forms_lib'\n    9  \n   10  local ResourceCallHandler = class()\n   ..\n   13     stonehearth.selection:select_xz_region('box_harvest_resources')\n   14        :set_max_size(50)\n   15:       :require_supported(true)\n   16        :use_outline_marquee(Color4(0, 255, 0, 32), Color4(0, 255, 0, 255))\n   17        :set_cursor('stonehearth:cursors:harvest')\n   ..\n   74  function ResourceCallHandler:box_clear_resources(session, response)\n   75     stonehearth.selection:select_xz_region('box_clear_resources')\n   76:       :require_supported(true)\n   77        :use_outline_marquee(Color4(188, 52, 43, 32), Color4(188, 52, 43, 255))\n   78        :set_cursor('stonehearth:cursors:clear')\n   ..\n  169  function ResourceCallHandler:box_cancel_task(session, response)\n  170     stonehearth.selection:select_xz_region('box_cancel_task')\n  171:       :require_supported(true)\n  172        :use_outline_marquee(Color4(180, 180, 180, 32), Color4(180, 180, 180, 255))\n  173        :set_cursor('stonehearth:cursors:cancel')\n  ...\n  208  function ResourceCallHandler:box_loot_items(session, response)\n  209     stonehearth.selection:select_xz_region('box_loot_items')\n  210:       :require_supported(true)\n  211        --Change this color to something else\n  212        :use_outline_marquee(Color4(255, 235, 0, 32), Color4(255, 235, 0, 255))\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\call_handlers\\settings_call_handler.lua:\n    1  local SettingsCallHandler = class()\n    2: local PathFinderRenderer = require 'renderers.pathfinder.pathfinder_renderer'\n    3  \n    4  function SettingsCallHandler:on_client_config_changed(session, response, should_show)\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\call_handlers\\shepherd_call_handler.lua:\n    9        :set_min_size(10)\n   10        :set_max_size(50)\n   11:       :require_unblocked(false)\n   12        :use_designation_marquee(Color4(56, 80, 0, 255))\n   13        :set_find_support_filter(stonehearth.selection.valid_terrain_blocks_only_xz_region_support_filter({\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\call_handlers\\trapping_call_handler.lua:\n   10        :set_min_size(10)\n   11        :set_max_size(50)\n   12:       :require_unblocked(false)\n   13        :use_designation_marquee(Color4(122, 40, 0, 255))\n   14        :set_find_support_filter(stonehearth.selection.valid_terrain_blocks_only_xz_region_support_filter({\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\components\\ai\\ai_component.lua:\n    1: local Thread = require 'services.server.threads.thread'\n    2: local ExecutionFrame = require 'components.ai.execution_frame'\n    3: local ReferenceCounter = require 'lib.reference_counter.reference_counter'\n    4  local AIComponent = class()\n    5  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\components\\ai\\execution_frame.lua:\n    1: local ExecutionFrame = require 'components.ai.state_machine'\n    2: local ExecutionUnitV2 = require 'components.ai.execution_unit_v2'\n    3  \n    4  local Point3 = _radiant.csg.Point3\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\components\\ai\\execution_unit_v2.lua:\n   22  local EU_STATS = {}\n   23  \n   24: local placeholders = require 'services.server.ai.placeholders'\n   25: local ObjectMonitor = require 'components.ai.object_monitor'\n   26  \n   27  function ExecutionUnitV2._dump_and_reset_stats()\n   ..\n  446     self:_set_state(THINKING)\n  447  \n  448:    -- create an object monitor to keep track of all the entities required by\n  449     -- this action.\n  450     self._object_monitor = self:_create_object_monitor()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\components\\attributes\\attributes_component.lua:\n   48  ]]\n   49  \n   50: local constants = require 'constants'\n   51: local IntegerGaussianRandom = require 'lib.math.integer_gaussian_random'\n   52: local AttributeModifier = require 'components.attributes.attribute_modifier'\n   53  local rng = _radiant.math.get_default_rng()\n   54  local log = radiant.log.create_logger('attributes')\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\components\\buffs\\buff.lua:\n    1: local modifiers_lib = require 'stonehearth.lib.modifiers.modifiers_lib'\n    2  \n    3  local Buff = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\components\\buffs\\buffs_component.lua:\n    1: Buff = require 'components.buffs.buff'\n    2: AttributeModifier = require 'components.attributes.attribute_modifier'\n    3  \n    4  local BuffsComponent = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\components\\building\\building_component.lua:\n    1: local csg_lib = require 'lib.csg.csg_lib'\n    2: local build_util = require 'lib.build_util'\n    3: local constants = require('constants').construction\n    4  \n    5  local Building = class()\n    .\n   12  local Array2D = _radiant.csg.Array2D\n   13  local TraceCategories = _radiant.dm.TraceCategories\n   14: local ScaffoldingRegion = require 'stonehearth.components.scaffolding.scaffolding_region'\n   15  \n   16  local INFINITY = 10000000\n   ..\n 1480  \n 1481           for _, section in ipairs(all_sub_sections) do\n 1482:             -- the new floor call requires a world space region\n 1483              stonehearth.build:add_new_floor_from_existing_region_to_building(\n 1484                                                        self._entity,\n ....\n 2176              entry.ordered_anti_dependencies = {}\n 2177              for did, ad in pairs(entry.anti_dependencies) do\n 2178:                local required_deps = collect_deps(ad, entry.anti_dependencies)\n 2179:                entry.ordered_anti_dependencies[did] = required_deps\n 2180              end\n 2181           end\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\components\\column\\column_component.lua:\n    1: local build_util = require 'lib.build_util'\n    2: local constants = require('constants').construction\n    3  \n    4  local Column = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\components\\construction_data\\construction_data_component.lua:\n    8  \n    9  local log = radiant.log.create_logger('build')\n   10: local SvTable = require 'radiant.lib.sv_table'\n   11  \n   12  local SETTING_NAMES = nil\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\components\\construction_progress\\construction_progress_component.lua:\n    1: local build_util = require 'lib.build_util'\n    2: local voxel_brush_util = require 'services.server.build.voxel_brush_util'\n    3  \n    4  local ConstructionProgress = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\components\\conversation\\conversation_component.lua:\n    1  local rng = _radiant.math.get_default_rng()\n    2: local constants = require 'constants'\n    3  --[[\n    4     This component keeps track of tasks and variables unique to this entity that are used while\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\components\\crafter\\crafter_component.lua:\n    9  \n   10  local CrafterComponent = class()\n   11: local CraftItems = require 'services.server.town.orchestrators.craft_items_orchestrator'\n   12  local log = radiant.log.create_logger('crafter')\n   13  \n   ..\n  127  \n  128  --Find the first item and remove it.\n  129: --May return a destroyed item. The caller might want to know that the required ingredients no longer exist.\n  130  function CrafterComponent:get_first_item_data()\n  131     if not self._storage_component then\n  ...\n  140  \n  141  --Find the first item and remove it.\n  142: --May return a destroyed item. The caller might want to know that the required ingredients no longer exist.\n  143  function CrafterComponent:remove_first_item()\n  144     if not self._storage_component then\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\components\\customization\\customization_component.lua:\n    1  local log = radiant.log.create_logger('customization')\n    2: local WeightedSet = require 'lib.algorithms.weighted_set'\n    3  local rng = _radiant.math.get_default_rng()\n    4: local constants = require 'constants'\n    5  \n    6  --[[\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\components\\entity_forms\\entity_forms_component.lua:\n    1: local build_util = require 'lib.build_util'\n    2: local entity_forms = require 'lib.entity_forms.entity_forms_lib'\n    3  \n    4  local Point3 = _radiant.csg.Point3\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\components\\equipment_piece\\equipment_piece_component.lua:\n   77  end\n   78  \n   79: function EquipmentPieceComponent:get_required_job_level()\n   80:    return self._json.required_job_level or 0\n   81  end\n   82  \n   ..\n  175     end\n  176  \n  177:    if self:get_required_job_level() > job_component:get_current_job_level() then\n  178        -- not high enough level to equip this\n  179        return false\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\components\\expendable_resources\\expendable_resources_component.lua:\n    2     A component for entity resources that deplete / refill over time\n    3  ]]\n    4: local SvTable = require 'radiant.lib.sv_table'\n    5  local log = radiant.log.create_logger('expendable_resources')\n    6  local rng = _radiant.math.get_default_rng()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\components\\fabricator\\fabricator_component.lua:\n    1: local WorkerPermitManager = require 'lib.worker.worker_permit_manager'\n    2: local build_util = require 'lib.build_util'\n    3: local csg_lib = require 'lib.csg.csg_lib'\n    4: local constants = require 'constants'\n    5: local priorities = require('constants').priorities.simple_labor\n    6  \n    7  local Point2 = _radiant.csg.Point2\n    .\n   29  \n   30  -- Every time this many blocks have been filled\n   31: -- we call the building to update building cost because we will require less materials\n   32  local AREA_CHANGE_UPDATE_FREQUENCY = 55\n   33  \n   ..\n  552  \n  553     -- if there's a resource material specified in the construction_data component,\n  554:    -- the entire structure should be built of that material.  only one proxy required!\n  555     if self._resource_material then\n  556        create_proxy(self._resource_material)\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\components\\fixture_fabricator\\fixture_fabricator_component.lua:\n    1: local build_util = require 'lib.build_util'\n    2: local entity_forms = require 'lib.entity_forms.entity_forms_lib'\n    3  \n    4  local Entity = _radiant.om.Entity\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\components\\floor\\floor_component.lua:\n    1: local build_util = require 'lib.build_util'\n    2: local constants = require('constants').construction\n    3  \n    4  local Floor = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\components\\ghost_form\\ghost_form_component.lua:\n    1  local Point3 = _radiant.csg.Point3\n    2: local build_util = require 'lib.build_util'\n    3: local entity_forms_lib = require 'stonehearth.lib.entity_forms.entity_forms_lib'\n    4  \n    5  --[[\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\components\\happiness\\happiness_component.lua:\n    1: local constants = require 'constants'\n    2  local THOUGHTS_JSON = radiant.resources.load_json('stonehearth:data:thoughts', true)\n    3  assert(THOUGHTS_JSON, 'stonehearth:data:thoughts is missing or invalid')\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\components\\job\\job_component.lua:\n  607     local equation = string.gsub(self._xp_equation, 'next_level', next_level)\n  608     local fn = loadstring('return ' .. equation)\n  609:    local xp_required = math.ceil(fn())\n  610:    return xp_required\n  611  end\n  612  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\components\\lamp\\lamp_component.lua:\n    1: local constants = require 'constants'\n    2  local LampComponent = class()\n    3  local Point3 = _radiant.csg.Point3\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\components\\lease\\lease_component.lua:\n    2     Adding this component to an entity makes it lease-able.\n    3  ]]\n    4: local SvTable = require 'radiant.lib.sv_table'\n    5  local LeaseComponent = class()\n    6  local log = radiant.log.create_logger('lease')\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\components\\loot_drops\\loot_drops_component.lua:\n    1: local LootTable = require 'stonehearth.lib.loot_table.loot_table'\n    2  \n    3  --[[\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\components\\material\\material_component.lua:\n    2     Todo, document this thing\n    3  ]]\n    4: local SvTable = require 'radiant.lib.sv_table'\n    5: local Material = require 'components.material.material'\n    6  \n    7  local MaterialComponent = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\components\\mining_zone\\mining_zone_component.lua:\n    1: local csg_lib = require 'lib.csg.csg_lib'\n    2: local WorkerPermitManager = require 'lib.worker.worker_permit_manager'\n    3  \n    4  local Point3 = _radiant.csg.Point3\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\components\\observers\\observers_component.lua:\n    1: local ReferenceCounter = require 'lib.reference_counter.reference_counter'\n    2  \n    3  local ObserversComponent = class()\n    .\n   58  \n   59     -- This is weird. On load, just like actions, the thing that wants the observer\n   60:    -- is required to reinject it onto the entity. However, observers are stateful\n   61     -- and we don't want to destroy the saved state of the observer, so just accept\n   62     -- the saved instance (if it exists) instead of creating a new instance.\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\components\\party\\party_component.lua:\n    2  \n    3  local PartyComponent = class()\n    4: local PartyGuardAction = require 'services.server.unit_control.actions.party_guard_action'\n    5  \n    6  PartyComponent.ATTACK = 'attack'\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\components\\pathfinder\\pathfinder_component.lua:\n    1: local BfsSearch = require 'components.pathfinder.bfs_search'\n    2: local IpfSearch = require 'components.pathfinder.ipf_search'\n    3: local AStarSearch = require 'components.pathfinder.astar_search'\n    4  local Cube3 = _radiant.csg.Cube3\n    5  local Point3 = _radiant.csg.Point3\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\components\\pet\\pet_component.lua:\n    1: local PetOrchestrator = require 'services.server.town.orchestrators.pet_orchestrator'\n    2  local rng = _radiant.math.get_default_rng()\n    3  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\components\\properties\\properties_component.lua:\n    1: local modifiers_lib = require 'stonehearth.lib.modifiers.modifiers_lib'\n    2  \n    3  --[[\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\components\\renewable_resource_node\\renewable_resource_node_component.lua:\n    1  local RenewableResourceNodeComponent = class()\n    2: local LootTable = require 'lib.loot_table.loot_table'\n    3  local HARVEST_ACTION = 'stonehearth:harvest_renewable_resource'\n    4  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\components\\resource_node\\resource_node_component.lua:\n    1  local ResourceNodeComponent = class()\n    2: local LootTable = require 'lib.loot_table.loot_table'\n    3  local HARVEST_ACTION = 'stonehearth:harvest_resource'\n    4  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\components\\roof\\roof_component.lua:\n    1: local csg_lib = require 'lib.csg.csg_lib'\n    2: local build_util = require 'lib.build_util'\n    3: local constants = require('constants').construction\n    4  \n    5  local Roof = class()\n    .\n  160  \n  161     -- xxx: i wish we didnt have to do all this fixup nonsense.  fixing\n  162:    -- it requires being able to convert json back to value types, which\n  163     -- is somewhat tricky...\n  164     --[[\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\components\\scaffolding\\scaffolding.lua:\n    1  local logger = radiant.log.create_logger('build.scaffolding.scaffolding')\n    2  \n    3: local build_util = require 'stonehearth.lib.build_util'\n    4: local csg_lib = require 'lib.csg.csg_lib'\n    5  \n    6: local ScaffoldingRegion = require 'stonehearth.components.scaffolding.scaffolding_region'\n    7  \n    8  local Region3 = _radiant.csg.Region3\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\components\\scaffolding\\scaffolding_project.lua:\n    1  local logger = radiant.log.create_logger('build.scaffolding.project')\n    2: local build_util = require 'stonehearth.lib.build_util'\n    3  \n    4  local Point3  = _radiant.csg.Point3\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\components\\scaffolding\\scaffolding_project_flat.lua:\n    1  local logger = radiant.log.create_logger('build.scaffolding.project_flat')\n    2: local build_util = require 'stonehearth.lib.build_util'\n    3  \n    4  local ScaffoldingProjectFlat = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\components\\scaffolding\\scaffolding_project_volume.lua:\n    1  local logger = radiant.log.create_logger('build.scaffolding.project_volume')\n    2: local build_util = require 'stonehearth.lib.build_util'\n    3  \n    4  local Cube3   = _radiant.csg.Cube3\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\components\\scaffolding\\scaffolding_region.lua:\n    1  local logger = radiant.log.create_logger('build.scaffolding.region')\n    2: local build_util = require 'stonehearth.lib.build_util'\n    3  \n    4  local Cube3   = _radiant.csg.Cube3\n    .\n  494        -- The structure is complete, but is the scaffolding?  We can't actually stop the\n  495        -- scaffolding just because the structure is done, because fully completed scaffolding\n  496:       -- is the only way to be sure that our reachability requirements are met (so that we can\n  497        -- be sure the building completes.)  So, update our blueprint region to be the complete\n  498        -- blueprint of this structure.\n  ...\n 1365     local best_normal = nil\n 1366     local total_scaffolding = nil\n 1367:    local required_scaffolding = nil\n 1368     for _, normal in ipairs(normals) do\n 1369:       total_scaffolding, required_scaffolding, ignored = self:_compute_total_scaffolding_region(normal)\n 1370  \n 1371        if total_scaffolding then\n 1372:          local new_total_scaffolding, new_deps, new_inverse_deps, new_anti_deps, new_other_scaffolding = self:_check_proposed_scaffolding(total_scaffolding, required_scaffolding, normal)\n 1373  \n 1374           if new_total_scaffolding ~= nil then\n ....\n 1524  end\n 1525  \n 1526: function ScaffoldingRegion:_check_proposed_scaffolding(total_scaffolding, required_scaffolding, normal)\n 1527     local dependencies = {}\n 1528     local inverse_dependencies = {}\n ....\n 1571  \n 1572     -- TODO: this over-constrains dependencies for scaffolding (though not in a way that should create errors,\n 1573:    -- just inefficiency.)  Ideally, we'd start with the required scaffolding region, and then project down\n 1574     -- not to the world, but to the union of the terrain and all the blueprints for this building, recording\n 1575     -- the blueprints that we end up touching.  This would give us our true, minimal list of dependencies\n ....\n 1581           local world_dest = dest_region:translated(radiant.entities.get_world_grid_location(entity))\n 1582           if visited_structures[id] then\n 1583:             if required_scaffolding:intersects_region(world_dest) then\n 1584                 -- Scaffolding MUST go where a structure already exists (is in our way).  Make sure we get built first!\n 1585:                self:_log('info', 'required scaffolding %s intersects past blueprint %s', new_total_scaffolding:get_bounds(), entity)\n 1586                 inverse_dependencies[id] = entity\n 1587                 anti_dependencies[id] = entity\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\components\\shop\\shop_component.lua:\n    1  local Point3 = _radiant.csg.Point3\n    2  local rng = _radiant.math.get_default_rng()\n    3: local constants = require 'constants'\n    4  \n    5  local ShopComponent = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\components\\siege_weapon\\siege_weapon_component.lua:\n    1: --local build_util = require 'lib.build_util'\n    2  local Point3 = _radiant.csg.Point3\n    3  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\components\\social\\animal_social_component.lua:\n    1: local pet_lib = require 'ai.lib.pet_lib'\n    2: local constants = require 'constants'\n    3  local rng = _radiant.math.get_default_rng()\n    4: local WeightedSet = require 'lib.algorithms.weighted_set'\n    5  \n    6  local AnimalSocialComponent = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\components\\social\\social_component.lua:\n    1: local constants = require 'constants'\n    2  local rng = _radiant.math.get_default_rng()\n    3: local WeightedSet = require 'lib.algorithms.weighted_set'\n    4  \n    5  local SocialComponent = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\components\\stairs\\stairs_component.lua:\n    1: local build_util = require 'lib.build_util'\n    2: local constants = require('constants').construction\n    3  \n    4  local Stairs = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\components\\starvation\\animal_starvation_component.lua:\n    1: local ConsumptionComponent = require 'stonehearth.components.consumption.consumption_component'\n    2  \n    3  local AnimalStarvationComponent = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\components\\starvation\\starvation_component.lua:\n    1: local ConsumptionComponent = require 'stonehearth.components.consumption.consumption_component'\n    2  \n    3  local StarvationComponent = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\components\\storage\\storage_component.lua:\n    1: local SvTable = require 'radiant.lib.sv_table'\n    2  \n    3: local entity_forms_lib = require 'lib.entity_forms.entity_forms_lib'\n    4: local constants = require 'constants'\n    5  local TraceCategories = _radiant.dm.TraceCategories\n    6  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\components\\subject_matter\\subject_matter_component.lua:\n    1: local constants = require 'constants'\n    2  local rng = _radiant.math.get_default_rng()\n    3  local SubjectMatterComponent = radiant.class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\components\\target_tables\\target_tables_component.lua:\n    1: local TargetTable = require 'components.target_tables.target_table'\n    2  \n    3  local TargetTables = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\components\\task_tracker\\task_tracker_component.lua:\n   12     self._sv.task_player_id = nil -- Player id of the town that requested the task\n   13     self._sv.task_category = nil -- The category the task belongs to\n   14:    self._sv.task_activity_name = nil -- The activity the task requires\n   15     self._sv._task_effect_name = nil -- The effect, if any, the task adds to the entity\n   16     self._sv._cancelled_if_entity_moves = false\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\components\\traits\\trait.lua:\n    1: local modifiers_lib = require 'stonehearth.lib.modifiers.modifiers_lib'\n    2  \n    3  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\components\\trapping\\trapping_grounds_component.lua:\n    5  local rng = _radiant.math.get_default_rng()\n    6  local log = radiant.log.create_logger('trapping')\n    7: local WeightedSet = require 'lib.algorithms.weighted_set'\n    8  \n    9  local TrappingGroundsComponent = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\components\\wall\\wall_component.lua:\n    1: local build_util = require 'lib.build_util'\n    2: local constants = require('constants').construction\n    3  \n    4  local Wall = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\components\\water\\water_component.lua:\n    1: local constants = require 'constants'\n    2: local csg_lib = require 'lib.csg.csg_lib'\n    3  local Point3 = _radiant.csg.Point3\n    4  local Cube3 = _radiant.csg.Cube3\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\components\\waterfall\\waterfall_component.lua:\n    1: local csg_lib = require 'lib.csg.csg_lib'\n    2  local Point3 = _radiant.csg.Point3\n    3  local Cube3 = _radiant.csg.Cube3\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\components\\workshop\\craft_order.lua:\n   33  ]]\n   34  \n   35: local IngredientList = require 'components.workshop.ingredient_list'\n   36  \n   37  local CraftOrder = class()\n   ..\n  185  \n  186  --Given the usable item tracker, check if we actually have the\n  187: --ingredients required for the recipe. If not, reurn false\n  188  function CraftOrder:_has_ingredients()\n  189     for i, ingredient in ipairs(self._recipe.ingredients) do\n  ...\n  206     --If the crafter is not appropriately leveled, return false\n  207     local job_level = crafter:get_component('stonehearth:job'):get_current_job_level()\n  208:    if job_level and self._recipe.level_requirement and\n  209:       job_level < self._recipe.level_requirement then\n  210        log:detail('craft_order: with recipe %s, crafter %s does not meet requriements', self._recipe.recipe_name, crafter)\n  211        return false\n  212     end\n  213  \n  214:    --If a workshop is required and there is no placed workshop, return false\n  215     if self._recipe.workshop then\n  216        local workshop_data = self._inventory:get_items_of_type(self._recipe.workshop.uri)\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\components\\workshop\\craft_order_list.lua:\n    5  ]]\n    6  \n    7: local CraftOrder = require 'components.workshop.craft_order'\n    8  \n    9  local CraftOrderList = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\components\\workshop\\workshop_component.lua:\n    4  \n    5  local Point3 = _radiant.csg.Point3\n    6: local WorkAtWorkshop = require 'services.server.town.orchestrators.work_at_workshop_orchestrator'\n    7: local CraftOrderList = require 'components.workshop.craft_order_list'\n    8  \n    9  local WorkshopComponent = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\data\\conversation\\default\\default_conversation_script.lua:\n    1: local conversation_lib = require 'stonehearth.lib.conversation.conversation_lib'\n    2: local constants = require 'constants'\n    3  local rng = _radiant.math.get_default_rng()\n    4  local log = radiant.log.create_logger('conversation')\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\data\\conversation\\humanoid_to_animal\\humanoid_to_animal_script.lua:\n    1: local conversation_lib = require 'stonehearth.lib.conversation.conversation_lib'\n    2: local constants = require 'constants'\n    3  local rng = _radiant.math.get_default_rng()\n    4  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\data\\gm\\campaigns\\game_events\\arcs\\trigger\\game_events\\encounters\\daily_report_script.lua:\n    2  local Point3 = _radiant.csg.Point3\n    3  local Cube3 = _radiant.csg.Cube3\n    4: local game_master_lib = require 'lib.game_master.game_master_lib'\n    5  local log = radiant.log.create_logger('immigration_scenario')\n    6  \n    .\n   73     local town_name = stonehearth.town:get_town(self._sv.player_id):get_town_name()\n   74     local num_citizens = stonehearth.population:get_population_size(self._sv.player_id)\n   75:    local summation = self:_eval_requirement(num_citizens)\n   76  \n   77     local message = {\n   ..\n   86  end\n   87  \n   88: function Immigration:_eval_requirement(num_citizens)\n   89     --TODO: the score data should come from all food, not just food in stockpiles\n   90     local score_data = stonehearth.score:get_scores_for_player(self._sv.player_id):get_score_data()\n   ..\n   98        available_food = score_data.total_scores:get('edibles')\n   99     end\n  100:    local food_success, food_data = self:_find_requirements_by_type_and_pop(available_food, 'food', num_citizens)\n  101     log:detail('Food result: %s', radiant.util.table_tostring(food_data))\n  102  \n  ...\n  106        net_worth = score_data.total_scores:get('net_worth')\n  107     end\n  108:    local net_worth_success, net_worth_data = self:_find_requirements_by_type_and_pop(net_worth, 'net_worth', num_citizens)\n  109     net_worth_data.available =  math.floor(net_worth_data.available)\n  110     log:detail('Net Worth result: %s', radiant.util.table_tostring(net_worth_data))\n  ...\n  123  end\n  124  \n  125: function Immigration:_find_requirements_by_type_and_pop(available, type, num_citizens)\n  126:    local equation = self._sv.immigration_data.growth_requirements[type]\n  127     local equation = string.gsub(equation, 'num_citizens', num_citizens)\n  128     local target = self:_evaluate_equation(equation)\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\data\\gm\\campaigns\\game_events\\arcs\\trigger\\game_events\\encounters\\excess_resource_shakedown.lua:\n    1: local entity_forms = require 'lib.entity_forms.entity_forms_lib'\n    2  local rng = _radiant.math.get_default_rng()\n    3: local Relations = require 'lib.player.relations'\n    4  local DEFAULT_TRIBUTE_VALUE = 50\n    5  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\data\\gm\\campaigns\\game_events\\arcs\\trigger\\game_events\\encounters\\happiness_intro_script.lua:\n    2  local Point3 = _radiant.csg.Point3\n    3  local Cube3 = _radiant.csg.Cube3\n    4: local game_master_lib = require 'lib.game_master.game_master_lib'\n    5  \n    6  local HappinessIntro = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\data\\gm\\campaigns\\goblin_war\\arcs\\climax\\ogo_invasion\\encounters\\destroy_goblins.lua:\n    1: local Relations = require 'lib.player.relations'\n    2  \n    3  local DestroyGoblins = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\data\\gm\\campaigns\\goblin_war\\arcs\\trigger\\raidcamp\\encounters\\boss_death_script.lua:\n    1: local Relations = require 'lib.player.relations'\n    2  \n    3  local BossDeathScript = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\data\\gm\\campaigns\\goblin_war\\arcs\\trigger\\raidcamp\\encounters\\goblin_camp_departs.lua:\n    1: local Relations = require 'lib.player.relations'\n    2  \n    3  local GoblinCampDepartsScript = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\data\\gm\\campaigns\\orc_war\\arcs\\trigger\\old_khan\\encounters\\encounter_data\\goblins_depart.lua:\n    1: local Relations = require 'lib.player.relations'\n    2  \n    3  local GoblinCampDepartsScript = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\data\\traits\\charismatic\\charismatic_trait.lua:\n    1: local constants = require 'constants'\n    2  \n    3  local CharismaticTrait = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\data\\traits\\jokester\\jokester_trait.lua:\n    1: local constants = require 'constants'\n    2  \n    3  local JokesterTrait = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\data\\traits\\opinionated\\opinionated_trait.lua:\n    1  local OpinionatedTrait = class()\n    2: local constants = require 'constants'\n    3  \n    4  function OpinionatedTrait:initialize()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\entities\\consumables\\scripts\\heal_target.lua:\n    3  \n    4  function HealTarget.use(consumable, consumable_data, user, target_entity)\n    5:    radiant.assert(user, \"Unable to use consumable %s because it requires a user and user was nil\", consumable)\n    6:    radiant.assert(target_entity, \"Unable to use consumable %s because it requires a target entity and target entity was nil\", consumable)\n    7  \n    8     local attributes_component = target_entity:get_component('stonehearth:attributes')\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\jobs\\base_job.lua:\n    1: local constants = require 'constants'\n    2  \n    3  local BaseJob = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\jobs\\combat_job.lua:\n    1  -- Base class for all crafting jobs.\n    2: local constants = require 'constants'\n    3: local BaseJob = require 'jobs.base_job'\n    4  \n    5  local CombatJob = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\jobs\\crafting_job.lua:\n    1  -- Base class for all crafting jobs.\n    2: local BaseJob = require 'jobs.base_job'\n    3  \n    4  local CraftingJob = class()\n    .\n   54     \n   55     local level_key = 'craft_level_0'\n   56:    local level_required = 0\n   57:    if recipe_data.level_requirement then\n   58:       level_key = 'craft_level_' .. recipe_data.level_requirement\n   59:       level_required = recipe_data.level_requirement\n   60     end\n   61     local job_level = self:get_job_level()\n   ..\n   75     exp = exp + exp_addition\n   76  \n   77:    if level_required < job_level then\n   78:       local difference = job_level - level_required\n   79        exp = exp / difference\n   80     end\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\jobs\\archer\\archer.lua:\n    1  local ArcherClass = class()\n    2: local CombatJob = require 'jobs.combat_job'\n    3  \n    4  radiant.mixin(ArcherClass, CombatJob)\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\jobs\\architect\\architect.lua:\n    1  local ArchitectClass = class()\n    2: local BaseJob = require 'jobs.base_job'\n    3  radiant.mixin(ArchitectClass, BaseJob)\n    4  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\jobs\\blacksmith\\blacksmith.lua:\n    1: local CraftingJob = require 'jobs.crafting_job'\n    2  \n    3  local BlacksmithClass = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\jobs\\carpenter\\carpenter.lua:\n    1: local CraftingJob = require 'jobs.crafting_job'\n    2  \n    3  local CarpenterClass = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\jobs\\cleric\\cleric.lua:\n    1  local ClericClass = class()\n    2: local CombatJob = require 'jobs.combat_job'\n    3  radiant.mixin(ClericClass, CombatJob)\n    4  \n    5: --- Public functions, required for all classes\n    6  \n    7  function ClericClass:initialize()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\jobs\\cook\\cook.lua:\n    1: local CraftingJob = require 'jobs.crafting_job'\n    2  \n    3  local CookClass = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\jobs\\engineer\\engineer.lua:\n    1: local CraftingJob = require 'jobs.crafting_job'\n    2  \n    3  local EngineerClass = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\jobs\\farmer\\farmer.lua:\n    1  local FarmerClass = class()\n    2: local BaseJob = require 'jobs.base_job'\n    3  radiant.mixin(FarmerClass, BaseJob)\n    4  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\jobs\\footman\\footman.lua:\n    1  local FootmanClass = class()\n    2: local CombatJob = require 'jobs.combat_job'\n    3  radiant.mixin(FootmanClass, CombatJob)\n    4  return FootmanClass\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\jobs\\herbalist\\herbalist.lua:\n    1: local CraftingJob = require 'jobs.crafting_job'\n    2  \n    3  local HerbalistClass = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\jobs\\knight\\knight.lua:\n    1  local KnightClass = class()\n    2: local CombatJob = require 'jobs.combat_job'\n    3  radiant.mixin(KnightClass, CombatJob)\n    4  return KnightClass\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\jobs\\magmasmith\\magmasmith.lua:\n    1: local CraftingJob = require 'jobs.crafting_job'\n    2  \n    3  local MagmasmithClass = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\jobs\\mason\\mason.lua:\n    1: local CraftingJob = require 'jobs.crafting_job'\n    2  \n    3  local MasonClass = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\jobs\\potter\\potter.lua:\n    1: local CraftingJob = require 'jobs.crafting_job'\n    2  \n    3  local PotterClass = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\jobs\\shepherd\\shepherd.lua:\n    1  local ShepherdClass = class()\n    2  local rng = _radiant.math.get_default_rng()\n    3: local BaseJob = require 'jobs.base_job'\n    4  radiant.mixin(ShepherdClass, BaseJob)\n    5  \n    6: --- Public functions, required for all classes\n    7  function ShepherdClass:initialize()\n    8     BaseJob.initialize(self)\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\jobs\\trapper\\trapper.lua:\n    1  local TrapperClass = class()\n    2: local constants = require 'constants'\n    3: local BaseJob = require 'jobs.base_job'\n    4  local rng = _radiant.math.get_default_rng()\n    5  radiant.mixin(TrapperClass, BaseJob)\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\jobs\\weaver\\weaver.lua:\n    1: local CraftingJob = require 'jobs.crafting_job'\n    2  \n    3  local WeaverClass = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\jobs\\worker\\worker.lua:\n    2  \n    3  local WorkerClass = class()\n    4: local BaseJob = require 'jobs.base_job'\n    5  radiant.mixin(WorkerClass, BaseJob)\n    6  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\lib\\build_util.lua:\n    1: local constants = require('constants').construction\n    2: local csg_lib = require 'lib.csg.csg_lib'\n    3  local Color3 = _radiant.csg.Color3\n    4  local Cube3 = _radiant.csg.Cube3\n    .\n  409  end\n  410  \n  411: function build_util.get_cp_building_entity(cp, require_unstarted)\n  412     if cp then\n  413        local building = cp:get_building_entity()\n  414        if building then\n  415:          if require_unstarted then\n  416              local building_component = building:get_component('stonehearth:building')\n  417              if building_component and not building_component:has_been_started() then\n  ...\n  426  end\n  427  \n  428: function build_util.get_building_for(entity, require_unstarted)\n  429     checks('Entity')\n  430  \n  ...\n  436        local cp = entity:get_component('stonehearth:construction_progress')\n  437        if cp then\n  438:          return build_util.get_cp_building_entity(cp, require_unstarted)\n  439        end\n  440     end\n  ...\n  445           local cp = blueprint:get_component('stonehearth:construction_progress')\n  446           if cp then\n  447:             return build_util.get_cp_building_entity(cp, require_unstarted)\n  448           end\n  449        end\n  ...\n  601  end\n  602  \n  603: -- Returns templates that either don't have a required kingdom or have kingdom == required kingdom.\n  604  function build_util.get_custom_templates()\n  605     local templates = radiant.mods.enum_objects('building_templates')\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\lib\\algorithms\\binary_heap.lua:\n   13  --]]\n   14  \n   15: local require = require\n   16  local assert = assert\n   17  local ipairs = ipairs\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\lib\\conversation\\conversation_lib.lua:\n    1  local rng = _radiant.math.get_default_rng()\n    2: local constants = require 'constants'\n    3  \n    4  --[[\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\lib\\game_master\\game_master_lib.lua:\n    1: local i18n = require 'lib.i18n.i18n'()\n    2  local rng = _radiant.math.get_default_rng()\n    3  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\lib\\loot_table\\loot_table.lua:\n    1: local WeightedSet = require 'lib.algorithms.weighted_set'\n    2  local rng = _radiant.math.get_default_rng()\n    3  local log = radiant.log.create_logger('loot_table')\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\lib\\player\\territory.lua:\n    1: local convex_hull = require 'lib.algorithms.convex_hull'\n    2  local Point2 = _radiant.csg.Point2\n    3  local Cube2 = _radiant.csg.Cube2\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\renderers\\building\\building_renderer.lua:\n    1: local build_util = require 'lib.build_util'\n    2  local Point3 = _radiant.csg.Point3\n    3  local Region3 = _radiant.csg.Region3\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\renderers\\construction_data\\construction_data_renderer.lua:\n    1: local constants = require('constants')\n    2: local build_util = require 'lib.build_util'\n    3: local voxel_brush_util = require 'services.server.build.voxel_brush_util'\n    4: local ConstructionRenderTracker = require 'services.client.renderer.construction_render_tracker'\n    5  local Cube3 = _radiant.csg.Cube3\n    6  local Point3 = _radiant.csg.Point3\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\renderers\\defense_zone\\defense_zone_renderer.lua:\n    6  local Region3 = _radiant.csg.Region3\n    7  local Color4 = _radiant.csg.Color4\n    8: local ZoneRenderer = require 'renderers.zone_renderer'\n    9  \n   10  local log = radiant.log.create_logger('defense_zone_renderer')\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\renderers\\fabricator\\fabricator_renderer.lua:\n    1: local constants = require('constants')\n    2: local voxel_brush_util = require 'services.server.build.voxel_brush_util'\n    3: local build_util = require 'lib.build_util'\n    4: local ConstructionRenderTracker = require 'services.client.renderer.construction_render_tracker'\n    5  local Point3 = _radiant.csg.Point3\n    6  local Cube3 = _radiant.csg.Cube3\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\renderers\\farmer_field\\farmer_field_renderer.lua:\n    1: local ZoneRenderer = require 'renderers.zone_renderer'\n    2  local Point3 = _radiant.csg.Point3\n    3  local Color4 = _radiant.csg.Color4\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\renderers\\fixture_fabricator\\fixture_fabricator_renderer.lua:\n    1: local ConstructionRenderTracker = require 'services.client.renderer.construction_render_tracker'\n    2: local build_util = require 'lib.build_util'\n    3  local FixtureFabricatorRenderer = class()\n    4  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\renderers\\ladder\\ladder_renderer.lua:\n    1: local build_util = require 'lib.build_util'\n    2  local Point3 = _radiant.csg.Point3\n    3  local Region3 = _radiant.csg.Region3\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\renderers\\lamp\\lamp_renderer.lua:\n    1: local constants = require 'constants'\n    2  local Point3 = _radiant.csg.Point3\n    3  local Cube3 = _radiant.csg.Cube3\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\renderers\\open_space\\open_space_renderer.lua:\n    1: local build_util = require 'lib.build_util'\n    2  local Point3 = _radiant.csg.Point3\n    3  local Color4 = _radiant.csg.Color4\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\renderers\\pathfinder\\pathfinder_renderer.lua:\n    1: local build_util = require 'lib.build_util'\n    2  local Point3 = _radiant.csg.Point3\n    3  local Region3 = _radiant.csg.Region3\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\renderers\\scaffolding\\scaffolding_renderer.lua:\n    1: local build_util = require 'lib.build_util'\n    2: local ConstructionRenderTracker = require 'services.client.renderer.construction_render_tracker'\n    3  local Point3 = _radiant.csg.Point3\n    4  local Point3 = _radiant.csg.Point3\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\renderers\\shepherd_pasture\\shepherd_pasture_renderer.lua:\n    1: local ZoneRenderer = require 'renderers.zone_renderer'\n    2  local Color4 = _radiant.csg.Color4\n    3  local Point2 = _radiant.csg.Point2\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\renderers\\stockpile\\stockpile_renderer.lua:\n    1: local ZoneRenderer = require 'renderers.zone_renderer'\n    2  \n    3  local Color4 = _radiant.csg.Color4\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\renderers\\trapping_grounds\\trapping_grounds_renderer.lua:\n    1  local Point2 = _radiant.csg.Point2\n    2: local ZoneRenderer = require 'renderers.zone_renderer'\n    3  \n    4  local Color4 = _radiant.csg.Color4\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\scenarios\\basic_tutorial_scenario.lua:\n    1: local entity_forms_lib = require 'stonehearth.lib.entity_forms.entity_forms_lib'\n    2  local log = radiant.log.create_logger('basic_tutorial_scenario')\n    3  \n    .\n   12     self._sv._current_step = 0\n   13     self._sv._player_id = nil\n   14:    self._sv._requirement_met = nil\n   15  end\n   16  \n   ..\n   24  function BasicTutorialScenario:restore()\n   25     if self._sv._running then\n   26:       -- Check that scenario has started and is still waiting on a requirement to be met for the current step/set\n   27:       if (self._sv._info.start_requirements and not self._sv._requirement_met) then\n   28:          self:_create_requirement_timer()\n   29        end\n   30        if self._sv._info.early_finish_conditions then\n   ..\n   66     end\n   67  \n   68:    if info.start_requirements then\n   69        self:_try_start_ui_step()\n   70        return\n   ..\n  103     if next_step then\n  104        self:_set_next_ui_step()\n  105:       self._sv._requirement_met = false -- reset req met flag for this step\n  106        self:_try_start_ui_step()\n  107     else\n  ...\n  132  \n  133  function BasicTutorialScenario:_try_start_ui_step()\n  134:    local sets = self._sv._info.start_requirements\n  135     local step = 'set' .. self._sv._current_step\n  136:    local requirements = sets and sets[step] or {}\n  137:    local all_pass = self:_check_requirements_pass(requirements)\n  138  \n  139     if all_pass then\n  140        self:add_ui_step(self._sv._current_step)\n  141:       self._sv._requirement_met = true\n  142:       if self._requirement_timer then\n  143:          self._requirement_timer:destroy()\n  144:          self._requirement_timer = nil\n  145        end\n  146     else\n  147:       self:_create_requirement_timer()\n  148     end\n  149  end\n  ...\n  152     local sets = self._sv._info.early_finish_conditions\n  153     local step = 'set' .. self._sv._current_step\n  154:    local requirements = sets and sets[step]\n  155:    local all_pass = requirements and self:_check_requirements_pass(requirements)\n  156  \n  157     if all_pass then\n  ...\n  162  end\n  163  \n  164: function BasicTutorialScenario:_check_requirements_pass(requirements)\n  165     local all_pass = true\n  166:    for typ, value in pairs(requirements) do\n  167        if typ == 'class' then\n  168           assert(value.name)\n  169:          radiant.assert(value.has_class ~= nil, 'requirement %s for %s does not have a has_class field', self._sv._name, typ)\n  170           local job = stonehearth.job:get_job_info(self:get_player_id(), value.name)\n  171           local has_class = job and job:has_members()\n  ...\n  206           end\n  207        else\n  208:          log:error('unknown type %s in requirements for tutorial step %s', typ, self._sv._name)\n  209           return false\n  210        end\n  ...\n  213  end\n  214  \n  215: function BasicTutorialScenario:_create_requirement_timer()\n  216:    if not self._requirement_timer then\n  217:       self._requirement_timer = stonehearth.calendar:set_interval(\"BasicTutorialScenario wait to check requirements\", '10m', function()\n  218:             self:_try_start_ui_step(self._sv._info.start_requirements)\n  219           end)\n  220     end\n  ...\n  223  function BasicTutorialScenario:_create_finish_timer()\n  224     if not self._finish_timer then\n  225:       self._finish_timer = stonehearth.calendar:set_interval(\"BasicTutorialScenario wait to finish requirements\", '15m', function()\n  226              self:_check_for_early_finish()\n  227           end)\n  ...\n  234        self._delay_timer = nil\n  235     end\n  236:    if self._requirement_timer then\n  237:       self._requirement_timer:destroy()\n  238:       self._requirement_timer = nil\n  239     end\n  240     if self._finish_timer then\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\scenarios\\quests\\collect_starting_resources\\collect_starting_resources.lua:\n    1  local CollectResourcesTutorialScenario = class()\n    2: local BaseScenario = require 'scenarios.basic_tutorial_scenario'\n    3  radiant.mixin(CollectResourcesTutorialScenario, BaseScenario)\n    4  \n    .\n   49           rewards = self._scenario_data.rewards,\n   50           resource_display_name = self._scenario_data.resource_display_name,\n   51:          count = self._scenario_data.num_items_required,\n   52           skip_notification = true,\n   53           ui = '_'\n   ..\n  124     end\n  125  \n  126:    if self._sv._item_count >= self._scenario_data.num_items_required then\n  127       self:_complete_quest()\n  128     end\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\scenarios\\static\\terrain\\ore_vein\\ore_vein.lua:\n    1: local constants = require 'constants'\n    2  local Point3 = _radiant.csg.Point3\n    3  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\client\\build_editor\\add_stairs_editor.lua:\n    1: local build_util = require 'lib.build_util'\n    2: local constants = require('constants').construction\n    3: local StructureEditor = require 'services.client.build_editor.structure_editor'\n    4  local Point3 = _radiant.csg.Point3\n    5  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\client\\build_editor\\build_editor_service.lua:\n    1: local build_util = require 'lib.build_util'\n    2  -- xxx: move all the proxy stuff to the client! - tony\n    3: local StructureEditor = require 'services.client.build_editor.structure_editor'\n    4: local FloorEditor = require 'services.client.build_editor.floor_editor'\n    5: local GrowWallsEditor = require 'services.client.build_editor.grow_walls_editor'\n    6: local GrowRoofEditor = require 'services.client.build_editor.grow_roof_editor'\n    7: local AddStairsEditor = require 'services.client.build_editor.add_stairs_editor'\n    8: local RoadEditor = require 'services.client.build_editor.road_editor'\n    9: local StructureEraser = require 'services.client.build_editor.structure_eraser'\n   10: local WallLoopEditor = require 'services.client.build_editor.wall_loop_editor'\n   11: local DoodadPlacer = require 'services.client.build_editor.doodad_placer'\n   12: local LadderEditor = require 'services.client.build_editor.ladder_editor'\n   13: local TemplateEditor = require 'services.client.build_editor.template_editor'\n   14: local DeleteStructureEditor = require 'services.client.build_editor.delete_structure_editor'\n   15  \n   16  local Point3 = _radiant.csg.Point3\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\client\\build_editor\\doodad_placer.lua:\n    1: local ItemPlacer = require 'services.client.build_editor.item_placer'\n    2: local PortalEditor = require 'services.client.build_editor.portal_editor'\n    3  \n    4  local log = radiant.log.create_logger('build_editor')\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\client\\build_editor\\floor_editor.lua:\n    1: local build_util = require 'lib.build_util'\n    2: local constants = require('constants').construction\n    3: local voxel_brush_util = require 'services.server.build.voxel_brush_util'\n    4  \n    5  local Cube3 = _radiant.csg.Cube3\n    .\n   50        -- pierce the cursor to make sure we hit the actual ground.\n   51        selector:allow_select_cursor(true)\n   52:       selector:require_unblocked(false)\n   53     else\n   54        -- at least when placing slabs, make sure there's empty space when dragging\n   55        -- the cursor\n   56        selector:allow_select_cursor(false)\n   57:       selector:require_unblocked(true)\n   58     end\n   59  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\client\\build_editor\\grow_roof_editor.lua:\n    1: local build_util = require 'lib.build_util'\n    2: local csg_lib = require 'lib.csg.csg_lib'\n    3: local constants = require('constants').construction\n    4  local Point2 = _radiant.csg.Point2\n    5  local Point3 = _radiant.csg.Point3\n    6: local StructureEditor = require 'services.client.build_editor.structure_editor'\n    7  \n    8  local GrowRoofEditor = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\client\\build_editor\\grow_walls_editor.lua:\n    1: local build_util = require 'lib.build_util'\n    2: local constants = require('constants').construction\n    3: local StructureEditor = require 'services.client.build_editor.structure_editor'\n    4  \n    5  local Cube3 = _radiant.csg.Cube3\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\client\\build_editor\\item_placer.lua:\n    1: local build_util = require 'lib.build_util'\n    2: local entity_forms_lib = require 'lib.entity_forms.entity_forms_lib'\n    3  \n    4  local log = radiant.log.create_logger('build_editor')\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\client\\build_editor\\ladder_editor.lua:\n    1: local constants = require('constants').construction\n    2: local build_util = require 'lib.build_util'\n    3  local Cube3 = _radiant.csg.Cube3\n    4  local Point3 = _radiant.csg.Point3\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\client\\build_editor\\portal_editor.lua:\n    1  local Point3 = _radiant.csg.Point3\n    2: local build_util = require 'lib.build_util'\n    3: local StructureEditor = require 'services.client.build_editor.structure_editor'\n    4  local PortalEditor = class(StructureEditor)\n    5  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\client\\build_editor\\road_editor.lua:\n    1: local constants = require('constants').construction\n    2: local voxel_brush_util = require 'services.server.build.voxel_brush_util'\n    3  local Cube3 = _radiant.csg.Cube3\n    4  local Point3 = _radiant.csg.Point3\n    .\n   23  \n   24     stonehearth.selection:select_xz_region()\n   25:       :require_unblocked(false)\n   26        :select_front_brick(false)\n   27        :set_validation_offset(Point3.unit_y)\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\client\\build_editor\\structure_editor.lua:\n    1: local build_util = require 'lib.build_util'\n    2  \n    3  local StructureEditor = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\client\\build_editor\\structure_eraser.lua:\n    1: local build_util = require 'lib.build_util'\n    2  \n    3: local constants = require('constants').construction\n    4  local Cube3 = _radiant.csg.Cube3\n    5  local Point3 = _radiant.csg.Point3\n    .\n   86           end\n   87  \n   88:          local building = build_util.get_building_for(entity, true) -- require unstarted building\n   89           if not building then\n   90              -- cannot erase things on buildings that are already started\n   ..\n  162  function StructureEraser:_start_erase_floor_tool()\n  163     return stonehearth.selection:select_xz_region()\n  164:       :require_unblocked(false)\n  165        :select_front_brick(false)\n  166        :set_find_support_filter(stonehearth.selection.make_delete_floor_xz_region_support_filter())\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\client\\build_editor\\template_editor.lua:\n    1: local constants = require('constants').construction\n    2: local build_util = require 'lib.build_util'\n    3  local Point3 = _radiant.csg.Point3\n    4  local Cube3 = _radiant.csg.Cube3\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\client\\build_editor\\wall_loop_editor.lua:\n    1: local constants = require('constants').construction\n    2: local csg_lib = require 'lib.csg.csg_lib'\n    3: local build_util = require 'lib.build_util'\n    4: local StructureEditor = require 'services.client.build_editor.structure_editor'\n    5  local WallLoopEditor = class(StructureEditor)\n    6  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\client\\camera\\player_camera_controller.lua:\n    3  local Ray = _radiant.csg.Ray3\n    4  local log = radiant.log.create_logger('camera')\n    5: local input_constants = require('constants').input\n    6  local bindings = _radiant.client.get_binding_system()\n    7: local FollowCameraController = require 'services.client.camera.follow_camera_controller'\n    8  \n    9  local gutter_size = -1\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\client\\combat_commands\\combat_commands_service.lua:\n    1  local CombatCommandsService = class()\n    2  local Entity = _radiant.om.Entity\n    3: local Relations = require 'lib.player.relations'\n    4  \n    5  local log = radiant.log.create_logger('combat_commands')\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\client\\hilight\\hilight_service.lua:\n    1: local Relations = require 'lib.player.relations'\n    2  \n    3  local Point3 = _radiant.csg.Point3\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\client\\hotkey\\hotkey_service.lua:\n    1: local InputService = require 'services.client.input.input_service'\n    2  local HotkeyService = class()\n    3  local bindings = _radiant.client.get_binding_system()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\client\\input\\input_service.lua:\n    1  local log = radiant.log.create_logger('input_service')\n    2  \n    3: local InputCapture = require 'services.client.input.input_capture'\n    4  local InputService = class()\n    5  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\client\\party_editor\\party_editor_service.lua:\n    1: local PartyRenderer = require 'services.client.party_editor.party_renderer'\n    2  local PartyEditorService = class()\n    3  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\client\\renderer\\construction_render_tracker.lua:\n    1: local build_util = require 'lib.build_util'\n    2  \n    3  local ConstructionRenderTracker = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\client\\selection\\entity_or_location_selector.lua:\n    1: local SelectorBase = require 'services.client.selection.selector_base'\n    2: local selector_util = require 'services.client.selection.selector_util'\n    3  local Point3 = _radiant.csg.Point3\n    4  local bindings = _radiant.client.get_binding_system()\n    5  local Entity = _radiant.om.Entity\n    6  local EntityOrLocationSelector = class()\n    7: local FootprintWidget = require 'services.client.selection.footprint_widget'\n    8  \n    9  radiant.mixin(EntityOrLocationSelector, SelectorBase)\n   ..\n   14  --The goal of this class is to allow one cursor over entities, and another over locations\n   15  --Either can be returned in the done statement.\n   16: --Required for attacking either location or entity\n   17  --If this works, consider using this to replace location_selector and entity_selector\n   18  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\client\\selection\\selection_service.lua:\n    1: local constants = require('constants')\n    2: local build_util = require 'lib.build_util'\n    3: local EntitySelector = require 'services.client.selection.entity_selector'\n    4: local XZRegionSelector = require 'services.client.selection.xz_region_selector'\n    5: local LocationSelector = require 'services.client.selection.location_selector'\n    6: local EntityOrLocationSelector = require 'services.client.selection.entity_or_location_selector'\n    7  local Point3 = _radiant.csg.Point3\n    8  \n    .\n  284  function SelectionService:select_designation_region()\n  285     return self:select_xz_region()\n  286:                :require_supported(true)\n  287:                :require_unblocked(true)\n  288                 :set_find_support_filter(function(result)\n  289                       local entity = result.entity\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\client\\selection\\selector_util.lua:\n    1: local csg_lib = require 'lib.csg.csg_lib'\n    2  \n    3  -- helper methods for selectors\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\client\\selection\\xz_region_selector.lua:\n    1: local csg_lib = require 'lib.csg.csg_lib'\n    2: local selector_util = require 'services.client.selection.selector_util'\n    3: local RulerWidget = require 'services.client.selection.ruler_widget'\n    4  local XZRegionSelector = class()\n    5  local Color4 = _radiant.csg.Color4\n    .\n   25     self._ruler_color_valid = Color4(0, 0, 0, 128)\n   26     self._ruler_color_invalid = Color4(255, 0, 0, 128)\n   27:    self._require_supported = false\n   28:    self._require_unblocked = false\n   29     self._show_rulers = true\n   30     self._min_size = 0\n   ..\n   90  end\n   91  \n   92: function XZRegionSelector:require_supported(supported)\n   93:    self._require_supported = supported\n   94     return self\n   95  end\n   96  \n   97: function XZRegionSelector:require_unblocked(unblocked)\n   98:    self._require_unblocked = unblocked\n   99     return self\n  100  end\n  ...\n  281     end\n  282  \n  283:    if self._require_unblocked and radiant.terrain.is_blocked(brick) then\n  284        return false\n  285     end\n  286:    if self._require_supported and not radiant.terrain.is_supported(brick) then\n  287        return false\n  288     end\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\client\\sky_renderer\\sky_renderer_service.lua:\n  201     -- For the highq renderer, we're relying on semi-physical semi-real math to light\n  202     -- the water properly, so lighting the water Just Works with any # of lights.  It also\n  203:    -- requires extra passes, back 2 front sorting, render targets, etc., stuff that we\n  204     -- want to avoid on the lowq renderer.  Given that the lowq renderer supports multiple\n  205     -- directional light sources, we still get the effect of the moon and sun sources being\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\client\\subterranean_view\\subterranean_view_service.lua:\n    1: local constants = require 'constants'\n    2: local csg_lib = require 'lib.csg.csg_lib'\n    3  local Point3 = _radiant.csg.Point3\n    4  local Cube3 = _radiant.csg.Cube3\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\client\\terrain_highlight\\terrain_highlight_service.lua:\n    1: local OreBlockRenderer = require 'renderers.ore_block.ore_block_renderer'\n    2  local Point3 = _radiant.csg.Point3\n    3  local Cube3 = _radiant.csg.Cube3\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\ai\\ai_service.lua:\n    1  local FilterResultCache = _radiant.sim.FilterResultCache\n    2  \n    3: local CompoundActionFactory = require 'services.server.ai.compound_action_factory'\n    4: local placeholders = require 'services.server.ai.placeholders'\n    5: local AiInjector = require 'services.server.ai.ai_injector'\n    6  \n    7  local log = radiant.log.create_logger('ai.service')\n    .\n   11     log:write(0, 'enable_cpp_compound_action is on')\n   12  else\n   13:    CompoundAction = require 'services.server.ai.compound_action'\n   14     log:write(0, 'enable_cpp_compound_action is off')\n   15  end\n   ..\n   56        -- prior to game_loaded. After game_loaded the ai_injector should resume injecting observers as usual.\n   57        --\n   58:       -- 3) We require any entity with an action or observer to define another equipment entity which has\n   59        -- an equipment_piece_component that holds the ai.\n   60        --\n   ..\n  366  end\n  367  \n  368: local placeholders = require 'services.server.ai.placeholders'\n  369  \n  370  function AiService.replace_placeholders(compound_action, args)\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\ai\\compound_action.lua:\n    5  local Entity = _radiant.om.Entity\n    6  \n    7: local placeholders = require 'services.server.ai.placeholders'\n    8: local ExecutionUnitV2 = require 'components.ai.execution_unit_v2'\n    9  local CompoundAction = radiant.class()\n   10  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\build\\build_service.lua:\n    1: local constants = require('constants').construction\n    2: local entity_forms = require 'lib.entity_forms.entity_forms_lib'\n    3: local build_util = require 'lib.build_util'\n    4: local csg_lib = require 'lib.csg.csg_lib'\n    5: local voxel_brush_util = require 'services.server.build.voxel_brush_util'\n    6: local BuildUndoManager = require 'services.server.build.build_undo_manager'\n    7  \n    8  local Rect2 = _radiant.csg.Rect2\n    .\n   37  -- blueprints had to be merged together\n   38  --\n   39: local function choose_merge_survivor(blueprints, require_unstarted)\n   40     local best = nil\n   41     for id, blueprint in pairs(blueprints) do\n   ..\n   44        end\n   45     end\n   46:    return build_util.get_building_for(best, require_unstarted)\n   47  end\n   48  \n   ..\n  568  \n  569     -- add a construction progress component.  though the building is just a container\n  570:    -- and requires no fabricator, we still need a CP component to activate and track\n  571     -- progress.\n  572     building:add_component('stonehearth:construction_progress')\n  ...\n  610  -- Add a new floor to an existing building.  You almost certainly don't want to call this directly;\n  611  -- callers need to ensure that the new floor doesn't overlap with any other floors.  Look at\n  612: -- _merge_floor_into_building for more context.  add_floor and add_road both do the required\n  613  -- merging and clipping.\n  614  --    @param building - the building to contain the new floor\n  ...\n 1237  \n 1238  -- adds a span of walls between `min` and `max`, creating columns and\n 1239: -- wall segments as required `min` must be less than `max` and the\n 1240  -- requests span must be grid aligned (no diagonals!)\n 1241  --    @param building - the building to put all the new objects in\n ....\n 1671        -- could previously have been merged, so there are no intersections.  merging\n 1672        -- the buildings is easy!  choose one and go for it\n 1673:       parent_building = choose_merge_survivor(all_overlapping, true) -- true for require unstarted buildings\n 1674        self:_merge_blueprints_into(parent_building, all_overlapping)\n 1675     end\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\build\\ladder_builder.lua:\n    1: local priorities = require('constants').priorities.simple_labor\n    2  \n    3  local Point2 = _radiant.csg.Point2\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\build\\ladder_manager.lua:\n    1: local build_util = require 'lib.build_util'\n    2  \n    3  local Point2 = _radiant.csg.Point2\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\build\\scaffolding_builder_1d.lua:\n    1: local priorities = require('constants').priorities.simple_labor\n    2: local build_util = require 'stonehearth.lib.build_util'\n    3: local SvTable = require 'radiant.lib.sv_table'\n    4  \n    5  local Cube3   = _radiant.csg.Cube3\n    .\n  502                 self:_log('detail', 'found pre-existing scaffolding that works, with bounds %s', sr:get_bounds():translated(loc))\n  503  \n  504:                local required_region = projected_scaffolding:lift(sr:get_bounds().min.y + loc.y, scaffold_region:get_bounds().max.y)\n  505  \n  506:                if _physics:clip_region(required_region, CLIP_SOLID):get_area() == required_region:get_area() then\n  507                    found = true\n  508                    break\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\build\\scaffolding_builder_2d.lua:\n    1: local priorities = require('constants').priorities.simple_labor\n    2: local build_util = require 'stonehearth.lib.build_util'\n    3  \n    4  local Rect2   = _radiant.csg.Rect2\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\build\\scaffolding_manager.lua:\n  238     self._sv._changed_scaffolding[scaffolding:get_id()] = nil\n  239  \n  240:    -- Backwards compatibility requires this check:\n  241     if scaffolding:get_blueprint_entity() then\n  242        self._sv._bp_to_scaffolding[scaffolding:get_blueprint_entity():get_id()] = nil\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\calendar\\calendar_service.lua:\n    1: local CalendarAlarm = require 'services.server.calendar.calendar_alarm'\n    2  local log = radiant.log.create_logger('calendar_service')\n    3  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\catalog\\catalog_service.lua:\n    1  local Entity = _radiant.om.Entity\n    2  local Point3 = _radiant.csg.Point3\n    3: local Material = require 'components.material.material'\n    4  local log = radiant.log.create_logger('catalog')\n    5  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\combat_server_commands\\combat_server_commands_service.lua:\n    3  local Point3 = _radiant.csg.Point3\n    4  local Entity = _radiant.om.Entity\n    5: local entity_forms = require 'lib.entity_forms.entity_forms_lib'\n    6: local CombatCommands = require 'lib.combat_commands.combat_commands_lib'\n    7  \n    8  local INDIVIDUAL = 'individual'\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\conversation\\conversation_manager.lua:\n    1  local rng = _radiant.math.get_default_rng()\n    2  local log = radiant.log.create_logger('conversation')\n    3: local constants = require 'constants'\n    4: local set = require 'lib.collections.set'\n    5  \n    6  --[[\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\farming\\farming_service.lua:\n  163                 crop_type = crop.crop_type,\n  164                 crop_info = self:get_crop_details(crop.crop_type),\n  165:                crop_level_requirement = crop.level_requirement,\n  166                 ordinal = crop.ordinal,\n  167                 initial_crop = kingdom_crops[key]\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\game_creation\\game_creation_service.lua:\n    1: local constants = require 'constants'\n    2  local rng = _radiant.math.get_default_rng()\n    3: local Array2D = require 'services.server.world_generation.array_2D'\n    4: local BlueprintGenerator = require 'services.server.world_generation.blueprint_generator'\n    5  \n    6  local Point2 = _radiant.csg.Point2\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\game_master\\game_master_service.lua:\n    1: local game_master_lib = require 'lib.game_master.game_master_lib'\n    2: local Node = require 'services.server.game_master.controllers.node'\n    3  \n    4  local GameMasterService = class()\n    .\n  325  end\n  326  \n  327: -- Ignore a specific start requirement item check or all checks in general\n  328  -- For debugging purposes only\n  329: function GameMasterService:set_ignore_start_requirements(req_name)\n  330:    self._ignore_start_requirements = req_name or true\n  331  end\n  332  \n  333: function GameMasterService:get_ignore_start_requirements()\n  334:    return self._ignore_start_requirements\n  335  end\n  336  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\game_master\\controllers\\arc.lua:\n    1: local game_master_lib = require 'lib.game_master.game_master_lib'\n    2: local Node = require 'services.server.game_master.controllers.node'\n    3: local WeightedSet = require 'lib.algorithms.weighted_set'\n    4  \n    5  local rng = _radiant.math.get_default_rng()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\game_master\\controllers\\campaign.lua:\n    1: local game_master_lib = require 'lib.game_master.game_master_lib'\n    2: local Node = require 'services.server.game_master.controllers.node'\n    3  \n    4  local Campaign = class()\n    .\n  179  end\n  180  \n  181: function Campaign:_matches_requirements(item, required_list, excluded_list)\n  182:    if required_list and radiant.util.table_indexof(required_list, item) == 0 then\n  183        return false\n  184     end\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\game_master\\controllers\\encounter.lua:\n    1: local Node = require 'services.server.game_master.controllers.node'\n    2: local game_master_lib = require 'lib.game_master.game_master_lib'\n    3  \n    4  local Encounter = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\game_master\\controllers\\node.lua:\n    1: local game_master_lib = require 'lib.game_master.game_master_lib'\n    2  local Node = class()\n    3  \n    .\n   85  end\n   86  \n   87: function Node:check_requirement_met(ctx, name, rule)\n   88     local lhs\n   89     local item, rhs, typ = rule.item, rule.value, rule.type\n   ..\n   96     end\n   97  \n   98:    local ignore_req = stonehearth.game_master:get_ignore_start_requirements()\n   99     -- return true if we are debugging and we want to ignore checking this type of item or checks in general\n  100     if ignore_req == item or ignore_req == true then\n  ...\n  258  function Node:_all_rules_pass(ctx, can_start_rules)\n  259     for name, rule in pairs(can_start_rules) do\n  260:       if not self:check_requirement_met(ctx, name, rule) then\n  261           self._log:info('check failed for %s!  node cannot start', name)\n  262           return false\n  ...\n  284  function Node:_any_rules_pass(ctx, can_start_rules)\n  285     for name, rule in pairs(can_start_rules) do\n  286:       if self:check_requirement_met(ctx, name, rule) then\n  287           return true\n  288        end\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\game_master\\controllers\\camp_pieces\\camp_piece_stockpile.lua:\n    1: local game_master_lib = require 'lib.game_master.game_master_lib'\n    2  local Point2 = _radiant.csg.Point2\n    3  local Point3 = _radiant.csg.Point3\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\game_master\\controllers\\camp_pieces\\camp_piece_tiered_chest.lua:\n    1: local game_master_lib = require 'lib.game_master.game_master_lib'\n    2  local Point3 = _radiant.csg.Point3\n    3  local log = radiant.log.create_logger('tiered loot chest')\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\game_master\\controllers\\encounters\\city_raid_encounter.lua:\n   84        \"missions\": {\n   85           \"raid_stockpiles\": {\n   86:             \"require_free_stockpile_space\": false,\n   87              \"role\": \"raid_stockpiles\",\n   88              \"raid_timeout_minutes\": 300,\n   ..\n  168                    },\n  169                 },\n  170:                \"required\": [\"missions\"],\n  171                 \"additionalProperties\": false\n  172              }\n  173           },\n  174:          \"required\": [\"type\", \"encounter_type\", \"in_edge\", \"city_raid_info\"]\n  175        }\n  176     ]\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\game_master\\controllers\\encounters\\city_tier_achieved_encounter.lua:\n   12  ]]\n   13  \n   14: local game_master_lib = require 'lib.game_master.game_master_lib'\n   15  local Entity = _radiant.om.Entity\n   16  \n   ..\n   92     self._sv.bulletin_data = self._sv._info\n   93     self._sv.bulletin_data.ok_callback = '_on_complete_accepted'\n   94:    --TODO: get the requirements for military from parent requirements\n   95     self.__saved_variables:mark_changed()\n   96  end\n   ..\n  193                             \"track\": { \"description\": \"Audio to play for this achievement.\", \"$ref\": \"elements/file.json\" },\n  194                          },\n  195:                         \"required\": [\"id\", \"name\", \"title\", \"icon\", \"track\"],\n  196                          \"additionalProperties\": false\n  197                       }\n  198                    }\n  199                 },\n  200:                \"required\": [\"tier_achieved\", \"event_to_broadcast\", \"title\", \"speaker_name\", \"speaker_portrait\", \"message\",\n  201                              \"accept\", \"dialog_title\", \"tier_title\", \"reward_message\", \"reward_message_ctd\", \"achievements\"],\n  202                 \"additionalProperties\": false\n  203              }\n  204           },\n  205:          \"required\": [\"type\", \"encounter_type\", \"in_edge\", \"city_tier_achieved_info\"]\n  206        }\n  207     ]\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\game_master\\controllers\\encounters\\city_tier_quest_encounter.lua:\n    1  --[[\n    2:    This encounter shows the requirements needed to get to the next level of city tier.\n    3     The notification persists in the ! window until one of the sets is satisfied.\n    4:    Button to check requirements, if met, will call herald back immediately, triggers new out edge\n    5     If the herald automatically detects that the set is satisfied, the notification goes away\n    6  ]]\n    7  \n    8: local game_master_lib = require 'lib.game_master.game_master_lib'\n    9  local Entity = _radiant.om.Entity\n   10  \n   ..\n   17     self._sv.bulletin = nil\n   18     self._sv.resolved_out_edge = nil\n   19:    self._sv.requirements_checked = false\n   20  end\n   21  \n   ..\n   34     local opt_view = 'StonehearthCityTierBulletinDialog'\n   35     self:_set_bulletin_data(info)\n   36:    self:_find_details_for_requirements()\n   37  \n   38     self._sv.bulletin = stonehearth.bulletin_board:post_bulletin(ctx.player_id)\n   ..\n   61  end\n   62  \n   63: function CityTierQuest:_find_details_for_requirements()\n   64:    local satisfaction_reqs = self._sv.bulletin_data.satisfaction_requirements\n   65  \n   66     for req_title, req_data in pairs(satisfaction_reqs) do\n   67:       for req_kind, req_spec in pairs(req_data.requirements) do\n   68           if req_kind == 'place_statue' then\n   69              local catalog_data = stonehearth.catalog:get_catalog_data(req_spec.uri)\n   ..\n   77  function CityTierQuest:_set_bulletin_data(info)\n   78     self._sv.bulletin_data = info\n   79:    self._sv.bulletin_data.on_requirements_calculation = '_on_requirements_calculation'\n   80:    self._sv.bulletin_data.on_requirements_satisfied = '_on_requirements_satisfied'\n   81  end\n   82  \n   83: -- When the user hits the button, figure out which requirements are satisfied, and update the bulletin data\n   84: function CityTierQuest:_on_requirements_calculation()\n   85:    local satisfaction_requirements = self._sv.bulletin_data.satisfaction_requirements\n   86:    for requirement_type, r_data in pairs(self._sv.bulletin_data.satisfaction_requirements) do\n   87:       local whole_requirement_satisfied = true\n   88:       for requirement, details in pairs (r_data.requirements) do\n   89           details.satisfied = false;\n   90           --look at type, based on type, figure it out\n   ..\n  106           end\n  107           if not details.satisfied then\n  108:             whole_requirement_satisfied = false\n  109           end\n  110        end\n  111:       if whole_requirement_satisfied then\n  112           self._sv.resolved_out_edge = r_data.out_edge\n  113        end\n  114:       r_data.whole_requirement_satisfied = whole_requirement_satisfied\n  115     end\n  116:    self._sv.bulletin_data.satisfaction_requirements = satisfaction_requirements\n  117:    self._sv.bulletin_data.requirements_satisfied = self._sv.resolved_out_edge\n  118:    self._sv.requirements_checked = true\n  119:    self._sv.bulletin_data.requirements_checked = true\n  120     self._sv.bulletin:set_data(self._sv.bulletin_data)\n  121     self.__saved_variables:mark_changed()\n  ...\n  126  end\n  127  \n  128: --Which requirement has been satisfied? Trigger that out edge, and destroy the node.\n  129: function CityTierQuest:_on_requirements_satisfied()\n  130     local ctx = self._sv.ctx\n  131     ctx.arc:trigger_next_encounter(ctx)\n  ...\n  170        \"title\": \"Quest for a township\",\n  171        \"dialog_title\" : \"Quest for a township\",\n  172:       \"text\" : \"Satisfy any of the following requirements to gain sufficient reknown to qualify for township status:\",\n  173:       \"satisfaction_requirements\" : {\n  174:          \"military_requirement\" : {\n  175              \"id\" : \"town_military_req\",\n  176              \"title\" : \"Cid's Valor\",\n  177:             \"requirements\" : {\n  178                 \"place_statue\" : {\n  179                    \"id\" : \"military_statue\",\n  ...\n  189              \"out_edge\": \"valor_tier_2_reached\"\n  190           },\n  191:          \"church_requirement\" : {\n  192              \"id\" : \"town_church_req\",\n  193              \"title\" :  \"Church of Plenty\",\n  194:             \"requirements\" : {\n  195                 \"place_statue\" : {\n  196                    \"id\" : \"church_statue\",\n  ...\n  206              \"out_edge\": \"generosity_tier_2_reached\"\n  207           },\n  208:          \"crafting_requirement\" : {\n  209              \"id\" : \"town_crafting_req\",\n  210              \"title\" : \"Crafter's Approval\",\n  211:             \"requirements\" : {\n  212                 \"place_statue\" : {\n  213                    \"id\" : \"crafting_statue\",\n  ...\n  231     \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  232     \"id\": \"http://stonehearth.net/schemas/encounters/city_tier_quest.json\",\n  233:    \"title\": \"An encounter that shows the requirements needed to get to the next level of city tier. The notification persists in the ! window until one of the sets is satisfied. Button to check requirements, if met, will call the herald back immediately and triggers new out edge. If the herald automatically detects that the set is satisfied, the notification goes away.\",\n  234     \"allOf\": [\n  235        { \"$ref\": \"encounter.json\" },\n  ...\n  247                    \"text\": { \"$ref\": \"elements/display_string.json\" },\n  248                    \"summon_text\": { \"$ref\": \"elements/display_string.json\" },\n  249:                   \"satisfaction_requirements\": {\n  250                       \"type\": \"object\",\n  251                       \"patternProperties\": {\n  ...\n  256                                \"title\": { \"$ref\": \"elements/display_string.json\" },\n  257                                \"out_edge\": {\"$ref\": \"elements/out_edge_spec.json\"},\n  258:                               \"requirements\": {\n  259:                                  \"description\": \"The requirements displayed to the user. If one of the entries has the property name 'place_statue', the name and icon of the item specified in the URI are displayed.\",\n  260                                   \"type\": \"object\",\n  261                                   \"patternProperties\": {\n  ...\n  263                                         \"anyOf\": [\n  264                                            {\n  265:                                              \"title\": \"Net worth requirement\",\n  266                                               \"type\": \"object\",\n  267                                               \"properties\": {\n  ...\n  270                                                  \"value\": { \"type\": \"integer\", \"minimum\": 0 }\n  271                                               },\n  272:                                              \"required\": [\"id\", \"type\", \"value\"],\n  273                                               \"additionalProperties\": false\n  274                                            },\n  275                                            {\n  276:                                              \"title\": \"Placed item requirement\",\n  277                                               \"type\": \"object\",\n  278                                               \"properties\": {\n  ...\n  281                                                  \"uri\": { \"$ref\": \"elements/file.json\" }\n  282                                               },\n  283:                                              \"required\": [\"id\", \"type\", \"uri\"],\n  284                                               \"additionalProperties\": false\n  285                                            }\n  ...\n  291                          }\n  292                       },\n  293:                      \"required\": [\"id\", \"title\", \"out_edge\", \"requirements\"],\n  294                       \"additionalProperties\": false\n  295                    }\n  296                 },\n  297:                \"required\": [\"target_tier\", \"finish_event\", \"title\", \"dialog_title\", \"text\", \"summon_text\", \"satisfaction_requirements\"],\n  298                 \"additionalProperties\": false\n  299              }\n  300           },\n  301:          \"required\": [\"type\", \"encounter_type\", \"in_edge\", \"city_tier_quest_info\"]\n  302        }\n  303     ]\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\game_master\\controllers\\encounters\\collection_quest_encounter.lua:\n    1: local game_master_lib = require 'lib.game_master.game_master_lib'\n    2  \n    3  local Entity = _radiant.om.Entity\n    .\n  667                          \"success\": { \"$ref\": \"elements/edge.json\" }\n  668                       },\n  669:                      \"required\": [\"fail\", \"refuse\", \"success\"],\n  670                       \"additionalProperties\": false\n  671                    },\n  ...\n  695                          \"revenge\": { \"$ref\": \"#/definitions/quet_node\" }\n  696                       },\n  697:                      \"required\": [\"collection_due\", \"collection_failed\", \"collection_success\"],\n  698                       \"additionalProperties\": false\n  699                    }\n  700                 },\n  701:                \"required\": [\"script\", \"out_edges\", \"nodes\"]\n  702              }\n  703           },\n  704:          \"required\": [\"type\", \"encounter_type\", \"in_edge\", \"collection_quest_info\"]\n  705        }\n  706     ],\n  ...\n  712              \"bulletin\": { \"$ref\": \"elements/bulletin.json\" }\n  713           },\n  714:          \"required\": [\"bulletin\"]\n  715        }\n  716     }\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\game_master\\controllers\\encounters\\counter_encounter.lua:\n  139                          \"success\": {\"$ref\": \"elements/out_edge_spec.json\"},\n  140                       },\n  141:                      \"required\": [\"fail\", \"success\"],\n  142                       \"additionalProperties\": false\n  143                    },\n  144                 },\n  145:                \"required\": [\"times\", \"ctx_registration_variable\"],\n  146                 \"additionalProperties\": false\n  147              }\n  148           },\n  149:          \"required\": [\"type\", \"encounter_type\", \"in_edge\", \"counter_info\"]\n  150        }\n  151     ]\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\game_master\\controllers\\encounters\\create_camp_encounter.lua:\n    1: local build_util = require 'lib.build_util'\n    2: local game_master_lib = require 'lib.game_master.game_master_lib'\n    3  \n    4  local Point3 = _radiant.csg.Point3\n    .\n  671                                      \"rotation\": { \"type\": \"number\" }\n  672                                   },\n  673:                                  \"required\": [\"info\", \"position\"]\n  674                                },\n  675                                {\n  ...\n  682                                      \"rotation\": { \"type\": \"number\" }\n  683                                   },\n  684:                                  \"required\": [\"entity_uri\", \"position\"]\n  685                                }\n  686                             ]\n  ...\n  705                    }\n  706                 },\n  707:                \"required\": [\"pieces\", \"npc_player_id\", \"spawn_range\"],\n  708                 \"additionalProperties\": false\n  709              }\n  710           },\n  711:          \"required\": [\"type\", \"encounter_type\", \"in_edge\", \"create_camp_info\"],\n  712        }\n  713     ]\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\game_master\\controllers\\encounters\\create_mission_encounter.lua:\n    1: local game_master_lib = require 'lib.game_master.game_master_lib'\n    2  local CreateMission = class()\n    3  \n    .\n  214                    }\n  215                 },\n  216:                \"required\": [\"mission\"],\n  217                 \"additionalProperties\": false\n  218              }\n  219           },\n  220:          \"required\": [\"type\", \"encounter_type\", \"in_edge\", \"create_mission_info\"]\n  221        }\n  222     ]\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\game_master\\controllers\\encounters\\destroy_entity_encounter.lua:\n    1  local Entity = _radiant.om.Entity\n    2  local rng = _radiant.math.get_default_rng()\n    3: local game_master_lib = require 'lib.game_master.game_master_lib'\n    4  -- local log = radiant.log.create_logger('game_master.encounters.destroy_entity') not needed. uncomment if you need the log.\n    5  \n    .\n  200              }\n  201           },\n  202:          \"required\": [\"type\", \"encounter_type\", \"in_edge\", \"destroy_entity_info\"]\n  203        }\n  204     ],\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\game_master\\controllers\\encounters\\dialog_tree_encounter.lua:\n    1: local game_master_lib = require 'lib.game_master.game_master_lib'\n    2  local Entity = _radiant.om.Entity\n    3  local log = radiant.log.create_logger('game_master.encounters.dialog_tree')\n    .\n  253                                            }\n  254                                         },\n  255:                                        \"required\": [\"choices\"]\n  256                                      }\n  257                                   ]\n  258                                }\n  259                             },\n  260:                            \"required\": [\"bulletin\"],\n  261                             \"additionalProperties\": false\n  262                          }\n  ...\n  264                    }\n  265                 },\n  266:                \"required\": [\"start_node\", \"nodes\"],\n  267                 \"additionalProperties\": false\n  268              }\n  269           },\n  270:          \"required\": [\"type\", \"encounter_type\", \"in_edge\", \"dialog_tree_info\"]\n  271        }\n  272     ]\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\game_master\\controllers\\encounters\\donation_dialog_encounter.lua:\n    2  local rng = _radiant.math.get_default_rng()\n    3  local Point3 = _radiant.csg.Point3\n    4: local LootTable = require 'stonehearth.lib.loot_table.loot_table'\n    5: local game_master_lib = require 'lib.game_master.game_master_lib'\n    6  \n    7  --[[\n    .\n  235                                                        \"result\": { \"enum\": [\"accept\", \"reject\"]}\n  236                                                     },\n  237:                                                    \"required\": [\"result\"]\n  238                                                  }\n  239                                               }\n  240                                            }\n  241                                         },\n  242:                                        \"required\": [\"choices\"]\n  243                                      }\n  244                                   ]\n  245                                }\n  246                             },\n  247:                            \"required\": [\"bulletin\"]\n  248                          }\n  249                       },\n  250:                      \"required\": [\"simple_message\"],\n  251                       \"additionalProperties\": false\n  252                    }\n  253                 },\n  254:                \"required\": [\"loot_table\", \"nodes\"],\n  255                 \"additionalProperties\": false\n  256              }\n  257           },\n  258:          \"required\": [\"type\", \"encounter_type\", \"in_edge\", \"donation_dialog_info\"]\n  259        }\n  260     ]\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\game_master\\controllers\\encounters\\donation_encounter.lua:\n    1  local Entity = _radiant.om.Entity\n    2  local rng = _radiant.math.get_default_rng()\n    3: local LootTable = require 'stonehearth.lib.loot_table.loot_table'\n    4  local log = radiant.log.create_logger('game_master.encounters.donation_encounter')\n    5  \n    .\n   76                    \"loot_table\" : {\"$ref\": \"elements/loot_table.json\"}\n   77                 },\n   78:                \"required\": [\"loot_table\"],\n   79                 \"additionalProperties\": false\n   80              }\n   81           },\n   82:          \"required\": [\"type\", \"encounter_type\", \"in_edge\", \"donation_info\"]\n   83        }\n   84     ]\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\game_master\\controllers\\encounters\\generator_encounter.lua:\n    1  local Entity = _radiant.om.Entity\n    2: local game_master_lib = require 'lib.game_master.game_master_lib'\n    3  \n    4  --Allows you to spawn a target encounter at a time interval\n    .\n  269                    \"game_mode_tuning\": {\"type\": \"boolean\"}\n  270                 },\n  271:                \"required\": [\"delay\", \"spawn_edge\"],\n  272                 \"additionalProperties\": false\n  273              }\n  274           },\n  275:          \"required\": [\"type\", \"encounter_type\", \"in_edge\", \"generator_info\"]\n  276        }\n  277     ]\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\game_master\\controllers\\encounters\\item_threshold_encounter.lua:\n    1: local game_master_lib = require 'lib.game_master.game_master_lib'\n    2  local ItemThreshold = class()\n    3  local rng = _radiant.math.get_default_rng()\n    .\n  127     \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  128     \"id\": \"http://stonehearth.net/schemas/encounters/item_threshold.json\",\n  129:    \"title\": \"An encounter that waits until a set of requirements is satisfied before triggering its out edges.\",\n  130     \"allOf\": [\n  131        { \"$ref\": \"encounter.json\" },\n  ...\n  147                    \"uris\": {\"type\": \"array\", \"items\": {\"$ref\": \"elements/file.json\"}},\n  148                 },\n  149:                \"required\": [\"threshold\", \"check\"],\n  150                 \"additionalProperties\": false,\n  151                 \"minProperties\": 3\n  152              }\n  153           },\n  154:          \"required\": [\"type\", \"encounter_type\", \"in_edge\", \"item_threshold_info\"]\n  155        }\n  156     ]\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\game_master\\controllers\\encounters\\script_encounter.lua:\n   66                    \"data\": { \"type\": \"object\" },\n   67                 },\n   68:                \"required\": [\"script\"],\n   69                 \"additionalProperties\": false\n   70              }\n   71           },\n   72:          \"required\": [\"type\", \"encounter_type\", \"in_edge\", \"script_info\"]\n   73        }\n   74     ]\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\game_master\\controllers\\encounters\\shop_encounter.lua:\n    1: local game_master_lib = require 'lib.game_master.game_master_lib'\n    2  local log = radiant.log.create_logger('game_master.encounters.shop')\n    3  \n    .\n  175                                   \"price_multiplier\": {\"type\": \"number\", \"minimum\": 0, \"default\": 1.0},\n  176                                },\n  177:                               \"required\": [\"quantity\"],\n  178                                \"additionalProperties\": false\n  179                             }\n  180                          }\n  181                       },\n  182:                      \"required\": [\"entries\"],\n  183                       \"additionalProperties\": false\n  184                    },\n  185                 },\n  186:                \"required\": [\"name\", \"title\", \"inventory\"],\n  187                 \"additionalProperties\": false\n  188              }\n  189           },\n  190:          \"required\": [\"type\", \"encounter_type\", \"in_edge\", \"shop_info\"]\n  191        }\n  192     ],\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\game_master\\controllers\\encounters\\unlock_recipe_encounter.lua:\n    1: local game_master_lib = require 'lib.game_master.game_master_lib'\n    2  \n    3  local UnlockRecipeEncounter = class()\n    .\n  102                    \"bulletin_title\": {\"$ref\": \"elements/display_string.json\"}\n  103                 },\n  104:                \"required\": [\"job\", \"recipe_key\", \"bulletin_title\"],\n  105                 \"additionalProperties\": false\n  106              }\n  107           },\n  108:          \"required\": [\"type\", \"encounter_type\", \"in_edge\", \"unlock_recipe_info\"]\n  109        }\n  110     ],\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\game_master\\controllers\\encounters\\wait_encounter.lua:\n    1  local log = radiant.log.create_logger('game_master.encounters.wait')\n    2: local game_master_lib = require 'lib.game_master.game_master_lib'\n    3  \n    4  local WaitEncounter = class()\n    .\n  164                    \"destroy_on_trigger\": { \"type\": \"boolean\" }\n  165                 },\n  166:                \"required\": [\"duration\"],\n  167                 \"additionalProperties\": false\n  168              }\n  169           },\n  170:          \"required\": [\"type\", \"encounter_type\", \"in_edge\", \"wait_info\"]\n  171        }\n  172     ]\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\game_master\\controllers\\encounters\\wait_for_event_encounter.lua:\n  155                    \"event\": { \"type\": \"string\" },\n  156                 },\n  157:                \"required\": [\"source\", \"event\"],\n  158                 \"additionalProperties\": false\n  159              }\n  160           },\n  161:          \"required\": [\"type\", \"encounter_type\", \"in_edge\", \"wait_for_event_info\"]\n  162        }\n  163     ]\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\game_master\\controllers\\encounters\\wait_for_net_worth_encounter.lua:\n    1: local game_master_lib = require 'lib.game_master.game_master_lib'\n    2  local rng = _radiant.math.get_default_rng()\n    3  local log = radiant.log.create_logger('game_master.encounters.wait_for_net_worth')\n    .\n  123                    \"interval\": {\"$ref\": \"elements/duration.json\"}\n  124                 },\n  125:                \"required\": [\"threshold\"],\n  126                 \"additionalProperties\": false\n  127              }\n  128           },\n  129:          \"required\": [\"type\", \"encounter_type\", \"in_edge\", \"wait_for_net_worth_info\"]\n  130        }\n  131     ]\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\game_master\\controllers\\encounters\\wait_for_requirements_met_encounter.lua:\n    1: local game_master_lib = require 'lib.game_master.game_master_lib'\n    2  local log = radiant.log.create_logger('game_master.encounters.wait_for_net_worth')\n    3  \n    4  --[[\n    5:   Takes set of requirements needed to move on in encounter json file. Moves on the the next encounter when all requirements have been met.\n    6  ]]\n    7  \n    8: local WaitForRequirementsMetEncounter = class()\n    9  \n   10: function WaitForRequirementsMetEncounter:initialize()\n   11     self._sv.ctx = nil\n   12     self._sv._info = nil\n   ..\n   16  end\n   17  \n   18: function WaitForRequirementsMetEncounter:activate()\n   19     if not self._timer and self._sv.ctx then\n   20:       self._timer = stonehearth.calendar:set_interval(\"WaitForRequirementsMetEncounter\", self._sv.delay, function()\n   21:          self:_check_requirements()\n   22        end)\n   23     end\n   24  end\n   25  \n   26: function WaitForRequirementsMetEncounter:restore()\n   27     self:_create_cancellation_listener()\n   28  end\n   29  \n   30: function WaitForRequirementsMetEncounter:start(ctx, info)\n   31     assert(info)\n   32:    assert(info.requirements, 'No requirements for wait for requirements met encounter')\n   33  \n   34     self._sv.ctx = ctx\n   ..\n   40  \n   41     if not self._timer then\n   42:       self._timer = stonehearth.calendar:set_interval(\"WaitForRequirementsMetEncounter\", self._sv.delay, function()\n   43:             self:_check_requirements()\n   44           end)\n   45     end\n   46  end\n   47  \n   48: function WaitForRequirementsMetEncounter:_create_cancellation_listener()\n   49     if self._sv._info and self._sv._info.cancellation_event then\n   50        local population_faction = stonehearth.population:get_population(self._sv.ctx.player_id)\n   51        self._cancellation_listener = radiant.events.listen_once(population_faction, self._sv._info.cancellation_event, function(e)\n   52           self._sv._cancellation_event_happened = true\n   53:          log:info('WaitForRequirementsMetEncounter has ben cancelled via event')\n   54           self._cancellation_listener = nil\n   55           self:_destroy_node()\n   ..\n   58  end\n   59  \n   60: function WaitForRequirementsMetEncounter:stop()\n   61     self:_stop_timer()\n   62     if self._cancellation_listener then\n   ..\n   66  end\n   67  \n   68: function WaitForRequirementsMetEncounter:destroy()\n   69     self:stop()\n   70  end\n   71  \n   72: function WaitForRequirementsMetEncounter:_stop_timer()\n   73     if self._timer then\n   74        self._timer:destroy()\n   ..\n   77  end\n   78  \n   79: function WaitForRequirementsMetEncounter:_check_requirements()\n   80     local ctx = self._sv.ctx\n   81     local encounter = ctx.encounter\n   82:    local requirements = self._sv._info.requirements\n   83  \n   84:    --How many times have we checked requirements?\n   85     self._sv._times_checked = self._sv._times_checked + 1\n   86  \n   87     --If the scenario specifies the optional param, max_checks, only\n   88:    --check requirements max_checks times.\n   89     --If scenario was cancelled through an event, destroy the node also\n   90     if (self._sv._info.max_checks and self._sv._times_checked > self._sv._info.max_checks)\n   91        or self._sv._cancellation_event_happened then\n   92:       --We have checked the max number of times, and requirements have not passed.\n   93        --Destroy node without triggering the next encounter\n   94:       log:info('WaitForRequirementsMetEncounter has checked max number of times')\n   95        self:_destroy_node()\n   96        return\n   97     end\n   98  \n   99:    --Check the requirements\n  100:    for name, data in pairs(requirements) do\n  101:       if not encounter:check_requirement_met(ctx, name, data) then\n  102:          return -- not all requirements met, try again later\n  103        end\n  104     end\n  105  \n  106:    --requirements pass! trigger the next encounter and destroy the node\n  107:    log:info('WaitForRequirementsMetEncounter triggering next edge')\n  108     ctx.arc:trigger_next_encounter(ctx)\n  109     self:_destroy_node()\n  110  end\n  111  \n  112: function WaitForRequirementsMetEncounter:_destroy_node()\n  113     self:stop()\n  114     assert(self._sv.ctx, 'No ctx saved in resource check script')\n  ...\n  118  -- debug commands sent by the ui\n  119  \n  120: function WaitForRequirementsMetEncounter:get_progress_cmd(session, response)\n  121     local progress = {}\n  122     if self._timer then\n  ...\n  126     local ctx = self._sv.ctx\n  127     local encounter = ctx.encounter\n  128:    local requirements = self._sv._info.requirements\n  129  \n  130:    progress.requirements = {}\n  131  \n  132:    for name, data in pairs(requirements) do\n  133:       progress.requirements[data.item] = encounter:check_requirement_met(ctx, name, data)\n  134     end\n  135  \n  ...\n  137  end\n  138  \n  139: function WaitForRequirementsMetEncounter:trigger_now_cmd(session, response)\n  140     local ctx = self._sv.ctx\n  141  \n  ...\n  147  end\n  148  \n  149: return WaitForRequirementsMetEncounter\n  150  \n  151  --[[\n  ...\n  153  {\n  154     \"type\": \"encounter\",\n  155:    \"encounter_type\": \"wait_for_requirements_met\",\n  156     \"in_edge\"  : \"<in edge>\",\n  157     \"out_edge\" : \"<out edge>\",\n  158:    \"wait_for_requirements_met_info\": {\n  159:       \"requirements\": {\n  160:          \"campaign_requirement\": {\n  161              \"item\": \"campaign_completed\",\n  162              \"campaign_name\": \"combat\",\n  ...\n  164              \"value\": true\n  165           },\n  166:          \"net_worth_requirement\": {\n  167              \"item\": \"net_worth\",\n  168              \"type\": \"deny_if_less_than\",\n  169              \"value\": 10000\n  170           },\n  171:          \"item_placed_requirement\": {\n  172              \"item\": \"exists_in_world\",\n  173              \"uri\": \"stonehearth:decoration:decorative_elite_gong\",\n  ...\n  182  {\n  183     \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  184:    \"id\": \"http://stonehearth.net/schemas/encounters/wait_for_requirements_met.json\",\n  185:    \"title\": \"An encounter that waits until a set of requirements is satisfied before triggering its out edges.\",\n  186     \"allOf\": [\n  187        { \"$ref\": \"encounter.json\" },\n  ...\n  189           \"type\": \"object\",\n  190           \"properties\": {\n  191:             \"encounter_type\": { \"enum\": [\"wait_for_requirements_met\"] },\n  192:             \"wait_for_requirements_met_info\": {\n  193                 \"type\": \"object\",\n  194                 \"properties\": {\n  ...\n  196                    \"max_checks\": {\"type\": \"integer\", \"minimum\": 1},\n  197                    \"cancellation_event\": {\"type\": \"string\"},\n  198:                   \"requirements\": { \"$ref\": \"encounter.json#/definitions/can_start_test_set\" }\n  199                 },\n  200:                \"required\": [\"requirements\"],\n  201                 \"additionalProperties\": false\n  202              }\n  203           },\n  204:          \"required\": [\"type\", \"encounter_type\", \"in_edge\", \"wait_for_requirements_met_info\"]\n  205        }\n  206     ]\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\game_master\\controllers\\encounters\\wait_for_time_of_day_encounter.lua:\n  158                    }\n  159                 },\n  160:                \"required\": [\"time\"],\n  161                 \"additionalProperties\": false\n  162              }\n  163           },\n  164:          \"required\": [\"type\", \"encounter_type\", \"in_edge\", \"wait_for_time_of_day_info\"]\n  165        }\n  166     ]\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\game_master\\controllers\\missions\\mission.lua:\n    1: local game_master_lib = require 'lib.game_master.game_master_lib'\n    2  \n    3  local Point3 = _radiant.csg.Point3\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\game_master\\controllers\\missions\\pillage_mission.lua:\n    2  local rng = _radiant.math.get_default_rng()\n    3  \n    4: local Mission = require 'services.server.game_master.controllers.missions.mission'\n    5  \n    6  local PillageMission = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\game_master\\controllers\\missions\\raid_stockpiles_mission.lua:\n    2  local rng = _radiant.math.get_default_rng()\n    3  \n    4: local Mission = require 'services.server.game_master.controllers.missions.mission'\n    5  \n    6  local RaidStockpilesMission = class()\n    .\n   50  \n   51     -- don't raid the enemy stockpiles if there's no room in ours\n   52:    if info.require_free_stockpile_space then\n   53        local friendly_stockpiles = stonehearth.inventory:get_inventory(ctx.npc_player_id)\n   54                                                              :get_all_stockpiles()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\game_master\\controllers\\missions\\spawn_enemies_mission.lua:\n    2  local rng = _radiant.math.get_default_rng()\n    3  \n    4: local Mission = require 'services.server.game_master.controllers.missions.mission'\n    5  \n    6  local SpawnEnemiesMission = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\game_master\\controllers\\missions\\wander_mission.lua:\n    3  local DEFAULT_WALK_INTERVAL = '30m'\n    4  \n    5: local Mission = require 'services.server.game_master.controllers.missions.mission'\n    6  \n    7  local WanderMission = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\game_master\\controllers\\script_encounters\\returning_trader_script.lua:\n    1: local game_master_lib = require 'lib.game_master.game_master_lib'\n    2  local ReturningTrader = class()\n    3  local rng = _radiant.math.get_default_rng()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\game_master\\controllers\\script_encounters\\simple_caravan_script.lua:\n    1: local game_master_lib = require 'lib.game_master.game_master_lib'\n    2  local SimpleCaravan = class()\n    3  local rng = _radiant.math.get_default_rng()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\game_master\\controllers\\script_encounters\\tiered_chest_script.lua:\n    1: local TieredChest = require 'services.server.game_master.controllers.camp_pieces.camp_piece_tiered_chest'\n    2  \n    3  local TieredChestScript = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\game_master\\controllers\\scripts\\collection_quest_shakedown.lua:\n    1: local entity_forms = require 'lib.entity_forms.entity_forms_lib'\n    2  local rng = _radiant.math.get_default_rng()\n    3: local Relations = require 'lib.player.relations'\n    4  local DEFAULT_TRIBUTE_VALUE = 50\n    5  local DEFAULT_MAX_TRIES = 4\n    .\n  164     local is_iconic = not entity_forms_component or not entity_forms_component:get_iconic_entity()\n  165  \n  166:    --exempt trophies, since it may require items player cannot acquire more of\n  167     if radiant.entities.get_category(entity) == 'trophy' then\n  168        return false\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\game_master\\controllers\\util\\choose_location_outside_town.lua:\n    1: local csg_lib = require 'lib.csg.csg_lib'\n    2  local rng = _radiant.math.get_default_rng()\n    3  local Point2 = _radiant.csg.Point2\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\hydrology\\channel_manager.lua:\n    1: local constants = require 'constants'\n    2: local csg_lib = require 'lib.csg.csg_lib'\n    3  local Point3 = _radiant.csg.Point3\n    4  local Cube3 = _radiant.csg.Cube3\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\hydrology\\hydrology_service.lua:\n    1: local constants = require 'constants'\n    2: local csg_lib = require 'lib.csg.csg_lib'\n    3: local ChannelManager = require 'services.server.hydrology.channel_manager'\n    4  local Point3 = _radiant.csg.Point3\n    5  local Cube3 = _radiant.csg.Cube3\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\inventory\\basic_inventory_tracker_controller.lua:\n    1: local entity_forms_lib = require 'stonehearth.lib.entity_forms.entity_forms_lib'\n    2  \n    3  local BasicInventoryTracker = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\inventory\\equipment_tracker_controller.lua:\n    1: local entity_forms = require 'lib.entity_forms.entity_forms_lib'\n    2  local EquipmentTracker = class()\n    3  --[[\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\inventory\\inventory.lua:\n    1: local entity_forms_lib = require 'lib.entity_forms.entity_forms_lib'\n    2: local FilteredTrace = require 'radiant.modules.filtered_trace'\n    3  local log = radiant.log.create_logger('inventory')\n    4  local Cube3 = _radiant.csg.Cube3\n    5  local Point3 = _radiant.csg.Point3\n    6  local Point3 = _radiant.csg.Point3\n    7: local Material = require 'components.material.material'\n    8: local SvTable = require 'radiant.lib.sv_table'\n    9  \n   10  local TRACK_STORAGE_CONTAINERS = radiant.util.get_config('track_storage_containers', false)\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\inventory\\inventory_service.lua:\n    1  local Entity = _radiant.om.Entity\n    2  \n    3: local Inventory = require 'services.server.inventory.inventory'\n    4  \n    5  --[[\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\inventory\\useable_item_tracker.lua:\n    1  local UsableItemTracker = class()\n    2: local entity_forms_lib = require 'stonehearth.lib.entity_forms.entity_forms_lib'\n    3  \n    4  --[[\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\job\\job_info_controller.lua:\n    1  local JobInfoController = class()\n    2: local CraftOrderList = require 'components.workshop.craft_order_list'\n    3  \n    4  -- Holds data about a certain class of job for a player\n    .\n  140     end\n  141  \n  142:    -- TODO(yshan) do not block based on level requirement for now\n  143:    -- because the basic buildings require things like the lantern, which needs level 1 to craft.\n  144:    --if recipe.level_requirement > self._sv.highest_level then\n  145        --return false\n  146     --end\n  ...\n  161  \n  162  -- Note this only clears the manual_lock flag, if there are other\n  163: -- unmet conditions, e.g. level_requirement, then the recipe will\n  164  -- remain locked until those conditions are met.\n  165  function JobInfoController:manually_unlock_recipe(recipe_key) -- TODO: Allow user to unlock recipe from a json file\n  ...\n  250  -- Prep the recipe data with any default values\n  251  function JobInfoController:_initialize_recipe_data(recipe_key, recipe_data)\n  252:    if not recipe_data.level_requirement then\n  253:       recipe_data.level_requirement = 0\n  254     end\n  255     recipe_data.recipe_key = recipe_key\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\mining\\mining_service.lua:\n    1: local constants = require 'constants'\n    2: local csg_lib = require 'lib.csg.csg_lib'\n    3: local ore_generator = require 'services.server.mining.ore_generator'\n    4: local LootTable = require 'lib.loot_table.loot_table'\n    5  local Point2 = _radiant.csg.Point2\n    6  local Point3 = _radiant.csg.Point3\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\mining\\ore_generator.lua:\n    1: local constants = require 'constants'\n    2: local csg_lib = require 'lib.csg.csg_lib'\n    3  local Point3 = _radiant.csg.Point3\n    4  local Cube3 = _radiant.csg.Cube3\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\personality\\personality_service.lua:\n   18  \n   19  local rng = _radiant.math.get_default_rng()\n   20: local PlayerJournalData = require 'services.server.personality.player_journal_data'\n   21  \n   22  local VERSIONS = {\n   ..\n  231           end\n  232        end\n  233:       local required_substitutions = nil\n  234  \n  235        if activity_data and log_data then\n  ...\n  237              local random_log = self:_get_random_from_log_data(log_data)\n  238              log_entry = random_log.log\n  239:             required_substitutions = random_log.required_substitutions\n  240           elseif activity_data.type == 'sequential' then\n  241              log_entry = self:_get_sequential_unused_from_table(log_data.logs, log_data.use_counter)\n  ...\n  245  \n  246        local additional_data = nil\n  247:       if required_substitutions then\n  248:           additional_data = stonehearth.substitution:get_substitute_variables(required_substitutions, namespace, substitutions)\n  249        end\n  250  \n  ...\n  265           for _, sub_log in pairs(substitution_logs) do\n  266              for _, value in ipairs(sub_log.entries) do\n  267:                table.insert(all_possible_values, {log=value, required_substitutions=sub_log.required_substitutions})\n  268              end\n  269           end\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\physics\\physics_service.lua:\n    1: local csg_lib = require 'lib.csg.csg_lib'\n    2  local Point3 = _radiant.csg.Point3\n    3  local Transform = _radiant.csg.Transform\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\player\\player_service.lua:\n    1: local Relations = require 'lib.player.relations'\n    2  \n    3  local Entity = _radiant.om.Entity\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\population\\population_faction.lua:\n    1  local rng = _radiant.math.get_default_rng()\n    2: local IntegerGaussianRandom = require 'lib.math.integer_gaussian_random'\n    3  local gaussian_rng = IntegerGaussianRandom(rng)\n    4: local constants = require 'constants'\n    5  \n    6  local PopulationFaction = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\shop\\sellable_item_tracker.lua:\n    1: local entity_forms = require 'stonehearth.lib.entity_forms.entity_forms_lib'\n    2  \n    3  local SellableItemTracker = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\shop\\shop.lua:\n    1  local Entity = _radiant.om.Entity\n    2  \n    3: local entity_forms = require 'stonehearth.lib.entity_forms.entity_forms_lib'\n    4  local Shop = class()\n    5  local rng = _radiant.math.get_default_rng()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\static_scenario\\scenario_modder_services.lua:\n    1: local PerturbationGrid = require 'services.server.world_generation.perturbation_grid'\n    2  local Point3 = _radiant.csg.Point3\n    3  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\static_scenario\\static_scenario_service.lua:\n    1: local Biome = require 'services.server.world_generation.biome'\n    2: local ScenarioModderServices = require 'services.server.static_scenario.scenario_modder_services'\n    3: local Timer = require 'services.server.world_generation.timer'\n    4  local Point2 = _radiant.csg.Point2\n    5  local Rect2 = _radiant.csg.Rect2\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\substitution\\substitution_service.lua:\n  221  --  @param target_string - the string with the variables to substitute\n  222  --  @param overrides - a dictionary that takes precedence over the default dictionary\n  223: function SubstitutionService:get_substitute_variables(required_substitution_list, namespace, overrides)\n  224     local returned_table = {}\n  225:    for _, variable_name in ipairs(required_substitution_list) do\n  226        local substituted_value = '???'\n  227        --check the subsitution table first. If present, return\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\tasks\\task.lua:\n    1: local RunTaskAction = require 'services.server.tasks.run_task_action'\n    2: local WorkerTaskFeeder = require 'services.server.tasks.worker_task_feeder'\n    3  \n    4  local STARTED = 'started'\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\tasks\\task_group.lua:\n    1: local Task = require 'services.server.tasks.task'\n    2  local rng = _radiant.math.get_default_rng()\n    3  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\tasks\\tasks_service.lua:\n    1: local TaskGroup = require 'services.server.tasks.task_group'\n    2  \n    3  local TasksService = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\terrain\\terrain_service.lua:\n    1: local Timer = require 'services.server.world_generation.timer'\n    2: local csg_lib = require 'lib.csg.csg_lib'\n    3  local Point2 = _radiant.csg.Point2\n    4  local Point2f = _radiant.csg.Point2f\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\threads\\threads_service.lua:\n    1: local Thread = require 'services.server.threads.thread'\n    2  local log = radiant.log.create_logger('threads')\n    3  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\town\\individual_task_controller.lua:\n    1: local constants = require 'constants'\n    2  local IndividualTaskController = class()\n    3  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\town\\town.lua:\n    1: local constants = require 'constants'\n    2: local build_util = require 'lib.build_util'\n    3: local entity_forms = require 'lib.entity_forms.entity_forms_lib'\n    4  \n    5  local Point3 = _radiant.csg.Point3\n    6  local Entity = _radiant.om.Entity\n    7: local IndividualTaskController = require 'services.server.town.individual_task_controller'\n    8  \n    9  --[[\n   ..\n 1256              if build_request and build_request.materials then\n 1257                 if radiant.util.table_indexof(build_request.materials, building_material) > 0 then\n 1258:                   -- if this building requires this material\n 1259                    local entity = radiant.entities.get_entity(entity_id)\n 1260                    local building = entity and build_util.get_building_for(entity)\n ....\n 1334  end\n 1335  \n 1336: -- the `set_requested_build_task` method is really useful for doing things that don't require\n 1337  -- materials, too!  use the same infrastructure, just pass in a magic NO_MATERIAL flag, which\n 1338  -- means don't pass any material args.\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\town\\town_service.lua:\n    1  local Entity = _radiant.om.Entity\n    2  \n    3: local Town = require 'services.server.town.town'\n    4  \n    5  local TownService = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\town\\orchestrators\\collect_ingredients_orchestrator.lua:\n    1  local CollectIngredients = class()\n    2: local IngredientList = require 'components.workshop.ingredient_list'\n    3  \n    4  local log = radiant.log.create_logger('crafter'):set_prefix('collect_ingredients_orchestrator')\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\town\\orchestrators\\craft_items_orchestrator.lua:\n    1  local Point3 = _radiant.csg.Point3\n    2: local CollectIngredients = require 'services.server.town.orchestrators.collect_ingredients_orchestrator'\n    3: local constants = require 'constants'\n    4  \n    5  local log = radiant.log.create_logger('crafter'):set_prefix('craft_items_orchestrator')\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\town_patrol\\town_patrol_service.lua:\n    1: local PatrollableObject = require 'services.server.town_patrol.patrollable_object'\n    2  local log = radiant.log.create_logger('town_patrol')\n    3  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\world_generation\\biome.lua:\n    1: local constants = require 'constants'\n    2: local NonUniformQuantizer = require 'lib.math.non_uniform_quantizer'\n    3  local Point2 = _radiant.csg.Point2\n    4  local Rect2 = _radiant.csg.Rect2\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\world_generation\\blueprint_generator.lua:\n    1: local Array2D = require 'services.server.world_generation.array_2D'\n    2: local FilterFns = require 'services.server.world_generation.filter.filter_fns'\n    3: local Histogram = require 'lib.algorithms.histogram'\n    4  local RandomNumberGenerator = _radiant.math.RandomNumberGenerator\n    5  local log = radiant.log.create_logger('world_generation')\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\world_generation\\detached_region_set.lua:\n    1: local csg_lib = require 'lib.csg.csg_lib'\n    2  local Point3 = _radiant.csg.Point3\n    3  local Cube3 = _radiant.csg.Cube3\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\world_generation\\habitat_manager.lua:\n    1: local Array2D = require 'services.server.world_generation.array_2D'\n    2: local Biome = require 'services.server.world_generation.biome'\n    3  local log = radiant.log.create_logger('world_generation')\n    4  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\world_generation\\height_map_renderer.lua:\n    1: local Array2D = require 'services.server.world_generation.array_2D'\n    2  local Rect2 = _radiant.csg.Rect2\n    3  local Point2 = _radiant.csg.Point2\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\world_generation\\landscaper.lua:\n    1: local Biome = require 'services.server.world_generation.biome'\n    2: local NonUniformQuantizer = require 'lib.math.non_uniform_quantizer'\n    3: local WeightedSet = require 'lib.algorithms.weighted_set'\n    4: local Array2D = require 'services.server.world_generation.array_2D'\n    5: local SimplexNoise = require 'lib.math.simplex_noise'\n    6: local FilterFns = require 'services.server.world_generation.filter.filter_fns'\n    7: local PerturbationGrid = require 'services.server.world_generation.perturbation_grid'\n    8: local Timer = require 'services.server.world_generation.timer'\n    9  local Point3 = _radiant.csg.Point3\n   10  local Cube3 = _radiant.csg.Cube3\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\world_generation\\micro_map_generator.lua:\n    1: local Biome = require 'services.server.world_generation.biome'\n    2: local Array2D = require 'services.server.world_generation.array_2D'\n    3: local SimplexNoise = require 'lib.math.simplex_noise'\n    4: local FilterFns = require 'services.server.world_generation.filter.filter_fns'\n    5: local ValleyShapes = require 'services.server.world_generation.valley_shapes'\n    6: local Timer = require 'services.server.world_generation.timer'\n    7  local log = radiant.log.create_logger('world_generation')\n    8  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\world_generation\\ore_scenario_selector.lua:\n    1: local constants = require 'constants'\n    2: local Array2D = require 'services.server.world_generation.array_2D'\n    3: local ScenarioSelector = require 'services.server.world_generation.scenario_selector'\n    4: local WeightedSet = require 'lib.algorithms.weighted_set'\n    5  local Point3 = _radiant.csg.Point3\n    6  local log = radiant.log.create_logger('ore_scenario_selector')\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\world_generation\\overview_map.lua:\n    1: local Array2D = require 'services.server.world_generation.array_2D'\n    2: local Biome = require 'services.server.world_generation.biome'\n    3  local log = radiant.log.create_logger('world_generation')\n    4  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\world_generation\\scenario_index.lua:\n    1: local HabitatManager = require 'services.server.world_generation.habitat_manager'\n    2: local ScenarioSelector = require 'services.server.world_generation.scenario_selector'\n    3  local log = radiant.log.create_logger('scenario_index')\n    4  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\world_generation\\scenario_selector.lua:\n    1: local WeightedSet = require 'lib.algorithms.weighted_set'\n    2  local log = radiant.log.create_logger('scenario_service')\n    3  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\world_generation\\surface_scenario_selector.lua:\n    1: local ScenarioSelector = require 'services.server.world_generation.scenario_selector'\n    2: local Histogram = require 'lib.algorithms.histogram'\n    3  local log = radiant.log.create_logger('surface_scenario_selector')\n    4  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\world_generation\\terrain_detailer.lua:\n    1: local Biome = require 'services.server.world_generation.biome'\n    2: local Array2D = require 'services.server.world_generation.array_2D'\n    3: local SimplexNoise = require 'lib.math.simplex_noise'\n    4: local FilterFns = require 'services.server.world_generation.filter.filter_fns'\n    5: local InverseGaussianRandom = require 'lib.math.inverse_gaussian_random'\n    6  local TerrainDetailer = class()\n    7  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\world_generation\\terrain_generator.lua:\n    1: local Biome = require 'services.server.world_generation.biome'\n    2: local Array2D = require 'services.server.world_generation.array_2D'\n    3: local NonUniformQuantizer = require 'lib.math.non_uniform_quantizer'\n    4: local FilterFns = require 'services.server.world_generation.filter.filter_fns'\n    5: local Wavelet = require 'services.server.world_generation.filter.wavelet'\n    6: local WaveletFns = require 'services.server.world_generation.filter.wavelet_fns'\n    7: local TerrainDetailer = require 'services.server.world_generation.terrain_detailer'\n    8: local Timer = require 'services.server.world_generation.timer'\n    9  local log = radiant.log.create_logger('world_generation')\n   10  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\world_generation\\valley_shapes.lua:\n    1: local Array2D = require 'services.server.world_generation.array_2D'\n    2  \n    3  local ValleyShapes = class()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\world_generation\\world_generation_service.lua:\n    1: local Array2D = require 'services.server.world_generation.array_2D'\n    2: local FilterFns = require 'services.server.world_generation.filter.filter_fns'\n    3: local Biome = require 'services.server.world_generation.biome'\n    4: local BlueprintGenerator = require 'services.server.world_generation.blueprint_generator'\n    5: local MicroMapGenerator = require 'services.server.world_generation.micro_map_generator'\n    6: local Landscaper = require 'services.server.world_generation.landscaper'\n    7: local TerrainGenerator = require 'services.server.world_generation.terrain_generator'\n    8: local HeightMapRenderer = require 'services.server.world_generation.height_map_renderer'\n    9: local HabitatManager = require 'services.server.world_generation.habitat_manager'\n   10: local OverviewMap = require 'services.server.world_generation.overview_map'\n   11: local ScenarioIndex = require 'services.server.world_generation.scenario_index'\n   12: local OreScenarioSelector = require 'services.server.world_generation.ore_scenario_selector'\n   13: local SurfaceScenarioSelector = require 'services.server.world_generation.surface_scenario_selector'\n   14: local DetachedRegionSet = require 'services.server.world_generation.detached_region_set'\n   15: local Timer = require 'services.server.world_generation.timer'\n   16  local RandomNumberGenerator = _radiant.math.RandomNumberGenerator\n   17  local Point2 = _radiant.csg.Point2\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\world_generation\\filter\\filter_fns.lua:\n    1  local FilterFns = class()\n    2  \n    3: local Array2D = require 'services.server.world_generation.array_2D'\n    4: local BoundaryNormalizingFilter = require 'services.server.world_generation.filter.boundary_normalizing_filter'\n    5: local SlewRateFilter = require 'services.server.world_generation.filter.slew_rate_filter'\n    6  \n    7  function FilterFns.filter_2D_generic(dst, src, src_width, src_height, filter_kernel, sampling_interval)\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\world_generation\\filter\\wavelet.lua:\n    1  local Wavelet = {}\n    2: local Array2D = require 'services.server.world_generation.array_2D'\n    3: local CDF_97 = require 'services.server.world_generation.filter.cdf_97'\n    4  \n    5  local transform = CDF_97\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\world_generation\\filter\\wavelet_fns.lua:\n    1  local WaveletFns = {}\n    2: local Wavelet =  require 'services.server.world_generation.filter.wavelet'\n    3  \n    4  -- function WaveletFns.shape_height_map(height_map, freq_scaling_coeff, levels)\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\varanus_herder\\jobs\\varanus_herder\\varanus_herder.lua:\n    1  local rng = _radiant.math.get_default_rng()\n    2: local ShepherdClass = require 'stonehearth.jobs.shepherd.shepherd'\n    3  local VaranusHerderClass = class()\n    4  radiant.mixin(VaranusHerderClass, ShepherdClass)\n    5  \n    6: --- Public functions, required for all classes\n    7  function VaranusHerderClass:initialize()\n    8     ShepherdClass.initialize(self)\n\n1034 matches across 398 files\n\n\nSearching 7533 files for \"promote_shepherd\"\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\jobs\\shepherd\\shepherd_description.json:\n   20     },\n   21     \"roles\": \"shepherd_job\",\n   22:    \"promotion_activity_name\": \"promote_shepherd\",\n   23     \"task_groups\": [\n   24        \"stonehearth:task_group:common_tasks\",\n\n1 match in 1 file\n\n\nSearching 7534 files for \"curr_job_controller\"\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\radiant\\js\\radiant\\object.js:\n  458        if (jobComponentData) {\n  459           var expPercent, expLabel;\n  460:          var jobController = jobComponentData.curr_job_controller;\n  461  \n  462           if (typeof jobController == 'string') {\n  463:             console.log('curr_job_controller %s needs to be serialized', jobController);\n  464              return;\n  465           }\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\claim_animal_for_pasture.lua:\n   56     --The shepherd is now trailing a sheep and will do so till he drops it off at the pasture\n   57     --or until something kills it/steals it from him\n   58:    local shepherd_class = entity:get_component('stonehearth:job'):get_curr_job_controller()\n   59     if shepherd_class and shepherd_class.add_trailing_animal then\n   60        shepherd_class:add_trailing_animal(args.animal, args.pasture)\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\collect_animal_for_pasture_from_nearby.lua:\n   53  \n   54  function CollectAnimalFromNearby:start(ai, entity, args)\n   55:    local shepherd_class = entity:get_component('stonehearth:job'):get_curr_job_controller()\n   56     if shepherd_class and shepherd_class.set_shepherding then\n   57        shepherd_class:set_shepherding(true)\n   ..\n   60  \n   61  function CollectAnimalFromNearby:stop(ai, entity, args)\n   62:    local shepherd_class = entity:get_component('stonehearth:job'):get_curr_job_controller()\n   63     if shepherd_class and shepherd_class.set_shepherding then\n   64        shepherd_class:set_shepherding(false)\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\collect_animal_for_pasture_from_world.lua:\n   27  \n   28  function CollectAnimalFromWorld:start(ai, entity, args)\n   29:    local shepherd_class = entity:get_component('stonehearth:job'):get_curr_job_controller()\n   30     if shepherd_class and shepherd_class.set_shepherding then\n   31        shepherd_class:set_shepherding(true)\n   ..\n   34  \n   35  function CollectAnimalFromWorld:stop(ai, entity, args)\n   36:    local shepherd_class = entity:get_component('stonehearth:job'):get_curr_job_controller()\n   37     if shepherd_class and shepherd_class.set_shepherding then\n   38        shepherd_class:set_shepherding(false)\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\create_animal_for_pasture.lua:\n   27     self._using_decoy = false\n   28  \n   29:    local shepherd_class = self._entity:get_component('stonehearth:job'):get_curr_job_controller()\n   30     -- true if the shepherd should be successful finding a real animal\n   31     self._spawn_real_animal = shepherd_class:can_find_animal_in_world()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\find_stray_animal_action.lua:\n   26  \n   27  function FindStrayAnimal:start(ai, entity, args)\n   28:    local shepherd_class = entity:get_component('stonehearth:job'):get_curr_job_controller()\n   29     if shepherd_class and shepherd_class.set_shepherding then\n   30        shepherd_class:set_shepherding(true)\n   ..\n   33  \n   34  function FindStrayAnimal:stop(ai, entity, args)\n   35:    local shepherd_class = entity:get_component('stonehearth:job'):get_curr_job_controller()\n   36     if shepherd_class and shepherd_class.set_shepherding then\n   37        shepherd_class:set_shepherding(false)\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\leave_animal_in_pasture_action.lua:\n   20        shepherded_component:set_following(false)\n   21  \n   22:       local shepherd_class = entity:get_component('stonehearth:job'):get_curr_job_controller()\n   23        shepherd_class:remove_trailing_animal(args.animal:get_id())\n   24  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\return_trailing_animals_to_pasture.lua:\n    9  \n   10  function ReturnTrailingAnimalToPasture:start(ai, entity, args)\n   11:    local shepherd_class = entity:get_component('stonehearth:job'):get_curr_job_controller()\n   12     if shepherd_class and shepherd_class.set_shepherding then\n   13        shepherd_class:set_shepherding(true)\n   ..\n   16  \n   17  function ReturnTrailingAnimalToPasture:stop(ai, entity, args)\n   18:    local shepherd_class = entity:get_component('stonehearth:job'):get_curr_job_controller()\n   19     if shepherd_class and shepherd_class.set_shepherding then\n   20        shepherd_class:set_shepherding(false)\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\wait_for_trailing_animal_action.lua:\n   19  \n   20     --If there are any animals currenty trailing us, pick one to return to its pasture\n   21:    local shepherd_class = entity:get_component('stonehearth:job'):get_curr_job_controller()\n   22     if shepherd_class and shepherd_class.get_trailing_animals then\n   23        local trailed_animals, num_trailed = shepherd_class:get_trailing_animals()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ai\\actions\\trapping\\check_bait_trap_adjacent_action.lua:\n   26        trapped_entity_id = trapped_entity:get_id()\n   27        local job_component = entity:get_component('stonehearth:job')\n   28:       local trapper_controller = job_component:get_curr_job_controller()\n   29        if trapper_controller:should_tame(trapped_entity) then\n   30           self:_tame_target(trap_component, trapped_entity)\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\components\\job\\job_component.lua:\n   22     self._sv.job_uri = nil\n   23     self._sv.job_json_path = nil\n   24:    self._sv.curr_job_controller = nil\n   25     self._sv.total_level = 0\n   26     self._sv.curr_job_level = 0\n   ..\n   47  function JobComponent:activate()\n   48     if self._sv.job_uri then\n   49:       self._sv.curr_job_controller = self._sv.job_controllers[self._sv.job_uri]\n   50     end\n   51  \n   ..\n   97     end\n   98     self._sv.job_controllers = nil\n   99:    self._sv.curr_job_controller = nil\n  100  \n  101     --Remove from task groups (may be redundant if we are killed, which first calls demote, then this)\n  ...\n  118  end\n  119  \n  120: function JobComponent:get_curr_job_controller()\n  121:    return self._sv.curr_job_controller\n  122  end\n  123  \n  ...\n  277              radiant.create_controller(self._job_json.controller, self._entity)\n  278        end\n  279:       self._sv.curr_job_controller = self._sv.job_controllers[self._sv.job_uri]\n  280        self:_call_job('promote', self._sv.job_json_path, {talisman = talisman_entity})\n  281  \n  ...\n  320     self:_drop_talisman(old_job_json)\n  321  \n  322:    if self._sv.curr_job_controller then\n  323        self:_call_job('demote')\n  324:       self._sv.curr_job_controller = nil\n  325     end\n  326  \n  ...\n  447  \n  448  function JobComponent:_call_job(method_name, ...)\n  449:    local controller = self._sv.curr_job_controller\n  450     local fn = controller[method_name]\n  451     if fn then\n  ...\n  564  --Itereate through each perk we have and call its remove function\n  565  function JobComponent:_remove_all_perks()\n  566:    if not self._sv.curr_job_controller then\n  567        return\n  568     end\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\components\\shepherd_pasture\\shepherded_animal_component.lua:\n   43        -- shepherd to remove us.\n   44        if self._sv.last_shepherd_entity and self._sv.last_shepherd_entity:is_valid() then\n   45:          local shepherd_class = self._sv.last_shepherd_entity:get_component('stonehearth:job'):get_curr_job_controller()\n   46           if shepherd_class and shepherd_class.remove_trailing_animal then\n   47              shepherd_class:remove_trailing_animal(animal:get_id())\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\data\\buffs\\shepherding\\shepherding_buff.lua:\n   13  \n   14  function ShepherdingBuffController:on_trailing_animals_updated()\n   15:    local shepherd_job = self._entity:get_component('stonehearth:job'):get_curr_job_controller()\n   16     if shepherd_job and shepherd_job.get_trailing_animals then\n   17        local trailing_animals, num_trailing_animals = shepherd_job:get_trailing_animals()\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\services\\server\\job\\job_info_controller.lua:\n  318        local job_component = entity:get_component('stonehearth:job')\n  319        assert(job_component:get_job_uri() == self._sv.alias, 'entity job does not match job controller')\n  320:       local level = job_component:get_curr_job_controller():get_job_level()\n  321        if level > highest_level then\n  322           highest_level = level\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ui\\game\\character_sheets\\citizen_character_sheet\\citizen_character_sheet.js:\n   32  \n   33        'stonehearth:job' : {\n   34:          'curr_job_controller' : {},\n   35           'job_controllers' : {\n   36              '*' : {}\n   ..\n   76     _updateJobDataDetails: function() {\n   77        Ember.run.scheduleOnce('afterRender', this, '_updateJobsAndPerks');\n   78:    }.observes('model.stonehearth:job.curr_job_controller'),\n   79  \n   80     _updateJobDescription: function() {\n   ..\n  389        $currClass.removeClass('retiredEffect');\n  390        //$currClass.removeClass('retiredClassNameHeader').addClass('activeClassNameHeader');\n  391:       self._unlockPerksToLevel($currClass,  this.get('model.stonehearth:job.curr_job_controller.last_gained_lv'))\n  392        $currClass.find('.retiredAt').hide();\n  393  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ui\\game\\citizens\\citizens.js:\n    8           \"*\": {\n    9              \"stonehearth:job\": {\n   10:                'curr_job_controller' : {}\n   11              },\n   12              \"stonehearth:unit_info\": {}\n   ..\n  214        },\n  215        \"stonehearth:job\": {\n  216:          'curr_job_controller' : {}\n  217        },\n  218        \"stonehearth:crafter\": {\n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ui\\game\\party_editor\\party_editor.js:\n  160        \"stonehearth:unit_info\": {},\n  161        \"stonehearth:job\" : {\n  162:          'curr_job_controller' : {},\n  163           \"job_uri\" : {}\n  164        },\n  ...\n  200     //Only add pple to the list if they are not already in the party, and if they are a combat class\n  201     shouldBeAdded: function() {\n  202:       var isCombatClass = this.get('model.stonehearth:job.curr_job_controller.is_combat_class');\n  203        var viewPartyUri = this.get('party_entity');\n  204        var citizenPartyUri = this.get('model.stonehearth:party_member.party.__self');\n  205  \n  206        return isCombatClass && viewPartyUri != citizenPartyUri;\n  207:    }.property('model.stonehearth:job.curr_job_controller', 'model.stonehearth:party_member.party', 'party_entity'),\n  208  });\n  209  \n\nC:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\stonehearth\\ui\\game\\unit_frame\\unit_frame.js:\n   29        },\n   30        \"stonehearth:job\" : {\n   31:          'curr_job_controller' : {}\n   32        },\n   33        \"stonehearth:buffs\" : {\n   ..\n  321  \n  322     _updateCombatTools: function() {\n  323:       var is_combat_class = this.get('model.stonehearth:job.curr_job_controller.is_combat_class');\n  324        var player_id = this.get('model.player_id');\n  325        var curr_player_id = App.stonehearthClient.getPlayerId();\n  ...\n  330           this.$('#combatControls').hide();\n  331        }\n  332:    }.observes('model.stonehearth:job.curr_job_controller', 'model.stonehearth:party'),\n  333  \n  334     _callCombatCommand: function(command) {\n\n39 matches across 18 files\n",
			"settings":
			{
				"buffer_size": 205235,
				"line_ending": "Windows",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/stonehearth/components/job/job_component.lua",
			"settings":
			{
				"buffer_size": 26067,
				"line_ending": "Windows"
			}
		},
		{
			"file": "jobs/varanus_herder/varanus_herder.lua",
			"settings":
			{
				"buffer_size": 228,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/stonehearth/jobs/shepherd/shepherd.lua",
			"settings":
			{
				"buffer_size": 9319,
				"line_ending": "Windows"
			}
		},
		{
			"file": "jobs/varanus_herder/varanus_herder_description.json",
			"settings":
			{
				"buffer_size": 3110,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/Users/Adam/AppData/Local/Temp/7zO87A0E3DD/fisher_description.json",
			"settings":
			{
				"buffer_size": 3111,
				"line_ending": "Windows"
			}
		},
		{
			"file": "mixins/start_menu.json",
			"settings":
			{
				"buffer_size": 641,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/user_settings.json",
			"settings":
			{
				"buffer_size": 7458,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 335.0,
		"last_filter": "install",
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Remove Package"
			],
			[
				"Package Control: re",
				"Package Control: Remove Package"
			],
			[
				"intall",
				"Package Control: Install Package"
			],
			[
				"",
				"About"
			]
		],
		"width": 444.0
	},
	"console":
	{
		"height": 157.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/stonehearth",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/stonehearth/lib",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/stonehearth/lib/entity_forms",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/varanus_herder",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/varanus_herder/jobs",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/varanus_herder/jobs/varanus_herder",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/varanus_herder/mixins",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth"
	],
	"file_history":
	[
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/stonehearth/jobs/base_job.lua",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/stonehearth.log",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/stonehearth/jobs/index.json",
		"/C/Users/Adam/AppData/Local/Temp/7zO87A3BAB9/index.json",
		"/C/Users/Adam/AppData/Local/Temp/7zO87AF3511/manifest.json",
		"/C/Users/Adam/AppData/Local/Temp/7zO87ACC9BF/manifest.json",
		"/C/Users/Adam/AppData/Local/Temp/7zO87A77680/player_task_groups.json",
		"/C/Users/Adam/AppData/Local/Temp/7zO87AF8400/index.json",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/varanus_herder/jobs/index.json",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/stonehearth/data/ui/start_menu.json",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/stonehearth/jobs/archer/archer_description.json",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/stonehearth/jobs/shepherd/shepherd_description.json",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/stonehearth/hotkeys.json",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/varanus_herder/data/ui/start_menu.json",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/varanus_herder/manifest.json",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/varanus_herder/jobs/varanus_herder/varanus_herder_leash/varanus_herder_leash.json",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/varanus_herder/jobs/varanus_herder/varanus_herder_description.json",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/varanus_herder/jobs/varanus_herder/varanus_herder_leash/varanus_herder_leash_iconic.json",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/varanus_herder/jobs/varanus_herder/varanus_herder_leash/varanus_herder_leash_talisman.json",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/varanus_herder/ai/actions/claim_animal_for_pasture.lua",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/varanus_herder/jobs/varanus_herder/varanus_herder_abilities/varanus_herder_abilities.json",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/varanus_herder/jobs/varanus_herder/varanus_herder_leash/varanus_herder_crook_iconic.json",
		"/C/Users/Adam/Desktop/BC.java",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/box_command_tool/manifest.json",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/stonehearth/manifest.json",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/box_command_tool/call_handlers/box_command_tool_call_handler/box_command_tool_call_handler.lua",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/box_command_tool/data/ui/start_menu.json",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/box_command_tool/init_client.lua",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/user_settings.json",
		"/C/Users/Adam/Desktop/box_command_tool/call_handlers/box_command_tool_call_handler/box_command_tool_call_handler.lua",
		"/C/Users/Adam/Desktop/box_command_tool/manifest.json",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/stonehearth/ui/game/tip_popup/tip_popup.js",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/stonehearth/ui/root/js/libs/jquery-1.10.2.js",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/stonehearth/services/client/hilight/hilight_service.lua",
		"/C/Users/Adam/AppData/Roaming/npm/node_modules/lesshint/lib/config/defaults.json",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/speedrunlings/ui/speedrunlings_main_window/speedrunlings_main_window.less",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/edge_pan/ui/edge_pan.js",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/edge_pan/ui/edge_pan.html",
		"/C/Users/Adam/AppData/Roaming/Sublime Text 3/Packages/SublimeLinter/SublimeLinter.sublime-settings",
		"/C/Users/Adam/AppData/Roaming/Sublime Text 3/Installed Packages/SublimeLinter-contrib-lesshint.sublime-package",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/edge_pan/ui/edge_pan.less",
		"/C/Users/Adam/Documents/Portfolio/app/manifest.json",
		"/C/Users/Adam/AppData/Local/Temp/7zO0C210903/manifest.json",
		"/C/Users/Adam/AppData/Local/Temp/7zO4924B336/swamp_goblins_client.lua",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/stonehearth/data/traits/animal_companion/animal_companion_script.lua",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/stonehearth/components/happiness/happiness_component.lua",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/stonehearth/services/server/conversation/conversation_manager.lua",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/radiant/modules/entities.lua",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/stonehearth/components/commands/commands_component.lua",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/stonehearth/services/client/build_editor/item_placer.lua",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/stonehearth/call_handlers/place_item_call_handler.lua",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/debugtools/ui/entity_editor/entity_editor.html",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/edge_pan/manifest.json",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/stonehearth/ui/root/js/libs/jquery.tooltipster.js",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/stonehearth/ui/common/tooltip_helper/tooltip_helper.js",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/stonehearth/data/traits/magnificent_beard/magnificent_beard_trait.lua",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/stonehearth/services/client/selection/selection_service.lua",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/stonehearth/services/client/selection/xz_region_selector.lua",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/box_command_tool/ui/box_command_tool.js",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/stonehearth/components/door/door_component.lua",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/radiant/modules/client_entities.lua",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/stonehearth/data/biome/temperate_generation_data.json",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/stonehearth/lib/build_util.lua",
		"/C/Users/Adam/Desktop/box_command_tool/ui/box_command_tool.js",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/box_command_tool/hotkeys.json",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/stonehearth/call_handlers/resource_call_handler.lua",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/stonehearth/call_handlers/selection_call_handler.lua",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/stonehearth/ui/game/start_menu/stonehearth_menu.js",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/stonehearth/call_handlers/mining_call_handler.lua",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/stonehearth/ui/game/start_menu/start_menu.less",
		"/C/Users/Adam/Desktop/box_command_tool/data/ui/start_menu.json",
		"/C/Users/Adam/AppData/Roaming/Sublime Text 3/Packages/User/Package Control.sublime-settings",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/mass_command_tool/manifest.json",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/mass_command_tool/server_init.lua",
		"/C/Users/Adam/Desktop/box_command_tool/locales/en.json",
		"/C/Users/Adam/Desktop/box_command_tool/hotkeys.json",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/mass_command_tool/call_handlers/mass_command_tool_call_handler/mass_command_tool_call_handler.lua",
		"/C/Users/Adam/Desktop/box_command_tool/server_init.lua",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/stonehearth/call_handlers/trapping_call_handler.lua",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/stonehearth/call_handlers/shepherd_call_handler.lua",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/stonehearth/ui/root/js/stonehearth/stonehearth_client.js",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/mass_command_tool/ui/mass_command_tool.js",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/mass_command_tool/services/server/mass_command/mass_command_service.lua",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/stonehearth/ui/game/start_menu/start_menu.js",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/stonehearth/services/server/bulletin_board/bulletin_board_service.lua",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/mass_command_tool/services/server/mass_command_tool/mass_command_service.lua",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/stonehearth/services/client/camera/camera_service.lua",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/stonehearth/ui/game/game.less",
		"/C/Users/Adam/AppData/Roaming/Sublime Text 3/Packages/LESS/README.md",
		"/C/Users/Adam/AppData/Roaming/Sublime Text 3/Packages/SublimeCodeIntel/SublimeCodeIntel.sublime-settings",
		"/C/Users/Adam/AppData/Roaming/Sublime Text 3/Packages/Package Control/Package Control.sublime-settings",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/microworld/micro_world_server.lua",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/stonehearth/stonehearth_client.lua",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/stonehearth/components/thoughts/thoughts_component.lua",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/stonehearth/ui/game/modes/build_mode/place_item/place_item.js",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/mass_command_tool/data/ui/start_menu.json",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/mass_command_tool/locales/en.json",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/mass_command_tool/hotkeys.json",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/gridkeys/hotkeys.json",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/stonehearth/components/farmer_field/farmer_field_component.lua",
		"/C/Users/Adam/Documents/Starcraft/CSettings.json",
		"/C/Users/Adam/AppData/Local/Temp/7zOC8A5C484/follow_cam_remembers.lua",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/never_furrow_fields/manifest.json",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/never_furrow_fields/never_furrow_fields.lua",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/stonehearth/call_handlers/farming_call_handler.lua",
		"/C/Users/Adam/AppData/Local/Temp/7zOC8AC7B51/follow_cam_remembers.lua",
		"/C/Users/Adam/AppData/Local/Temp/7zOC8A826C2/manifest.json",
		"/C/Users/Adam/Desktop/never_furrow_fields/manifest.json",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/stonehearth/ai/actions/till_field_adjacent_action.lua",
		"/C/Users/Adam/Desktop/never_furrow_fields/never_furrow_fields.lua",
		"/C/Users/Adam/Desktop/never_furrow_fields/follow_cam_remembers.lua",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/microworld/worlds/settlement_test_world.lua",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/stonehearth/data/interactions/extractors/field_layer_extractor.lua",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/mass_command_tool/call_handlers/mass_undeploy_call_handler/mass_undeploy_call_handler.lua",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/mass_undeploy/data/ui/start_menu.json",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/mass_undeploy/hotkeys.json",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/mass_undeploy/locales/en.json",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/mass_undeploy/manifest.json",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/mass_undeploy/ui/mass_command_tool.js",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/stonehearth/services/client/camera/player_camera_controller.lua",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/speedrunlings/ui/speedrunlings_main_window/speedrunlings_main_window.js",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/speedrunlings/manifest.json",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/speedrunlings/locales/en.json",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/speedrunlings/ui/speedrunlings_main_window/speedrunlings_main_window.html",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/debugtools/ui/item_dropper/item_dropper.js",
		"/C/Users/Adam/Desktop/edge_pan/ui/edge_pan.js",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/follow_cam_remembers/follow_cam_remembers.lua",
		"/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/edge_pan/call_handlers/edge_pan_call_handler/edge_pan_call_handler.lua"
	],
	"find":
	{
		"height": 41.0
	},
	"find_in_files":
	{
		"height": 118.0,
		"where_history":
		[
			"",
			"*.lua",
			"C:\\Users\\Adam\\Documents\\Steam Client\\steamapps\\common\\Stonehearth\\mods\\varanus_herder",
			"*.lua",
			"*.js",
			"",
			"*.js",
			"*.lua",
			"",
			"*.lua",
			"",
			"*.lua",
			"",
			"*.lua",
			"*.js",
			"",
			"*.lua",
			"",
			"*.js",
			"",
			"*.js",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"ShepherdClass",
			"curr_job_controller",
			"promote_shepherd",
			"require",
			"varanus_herdering",
			"BaseJob",
			"ShepherdClass",
			"crook",
			"stonehearth",
			"start_menu",
			" * ",
			"newBL",
			"add_thought",
			"tooltip",
			".call(\"mouse",
			".call('mouse",
			"world_to",
			"mouse_to",
			"select_entity",
			"hilight",
			".on(",
			"karet",
			"karat",
			".tooltipster(",
			"tooltip",
			"harvest:mine",
			"decoda",
			"get_entity",
			"choose_place_item_location",
			"_current_entity",
			"get_entity",
			"has_command",
			"get_entity",
			"userdata",
			"wrapper",
			"data_store",
			"data_store_ref_wrapper",
			"DataStoreRefWrapper",
			"has_command",
			"get_component(",
			".get_component(",
			".get_component",
			"get_component_data",
			"has_command",
			"get_component",
			"client_entities.get_component_data",
			"entities.get_component_data",
			"command",
			"has_command(",
			"stonehearth:commands",
			"_current",
			"command",
			"c++",
			"could not dispatch",
			"choose_place",
			"_fail_fn",
			"place_item_type_in_world",
			"more",
			"deferred",
			"transactional",
			"place_item",
			"choose_place_item_location",
			"mc_comm",
			"efc",
			"cube3",
			"mass_",
			"box_command",
			"mass_command_tool",
			"MassCommandCallHandler",
			"_valid_endpoints",
			"draw_region_outline_marquee",
			"_infer_mode",
			"xz_cell_size",
			"designate_mining_zone",
			"_get_dig_region",
			"set_can_contain_entity_filter",
			"set_can_contain_filter",
			"response",
			"_radiant.call(",
			"_on_mouse_event",
			"designate_mining_zone",
			"returned non-table type",
			"mass_command_server",
			"debugtools",
			"mass_command_server",
			"entity:get_id",
			"assert(",
			"_radiant.call(",
			"choose_place_item_location",
			"_radiant.call(",
			"choose_place_item_location",
			"callback = {",
			"response = {",
			"[#",
			"ItemPlacer(",
			"choose_place_item_location",
			"item_placer",
			"place_item_in_world",
			"move_item",
			"stonehearth:move_item",
			"stonehearth:place_item",
			"place_item",
			"radiant_place_item",
			"redeploy_item",
			"redploy_item",
			"'radiant:",
			"follow_cam_remembers",
			"PlayerCameraController",
			"never_furrow_fields",
			"- 1",
			"+ 1",
			"stonehearth.farming",
			"stonehearth:sounds:ui:start_menu:trigger_click",
			"radiant.call('radiant:play_sound'",
			"mass_command_tool",
			"mass_undeploy_call_handler",
			"MassUndeployCallHandler",
			"mass_undeploy",
			"$(top).on",
			"game_speed",
			"jump_to_last_followee",
			"JumpToLastFollowee",
			"homf",
			"_lastSelectedFollowee",
			"stonehearth.selection",
			"cam:follow",
			"_panEnabled",
			"edge_pan:start_pan"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"VaranusHerderClass",
			"shepherding",
			"ShepherdClass",
			"VaranusHerderClass",
			"leash",
			"",
			"bl",
			"box_",
			"box_command_tool",
			"BoxCommandCallHandler",
			"mass_command_tool",
			"mass_command_server",
			"never_furrow_fields",
			"FarmerFieldComponent",
			"",
			"mass_command_tool_call_handler",
			"MassCommandCallHandler",
			"mass_command_tool",
			"follow_cam_remembers",
			"jump_to_last_followee_init",
			"JumpToLastFollowee",
			"_lastValidFollowee",
			"_can_pan",
			"edge_pan:can_pan",
			"#rightPan",
			"#bottomPan",
			"#leftPan",
			"#topPan",
			"0px;",
			"EdgePanCameraController",
			"screen_panner",
			"GridKeys",
			"Gridkeys",
			": function () {",
			"mass_undeploy",
			"MassUndeployCallHandler",
			": \"---\"",
			"compactify_zone",
			"entity.width",
			"entity.height",
			"rect.height",
			"rect.width",
			"",
			"},\n{\n\t\t\"name\": \"",
			"},\n{\n\t\t\"name\": ",
			"{\n\t\t\"name\": ",
			"._sv._current_run",
			"",
			"current_run_name",
			"splitDate",
			"speedrunlings_server_init",
			"_$pauseButton",
			"_getSplitsForRun",
			"speedrunlings_main_window",
			"keyr",
			"keye",
			"keyf"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": false
	},
	"groups":
	[
		{
			"selected": 5,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "manifest.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 792,
						"regions":
						{
						},
						"selection":
						[
							[
								540,
								540
							]
						],
						"settings":
						{
							"auto_complete": true,
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html"
								},
								{
									"characters": ".#",
									"selector": "text.html"
								}
							],
							"syntax": "Packages/JavaScript/JSON.sublime-syntax",
							"tab_size": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/stonehearth/manifest.json",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 218154,
						"regions":
						{
						},
						"selection":
						[
							[
								473,
								473
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html"
								},
								{
									"characters": ".#",
									"selector": "text.html"
								}
							],
							"syntax": "Packages/JavaScript/JSON.sublime-syntax",
							"tab_size": 6,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 45020.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/C/Users/Adam/AppData/Local/Temp/7zO87A0A35A/fisher.lua",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2199,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html"
								},
								{
									"characters": ".#",
									"selector": "text.html"
								}
							],
							"syntax": "Packages/LuaExtended/LuaExtended.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 2.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 3,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 205235,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										250,
										257
									],
									[
										334,
										341
									],
									[
										435,
										442
									],
									[
										686,
										693
									],
									[
										763,
										770
									],
									[
										1131,
										1138
									],
									[
										1559,
										1566
									],
									[
										1636,
										1643
									],
									[
										1809,
										1816
									],
									[
										1955,
										1962
									],
									[
										2196,
										2203
									],
									[
										2481,
										2488
									],
									[
										2567,
										2574
									],
									[
										2805,
										2812
									],
									[
										2947,
										2954
									],
									[
										3165,
										3172
									],
									[
										3265,
										3272
									],
									[
										3599,
										3606
									],
									[
										3802,
										3809
									],
									[
										3887,
										3894
									],
									[
										3952,
										3959
									],
									[
										4019,
										4026
									],
									[
										4088,
										4095
									],
									[
										4170,
										4177
									],
									[
										4717,
										4724
									],
									[
										4771,
										4778
									],
									[
										4863,
										4870
									],
									[
										5127,
										5134
									],
									[
										5197,
										5204
									],
									[
										5264,
										5271
									],
									[
										5565,
										5572
									],
									[
										5634,
										5641
									],
									[
										5927,
										5934
									],
									[
										5995,
										6002
									],
									[
										6056,
										6063
									],
									[
										6140,
										6147
									],
									[
										6213,
										6220
									],
									[
										6283,
										6290
									],
									[
										6577,
										6584
									],
									[
										6800,
										6807
									],
									[
										7015,
										7022
									],
									[
										7198,
										7205
									],
									[
										7366,
										7373
									],
									[
										7500,
										7507
									],
									[
										7559,
										7566
									],
									[
										7603,
										7610
									],
									[
										7649,
										7656
									],
									[
										7700,
										7707
									],
									[
										7742,
										7749
									],
									[
										7785,
										7792
									],
									[
										7832,
										7839
									],
									[
										7881,
										7888
									],
									[
										7940,
										7947
									],
									[
										7981,
										7988
									],
									[
										8200,
										8207
									],
									[
										8415,
										8422
									],
									[
										8549,
										8556
									],
									[
										8608,
										8615
									],
									[
										8652,
										8659
									],
									[
										8694,
										8701
									],
									[
										8736,
										8743
									],
									[
										8782,
										8789
									],
									[
										8837,
										8844
									],
									[
										8889,
										8896
									],
									[
										8939,
										8946
									],
									[
										8991,
										8998
									],
									[
										9043,
										9050
									],
									[
										9091,
										9098
									],
									[
										9146,
										9153
									],
									[
										9265,
										9272
									],
									[
										9392,
										9399
									],
									[
										9668,
										9675
									],
									[
										9902,
										9909
									],
									[
										10048,
										10055
									],
									[
										10332,
										10339
									],
									[
										10423,
										10430
									],
									[
										10433,
										10440
									],
									[
										10481,
										10488
									],
									[
										10698,
										10705
									],
									[
										10939,
										10946
									],
									[
										11079,
										11086
									],
									[
										11195,
										11202
									],
									[
										11281,
										11288
									],
									[
										11313,
										11320
									],
									[
										11466,
										11473
									],
									[
										11655,
										11662
									],
									[
										11937,
										11944
									],
									[
										12113,
										12120
									],
									[
										12392,
										12399
									],
									[
										12535,
										12542
									],
									[
										12707,
										12714
									],
									[
										12881,
										12888
									],
									[
										12965,
										12972
									],
									[
										13089,
										13096
									],
									[
										13369,
										13376
									],
									[
										13486,
										13493
									],
									[
										13532,
										13539
									],
									[
										13730,
										13737
									],
									[
										14076,
										14083
									],
									[
										14328,
										14335
									],
									[
										14625,
										14632
									],
									[
										14862,
										14869
									],
									[
										15238,
										15245
									],
									[
										15284,
										15291
									],
									[
										15341,
										15348
									],
									[
										15663,
										15670
									],
									[
										15967,
										15974
									],
									[
										16219,
										16226
									],
									[
										16444,
										16451
									],
									[
										16736,
										16743
									],
									[
										17142,
										17149
									],
									[
										17511,
										17518
									],
									[
										17567,
										17574
									],
									[
										17632,
										17639
									],
									[
										17942,
										17949
									],
									[
										18296,
										18303
									],
									[
										18598,
										18605
									],
									[
										18633,
										18640
									],
									[
										18943,
										18950
									],
									[
										19178,
										19185
									],
									[
										19519,
										19526
									],
									[
										19754,
										19761
									],
									[
										20022,
										20029
									],
									[
										20213,
										20220
									],
									[
										20257,
										20264
									],
									[
										20326,
										20333
									],
									[
										20657,
										20664
									],
									[
										20948,
										20955
									],
									[
										21154,
										21161
									],
									[
										21375,
										21382
									],
									[
										21409,
										21416
									],
									[
										21498,
										21505
									],
									[
										21687,
										21694
									],
									[
										21943,
										21950
									],
									[
										22192,
										22199
									],
									[
										22427,
										22434
									],
									[
										22495,
										22502
									],
									[
										22567,
										22574
									],
									[
										22639,
										22646
									],
									[
										22707,
										22714
									],
									[
										22773,
										22780
									],
									[
										22849,
										22856
									],
									[
										22931,
										22938
									],
									[
										23169,
										23176
									],
									[
										23413,
										23420
									],
									[
										23655,
										23662
									],
									[
										23899,
										23906
									],
									[
										24149,
										24156
									],
									[
										24406,
										24413
									],
									[
										24640,
										24647
									],
									[
										24906,
										24913
									],
									[
										25252,
										25259
									],
									[
										25417,
										25424
									],
									[
										25645,
										25652
									],
									[
										25720,
										25727
									],
									[
										26002,
										26009
									],
									[
										26203,
										26210
									],
									[
										26297,
										26304
									],
									[
										26491,
										26498
									],
									[
										26712,
										26719
									],
									[
										26778,
										26785
									],
									[
										26879,
										26886
									],
									[
										27073,
										27080
									],
									[
										27331,
										27338
									],
									[
										27588,
										27595
									],
									[
										27836,
										27843
									],
									[
										28118,
										28125
									],
									[
										28377,
										28384
									],
									[
										28635,
										28642
									],
									[
										28863,
										28870
									],
									[
										29122,
										29129
									],
									[
										29462,
										29469
									],
									[
										29760,
										29767
									],
									[
										29969,
										29976
									],
									[
										30226,
										30233
									],
									[
										30646,
										30653
									],
									[
										30946,
										30953
									],
									[
										31154,
										31161
									],
									[
										31255,
										31262
									],
									[
										31638,
										31645
									],
									[
										31704,
										31711
									],
									[
										32069,
										32076
									],
									[
										32340,
										32347
									],
									[
										32620,
										32627
									],
									[
										32900,
										32907
									],
									[
										33170,
										33177
									],
									[
										33387,
										33394
									],
									[
										33631,
										33638
									],
									[
										33956,
										33963
									],
									[
										34175,
										34182
									],
									[
										34406,
										34413
									],
									[
										34623,
										34630
									],
									[
										34973,
										34980
									],
									[
										35209,
										35216
									],
									[
										35415,
										35422
									],
									[
										35649,
										35656
									],
									[
										35908,
										35915
									],
									[
										36154,
										36161
									],
									[
										36438,
										36445
									],
									[
										36704,
										36711
									],
									[
										36957,
										36964
									],
									[
										37263,
										37270
									],
									[
										37527,
										37534
									],
									[
										37784,
										37791
									],
									[
										38066,
										38073
									],
									[
										38226,
										38233
									],
									[
										38445,
										38452
									],
									[
										38667,
										38674
									],
									[
										39000,
										39007
									],
									[
										39072,
										39079
									],
									[
										39362,
										39369
									],
									[
										39662,
										39669
									],
									[
										39957,
										39964
									],
									[
										40239,
										40246
									],
									[
										40464,
										40471
									],
									[
										40513,
										40520
									],
									[
										40808,
										40815
									],
									[
										40857,
										40864
									],
									[
										41130,
										41137
									],
									[
										41410,
										41417
									],
									[
										41733,
										41740
									],
									[
										41988,
										41995
									],
									[
										42223,
										42230
									],
									[
										42302,
										42309
									],
									[
										42376,
										42383
									],
									[
										42646,
										42653
									],
									[
										42725,
										42732
									],
									[
										42799,
										42806
									],
									[
										43048,
										43055
									],
									[
										43286,
										43293
									],
									[
										43508,
										43515
									],
									[
										43731,
										43738
									],
									[
										43802,
										43809
									],
									[
										44064,
										44071
									],
									[
										44284,
										44291
									],
									[
										44514,
										44521
									],
									[
										44771,
										44778
									],
									[
										45002,
										45009
									],
									[
										45081,
										45088
									],
									[
										45155,
										45162
									],
									[
										45523,
										45530
									],
									[
										45761,
										45768
									],
									[
										46084,
										46091
									],
									[
										46325,
										46332
									],
									[
										46428,
										46435
									],
									[
										46669,
										46676
									],
									[
										46938,
										46945
									],
									[
										47216,
										47223
									],
									[
										47490,
										47497
									],
									[
										47701,
										47708
									],
									[
										47978,
										47985
									],
									[
										48205,
										48212
									],
									[
										48440,
										48447
									],
									[
										48780,
										48787
									],
									[
										49146,
										49153
									],
									[
										49407,
										49414
									],
									[
										49662,
										49669
									],
									[
										49891,
										49898
									],
									[
										50198,
										50205
									],
									[
										50462,
										50469
									],
									[
										50730,
										50737
									],
									[
										50958,
										50965
									],
									[
										51004,
										51011
									],
									[
										51269,
										51276
									],
									[
										51506,
										51513
									],
									[
										51702,
										51709
									],
									[
										51892,
										51899
									],
									[
										51938,
										51945
									],
									[
										52214,
										52221
									],
									[
										52536,
										52543
									],
									[
										52582,
										52589
									],
									[
										52841,
										52848
									],
									[
										53125,
										53132
									],
									[
										53390,
										53397
									],
									[
										53629,
										53636
									],
									[
										53683,
										53690
									],
									[
										53919,
										53926
									],
									[
										53962,
										53969
									],
									[
										54014,
										54021
									],
									[
										54271,
										54278
									],
									[
										54314,
										54321
									],
									[
										54400,
										54407
									],
									[
										54666,
										54673
									],
									[
										54719,
										54726
									],
									[
										54789,
										54796
									],
									[
										55171,
										55178
									],
									[
										55236,
										55243
									],
									[
										55468,
										55475
									],
									[
										55796,
										55803
									],
									[
										56118,
										56125
									],
									[
										56443,
										56450
									],
									[
										56805,
										56812
									],
									[
										57158,
										57165
									],
									[
										57559,
										57566
									],
									[
										57898,
										57905
									],
									[
										57969,
										57976
									],
									[
										58041,
										58048
									],
									[
										58283,
										58290
									],
									[
										58352,
										58359
									],
									[
										58628,
										58635
									],
									[
										58699,
										58706
									],
									[
										58924,
										58931
									],
									[
										59200,
										59207
									],
									[
										59257,
										59264
									],
									[
										59333,
										59340
									],
									[
										59634,
										59641
									],
									[
										59856,
										59863
									],
									[
										59915,
										59922
									],
									[
										60163,
										60170
									],
									[
										60215,
										60222
									],
									[
										60265,
										60272
									],
									[
										60481,
										60488
									],
									[
										60703,
										60710
									],
									[
										61051,
										61058
									],
									[
										61170,
										61177
									],
									[
										61377,
										61384
									],
									[
										61427,
										61434
									],
									[
										61730,
										61737
									],
									[
										61982,
										61989
									],
									[
										62039,
										62046
									],
									[
										62352,
										62359
									],
									[
										62686,
										62693
									],
									[
										62955,
										62962
									],
									[
										63229,
										63236
									],
									[
										63593,
										63600
									],
									[
										63707,
										63714
									],
									[
										63909,
										63916
									],
									[
										63962,
										63969
									],
									[
										64261,
										64268
									],
									[
										64310,
										64317
									],
									[
										64403,
										64410
									],
									[
										64807,
										64814
									],
									[
										65125,
										65132
									],
									[
										65194,
										65201
									],
									[
										65242,
										65249
									],
									[
										65293,
										65300
									],
									[
										65339,
										65346
									],
									[
										65574,
										65581
									],
									[
										65840,
										65847
									],
									[
										66117,
										66124
									],
									[
										66170,
										66177
									],
									[
										66411,
										66418
									],
									[
										66461,
										66468
									],
									[
										66732,
										66739
									],
									[
										66789,
										66796
									],
									[
										67020,
										67027
									],
									[
										67488,
										67495
									],
									[
										67535,
										67542
									],
									[
										67708,
										67715
									],
									[
										68028,
										68035
									],
									[
										68308,
										68315
									],
									[
										68573,
										68580
									],
									[
										68628,
										68635
									],
									[
										68873,
										68880
									],
									[
										68934,
										68941
									],
									[
										69189,
										69196
									],
									[
										69409,
										69416
									],
									[
										69855,
										69862
									],
									[
										70126,
										70133
									],
									[
										70194,
										70201
									],
									[
										70264,
										70271
									],
									[
										70540,
										70547
									],
									[
										70822,
										70829
									],
									[
										71129,
										71136
									],
									[
										71452,
										71459
									],
									[
										71700,
										71707
									],
									[
										71752,
										71759
									],
									[
										71802,
										71809
									],
									[
										71980,
										71987
									],
									[
										72332,
										72339
									],
									[
										72392,
										72399
									],
									[
										72459,
										72466
									],
									[
										72810,
										72817
									],
									[
										73143,
										73150
									],
									[
										73483,
										73490
									],
									[
										73803,
										73810
									],
									[
										74156,
										74163
									],
									[
										74435,
										74442
									],
									[
										74540,
										74547
									],
									[
										74830,
										74837
									],
									[
										75027,
										75034
									],
									[
										75327,
										75334
									],
									[
										75788,
										75795
									],
									[
										76011,
										76018
									],
									[
										76457,
										76464
									],
									[
										76686,
										76693
									],
									[
										76915,
										76922
									],
									[
										76965,
										76972
									],
									[
										77063,
										77070
									],
									[
										77303,
										77310
									],
									[
										77401,
										77408
									],
									[
										77636,
										77643
									],
									[
										77686,
										77693
									],
									[
										77933,
										77940
									],
									[
										78225,
										78232
									],
									[
										78492,
										78499
									],
									[
										78563,
										78570
									],
									[
										78632,
										78639
									],
									[
										78884,
										78891
									],
									[
										79174,
										79181
									],
									[
										79635,
										79642
									],
									[
										79934,
										79941
									],
									[
										80271,
										80278
									],
									[
										80511,
										80518
									],
									[
										80561,
										80568
									],
									[
										80778,
										80785
									],
									[
										80821,
										80828
									],
									[
										81082,
										81089
									],
									[
										81359,
										81366
									],
									[
										81552,
										81559
									],
									[
										81925,
										81932
									],
									[
										81985,
										81992
									],
									[
										82208,
										82215
									],
									[
										82569,
										82576
									],
									[
										82865,
										82872
									],
									[
										82970,
										82977
									],
									[
										83241,
										83248
									],
									[
										83322,
										83329
									],
									[
										83638,
										83645
									],
									[
										83719,
										83726
									],
									[
										84086,
										84093
									],
									[
										84434,
										84441
									],
									[
										84555,
										84562
									],
									[
										84917,
										84924
									],
									[
										85221,
										85228
									],
									[
										85512,
										85519
									],
									[
										85632,
										85639
									],
									[
										85998,
										86005
									],
									[
										86118,
										86125
									],
									[
										86488,
										86495
									],
									[
										86771,
										86778
									],
									[
										87042,
										87049
									],
									[
										87316,
										87323
									],
									[
										87605,
										87612
									],
									[
										87847,
										87854
									],
									[
										88065,
										88072
									],
									[
										88326,
										88333
									],
									[
										88690,
										88697
									],
									[
										88817,
										88824
									],
									[
										89111,
										89118
									],
									[
										89344,
										89351
									],
									[
										89387,
										89394
									],
									[
										89626,
										89633
									],
									[
										89776,
										89783
									],
									[
										89820,
										89827
									],
									[
										89898,
										89905
									],
									[
										89929,
										89936
									],
									[
										89958,
										89965
									],
									[
										90101,
										90108
									],
									[
										90177,
										90184
									],
									[
										90404,
										90411
									],
									[
										90658,
										90665
									],
									[
										90879,
										90886
									],
									[
										91095,
										91102
									],
									[
										91337,
										91344
									],
									[
										91445,
										91452
									],
									[
										91650,
										91657
									],
									[
										91858,
										91865
									],
									[
										92097,
										92104
									],
									[
										92343,
										92350
									],
									[
										92583,
										92590
									],
									[
										92825,
										92832
									],
									[
										93065,
										93072
									],
									[
										93273,
										93280
									],
									[
										93478,
										93485
									],
									[
										93772,
										93779
									],
									[
										93878,
										93885
									],
									[
										94152,
										94159
									],
									[
										94195,
										94202
									],
									[
										94449,
										94456
									],
									[
										94694,
										94701
									],
									[
										94898,
										94905
									],
									[
										94955,
										94962
									],
									[
										95142,
										95149
									],
									[
										95286,
										95293
									],
									[
										95571,
										95578
									],
									[
										95798,
										95805
									],
									[
										96033,
										96040
									],
									[
										96167,
										96174
									],
									[
										96203,
										96210
									],
									[
										96496,
										96503
									],
									[
										96506,
										96513
									],
									[
										96771,
										96778
									],
									[
										96952,
										96959
									],
									[
										97179,
										97186
									],
									[
										97464,
										97471
									],
									[
										97735,
										97742
									],
									[
										98015,
										98022
									],
									[
										98062,
										98069
									],
									[
										98119,
										98126
									],
									[
										98209,
										98216
									],
									[
										98602,
										98609
									],
									[
										98869,
										98876
									],
									[
										98922,
										98929
									],
									[
										98997,
										99004
									],
									[
										99063,
										99070
									],
									[
										99370,
										99377
									],
									[
										99675,
										99682
									],
									[
										99764,
										99771
									],
									[
										99994,
										100001
									],
									[
										100248,
										100255
									],
									[
										100506,
										100513
									],
									[
										100771,
										100778
									],
									[
										101040,
										101047
									],
									[
										101106,
										101113
									],
									[
										101423,
										101430
									],
									[
										101697,
										101704
									],
									[
										101993,
										102000
									],
									[
										102232,
										102239
									],
									[
										102467,
										102474
									],
									[
										102672,
										102679
									],
									[
										102757,
										102764
									],
									[
										102788,
										102795
									],
									[
										102839,
										102846
									],
									[
										102988,
										102995
									],
									[
										103160,
										103167
									],
									[
										103391,
										103398
									],
									[
										103475,
										103482
									],
									[
										103555,
										103562
									],
									[
										103573,
										103580
									],
									[
										103699,
										103706
									],
									[
										103744,
										103751
									],
									[
										103789,
										103796
									],
									[
										103839,
										103846
									],
									[
										103921,
										103928
									],
									[
										104105,
										104112
									],
									[
										104167,
										104174
									],
									[
										104196,
										104203
									],
									[
										104214,
										104221
									],
									[
										104333,
										104340
									],
									[
										104351,
										104358
									],
									[
										104431,
										104438
									],
									[
										104575,
										104582
									],
									[
										104893,
										104900
									],
									[
										105067,
										105074
									],
									[
										105110,
										105117
									],
									[
										105152,
										105159
									],
									[
										105243,
										105250
									],
									[
										105340,
										105347
									],
									[
										105603,
										105610
									],
									[
										105783,
										105790
									],
									[
										105825,
										105832
									],
									[
										105872,
										105879
									],
									[
										106191,
										106198
									],
									[
										106510,
										106517
									],
									[
										106682,
										106689
									],
									[
										106902,
										106909
									],
									[
										107134,
										107141
									],
									[
										107184,
										107191
									],
									[
										107249,
										107256
									],
									[
										107520,
										107527
									],
									[
										107638,
										107645
									],
									[
										107721,
										107728
									],
									[
										107804,
										107811
									],
									[
										107891,
										107898
									],
									[
										107978,
										107985
									],
									[
										108061,
										108068
									],
									[
										108143,
										108150
									],
									[
										108229,
										108236
									],
									[
										108313,
										108320
									],
									[
										108394,
										108401
									],
									[
										108477,
										108484
									],
									[
										108569,
										108576
									],
									[
										108840,
										108847
									],
									[
										108919,
										108926
									],
									[
										109198,
										109205
									],
									[
										109248,
										109255
									],
									[
										109314,
										109321
									],
									[
										109560,
										109567
									],
									[
										109787,
										109794
									],
									[
										109994,
										110001
									],
									[
										110042,
										110049
									],
									[
										110093,
										110100
									],
									[
										110242,
										110249
									],
									[
										110506,
										110513
									],
									[
										110556,
										110563
									],
									[
										110621,
										110628
									],
									[
										110881,
										110888
									],
									[
										110938,
										110945
									],
									[
										111208,
										111215
									],
									[
										111268,
										111275
									],
									[
										111575,
										111582
									],
									[
										111631,
										111638
									],
									[
										111901,
										111908
									],
									[
										111967,
										111974
									],
									[
										112177,
										112184
									],
									[
										112454,
										112461
									],
									[
										112687,
										112694
									],
									[
										112745,
										112752
									],
									[
										112973,
										112980
									],
									[
										113253,
										113260
									],
									[
										113583,
										113590
									],
									[
										113643,
										113650
									],
									[
										113910,
										113917
									],
									[
										113967,
										113974
									],
									[
										114019,
										114026
									],
									[
										114075,
										114082
									],
									[
										114452,
										114459
									],
									[
										114578,
										114585
									],
									[
										114930,
										114937
									],
									[
										115187,
										115194
									],
									[
										115423,
										115430
									],
									[
										115790,
										115797
									],
									[
										116048,
										116055
									],
									[
										116320,
										116327
									],
									[
										116573,
										116580
									],
									[
										116652,
										116659
									],
									[
										116925,
										116932
									],
									[
										117214,
										117221
									],
									[
										117522,
										117529
									],
									[
										117569,
										117576
									],
									[
										117624,
										117631
									],
									[
										117708,
										117715
									],
									[
										117795,
										117802
									],
									[
										117889,
										117896
									],
									[
										118134,
										118141
									],
									[
										118181,
										118188
									],
									[
										118478,
										118485
									],
									[
										118708,
										118715
									],
									[
										118763,
										118770
									],
									[
										118840,
										118847
									],
									[
										119111,
										119118
									],
									[
										119153,
										119160
									],
									[
										119301,
										119308
									],
									[
										119346,
										119353
									],
									[
										119450,
										119457
									],
									[
										119495,
										119502
									],
									[
										119605,
										119612
									],
									[
										119725,
										119732
									],
									[
										120173,
										120180
									],
									[
										120623,
										120630
									],
									[
										120666,
										120673
									],
									[
										120955,
										120962
									],
									[
										121314,
										121321
									],
									[
										121395,
										121402
									],
									[
										121463,
										121470
									],
									[
										121675,
										121682
									],
									[
										121951,
										121958
									],
									[
										122175,
										122182
									],
									[
										122496,
										122503
									],
									[
										122569,
										122576
									],
									[
										122815,
										122822
									],
									[
										122877,
										122884
									],
									[
										122947,
										122954
									],
									[
										122995,
										123002
									],
									[
										123053,
										123060
									],
									[
										123134,
										123141
									],
									[
										123352,
										123359
									],
									[
										123538,
										123545
									],
									[
										123700,
										123707
									],
									[
										124172,
										124179
									],
									[
										124400,
										124407
									],
									[
										124832,
										124839
									],
									[
										125101,
										125108
									],
									[
										125348,
										125355
									],
									[
										125583,
										125590
									],
									[
										125654,
										125661
									],
									[
										125714,
										125721
									],
									[
										125973,
										125980
									],
									[
										126139,
										126146
									],
									[
										126182,
										126189
									],
									[
										126443,
										126450
									],
									[
										126514,
										126521
									],
									[
										126845,
										126852
									],
									[
										127171,
										127178
									],
									[
										127530,
										127537
									],
									[
										127903,
										127910
									],
									[
										127977,
										127984
									],
									[
										128350,
										128357
									],
									[
										128389,
										128396
									],
									[
										128724,
										128731
									],
									[
										128749,
										128756
									],
									[
										129030,
										129037
									],
									[
										129124,
										129131
									],
									[
										129210,
										129217
									],
									[
										129491,
										129498
									],
									[
										129553,
										129560
									],
									[
										129716,
										129723
									],
									[
										129853,
										129860
									],
									[
										129905,
										129912
									],
									[
										130007,
										130014
									],
									[
										130058,
										130065
									],
									[
										130254,
										130261
									],
									[
										130316,
										130323
									],
									[
										130398,
										130405
									],
									[
										130664,
										130671
									],
									[
										130726,
										130733
									],
									[
										130880,
										130887
									],
									[
										130899,
										130906
									],
									[
										130942,
										130949
									],
									[
										130987,
										130994
									],
									[
										131217,
										131224
									],
									[
										131303,
										131310
									],
									[
										131551,
										131558
									],
									[
										131681,
										131688
									],
									[
										131898,
										131905
									],
									[
										132237,
										132244
									],
									[
										132530,
										132537
									],
									[
										132806,
										132813
									],
									[
										133128,
										133135
									],
									[
										133522,
										133529
									],
									[
										133736,
										133743
									],
									[
										133870,
										133877
									],
									[
										134182,
										134189
									],
									[
										134426,
										134433
									],
									[
										134464,
										134471
									],
									[
										134739,
										134746
									],
									[
										134958,
										134965
									],
									[
										135306,
										135313
									],
									[
										135622,
										135629
									],
									[
										135795,
										135802
									],
									[
										136023,
										136030
									],
									[
										136216,
										136223
									],
									[
										136406,
										136413
									],
									[
										136588,
										136595
									],
									[
										136675,
										136682
									],
									[
										136815,
										136822
									],
									[
										137111,
										137118
									],
									[
										137143,
										137150
									],
									[
										137205,
										137212
									],
									[
										137235,
										137242
									],
									[
										137336,
										137343
									],
									[
										137427,
										137434
									],
									[
										137483,
										137490
									],
									[
										137534,
										137541
									],
									[
										137561,
										137568
									],
									[
										137631,
										137638
									],
									[
										137673,
										137680
									],
									[
										137719,
										137726
									],
									[
										137757,
										137764
									],
									[
										137975,
										137982
									],
									[
										138064,
										138071
									],
									[
										138195,
										138202
									],
									[
										138225,
										138232
									],
									[
										138307,
										138314
									],
									[
										138335,
										138342
									],
									[
										138381,
										138388
									],
									[
										138452,
										138459
									],
									[
										138513,
										138520
									],
									[
										138690,
										138697
									],
									[
										138801,
										138808
									],
									[
										139065,
										139072
									],
									[
										139166,
										139173
									],
									[
										139210,
										139217
									],
									[
										139338,
										139345
									],
									[
										139551,
										139558
									],
									[
										139683,
										139690
									],
									[
										139901,
										139908
									],
									[
										140036,
										140043
									],
									[
										140346,
										140353
									],
									[
										140499,
										140506
									],
									[
										140949,
										140956
									],
									[
										141287,
										141294
									],
									[
										141364,
										141371
									],
									[
										141835,
										141842
									],
									[
										142201,
										142208
									],
									[
										142496,
										142503
									],
									[
										142857,
										142864
									],
									[
										143123,
										143130
									],
									[
										143163,
										143170
									],
									[
										143312,
										143319
									],
									[
										143417,
										143424
									],
									[
										143542,
										143549
									],
									[
										143840,
										143847
									],
									[
										144072,
										144079
									],
									[
										144346,
										144353
									],
									[
										144553,
										144560
									],
									[
										144654,
										144661
									],
									[
										144866,
										144873
									],
									[
										145218,
										145225
									],
									[
										145384,
										145391
									],
									[
										145544,
										145551
									],
									[
										145824,
										145831
									],
									[
										145880,
										145887
									],
									[
										146138,
										146145
									],
									[
										146415,
										146422
									],
									[
										146609,
										146616
									],
									[
										146773,
										146780
									],
									[
										147066,
										147073
									],
									[
										147234,
										147241
									],
									[
										147367,
										147374
									],
									[
										147754,
										147761
									],
									[
										147999,
										148006
									],
									[
										148292,
										148299
									],
									[
										148611,
										148618
									],
									[
										148832,
										148839
									],
									[
										149035,
										149042
									],
									[
										149180,
										149187
									],
									[
										149560,
										149567
									],
									[
										149639,
										149646
									],
									[
										149930,
										149937
									],
									[
										150210,
										150217
									],
									[
										150431,
										150438
									],
									[
										150548,
										150555
									],
									[
										150712,
										150719
									],
									[
										150857,
										150864
									],
									[
										151233,
										151240
									],
									[
										151510,
										151517
									],
									[
										151646,
										151653
									],
									[
										151971,
										151978
									],
									[
										152207,
										152214
									],
									[
										152352,
										152359
									],
									[
										152642,
										152649
									],
									[
										152982,
										152989
									],
									[
										153254,
										153261
									],
									[
										153440,
										153447
									],
									[
										153799,
										153806
									],
									[
										153931,
										153938
									],
									[
										154208,
										154215
									],
									[
										154528,
										154535
									],
									[
										154749,
										154756
									],
									[
										154907,
										154914
									],
									[
										155059,
										155066
									],
									[
										155344,
										155351
									],
									[
										155577,
										155584
									],
									[
										155738,
										155745
									],
									[
										156099,
										156106
									],
									[
										156309,
										156316
									],
									[
										156443,
										156450
									],
									[
										156801,
										156808
									],
									[
										156942,
										156949
									],
									[
										157241,
										157248
									],
									[
										157550,
										157557
									],
									[
										157685,
										157692
									],
									[
										157995,
										158002
									],
									[
										158169,
										158176
									],
									[
										158265,
										158272
									],
									[
										158331,
										158338
									],
									[
										158397,
										158404
									],
									[
										158543,
										158550
									],
									[
										158699,
										158706
									],
									[
										158781,
										158788
									],
									[
										158870,
										158877
									],
									[
										158994,
										159001
									],
									[
										159081,
										159088
									],
									[
										159099,
										159106
									],
									[
										159125,
										159132
									],
									[
										159308,
										159315
									],
									[
										159393,
										159400
									],
									[
										159485,
										159492
									],
									[
										159946,
										159953
									],
									[
										160136,
										160143
									],
									[
										160291,
										160298
									],
									[
										160390,
										160397
									],
									[
										160542,
										160549
									],
									[
										160574,
										160581
									],
									[
										160682,
										160689
									],
									[
										160712,
										160719
									],
									[
										160776,
										160783
									],
									[
										160955,
										160962
									],
									[
										161280,
										161287
									],
									[
										161406,
										161413
									],
									[
										161563,
										161570
									],
									[
										161610,
										161617
									],
									[
										161663,
										161670
									],
									[
										161735,
										161742
									],
									[
										161820,
										161827
									],
									[
										161914,
										161921
									],
									[
										162081,
										162088
									],
									[
										162293,
										162300
									],
									[
										162513,
										162520
									],
									[
										162543,
										162550
									],
									[
										162583,
										162590
									],
									[
										162643,
										162650
									],
									[
										162682,
										162689
									],
									[
										162724,
										162731
									],
									[
										162827,
										162834
									],
									[
										162976,
										162983
									],
									[
										163105,
										163112
									],
									[
										163217,
										163224
									],
									[
										163257,
										163264
									],
									[
										163300,
										163307
									],
									[
										163496,
										163503
									],
									[
										163682,
										163689
									],
									[
										163965,
										163972
									],
									[
										164048,
										164055
									],
									[
										164303,
										164310
									],
									[
										164354,
										164361
									],
									[
										164631,
										164638
									],
									[
										164755,
										164762
									],
									[
										164768,
										164775
									],
									[
										164893,
										164900
									],
									[
										164952,
										164959
									],
									[
										165249,
										165256
									],
									[
										165379,
										165386
									],
									[
										165661,
										165668
									],
									[
										165989,
										165996
									],
									[
										166346,
										166353
									],
									[
										166570,
										166577
									],
									[
										167031,
										167038
									],
									[
										167376,
										167383
									],
									[
										167690,
										167697
									],
									[
										168022,
										168029
									],
									[
										168346,
										168353
									],
									[
										168673,
										168680
									],
									[
										168793,
										168800
									],
									[
										169060,
										169067
									],
									[
										169384,
										169391
									],
									[
										169659,
										169666
									],
									[
										169702,
										169709
									],
									[
										169968,
										169975
									],
									[
										170011,
										170018
									],
									[
										170067,
										170074
									],
									[
										170383,
										170390
									],
									[
										170664,
										170671
									],
									[
										170917,
										170924
									],
									[
										170990,
										170997
									],
									[
										171237,
										171244
									],
									[
										171299,
										171306
									],
									[
										171644,
										171651
									],
									[
										171919,
										171926
									],
									[
										172195,
										172202
									],
									[
										172394,
										172401
									],
									[
										172455,
										172462
									],
									[
										172546,
										172553
									],
									[
										172758,
										172765
									],
									[
										173150,
										173157
									],
									[
										173198,
										173205
									],
									[
										173426,
										173433
									],
									[
										173469,
										173476
									],
									[
										173524,
										173531
									],
									[
										173596,
										173603
									],
									[
										173867,
										173874
									],
									[
										173910,
										173917
									],
									[
										174247,
										174254
									],
									[
										174401,
										174408
									],
									[
										174636,
										174643
									],
									[
										174672,
										174679
									],
									[
										174936,
										174943
									],
									[
										175049,
										175056
									],
									[
										175322,
										175329
									],
									[
										175353,
										175360
									],
									[
										175573,
										175580
									],
									[
										175841,
										175848
									],
									[
										176144,
										176151
									],
									[
										176267,
										176274
									],
									[
										176496,
										176503
									],
									[
										176795,
										176802
									],
									[
										177108,
										177115
									],
									[
										177385,
										177392
									],
									[
										177472,
										177479
									],
									[
										177560,
										177567
									],
									[
										178062,
										178069
									],
									[
										178189,
										178196
									],
									[
										178479,
										178486
									],
									[
										178559,
										178566
									],
									[
										178793,
										178800
									],
									[
										179039,
										179046
									],
									[
										179276,
										179283
									],
									[
										179348,
										179355
									],
									[
										179611,
										179618
									],
									[
										179878,
										179885
									],
									[
										180094,
										180101
									],
									[
										180140,
										180147
									],
									[
										180193,
										180200
									],
									[
										180368,
										180375
									],
									[
										180671,
										180678
									],
									[
										180980,
										180987
									],
									[
										181327,
										181334
									],
									[
										181635,
										181642
									],
									[
										182017,
										182024
									],
									[
										182120,
										182127
									],
									[
										182413,
										182420
									],
									[
										182691,
										182698
									],
									[
										182746,
										182753
									],
									[
										183034,
										183041
									],
									[
										183111,
										183118
									],
									[
										183197,
										183204
									],
									[
										183535,
										183542
									],
									[
										183804,
										183811
									],
									[
										183877,
										183884
									],
									[
										184164,
										184171
									],
									[
										184452,
										184459
									],
									[
										184536,
										184543
									],
									[
										184604,
										184611
									],
									[
										184665,
										184672
									],
									[
										184745,
										184752
									],
									[
										184803,
										184810
									],
									[
										184896,
										184903
									],
									[
										184978,
										184985
									],
									[
										185272,
										185279
									],
									[
										185344,
										185351
									],
									[
										185424,
										185431
									],
									[
										185482,
										185489
									],
									[
										185571,
										185578
									],
									[
										185649,
										185656
									],
									[
										185940,
										185947
									],
									[
										185983,
										185990
									],
									[
										186067,
										186074
									],
									[
										186155,
										186162
									],
									[
										186463,
										186470
									],
									[
										186536,
										186543
									],
									[
										186825,
										186832
									],
									[
										186916,
										186923
									],
									[
										187215,
										187222
									],
									[
										187506,
										187513
									],
									[
										187592,
										187599
									],
									[
										187869,
										187876
									],
									[
										187941,
										187948
									],
									[
										188021,
										188028
									],
									[
										188079,
										188086
									],
									[
										188177,
										188184
									],
									[
										188428,
										188435
									],
									[
										188500,
										188507
									],
									[
										188587,
										188594
									],
									[
										188653,
										188660
									],
									[
										188737,
										188744
									],
									[
										188821,
										188828
									],
									[
										188914,
										188921
									],
									[
										188995,
										189002
									],
									[
										189276,
										189283
									],
									[
										189542,
										189549
									],
									[
										189619,
										189626
									],
									[
										189701,
										189708
									],
									[
										189784,
										189791
									],
									[
										189880,
										189887
									],
									[
										189969,
										189976
									],
									[
										190055,
										190062
									],
									[
										190149,
										190156
									],
									[
										190242,
										190249
									],
									[
										190328,
										190335
									],
									[
										190413,
										190420
									],
									[
										190506,
										190513
									],
									[
										190610,
										190617
									],
									[
										190712,
										190719
									],
									[
										190796,
										190803
									],
									[
										191164,
										191171
									],
									[
										191257,
										191264
									],
									[
										191365,
										191372
									],
									[
										191737,
										191744
									],
									[
										191811,
										191818
									],
									[
										192102,
										192109
									],
									[
										192462,
										192469
									],
									[
										192642,
										192649
									],
									[
										193044,
										193060
									],
									[
										193444,
										193463
									],
									[
										193561,
										193580
									],
									[
										194031,
										194050
									],
									[
										194488,
										194507
									],
									[
										194782,
										194801
									],
									[
										195209,
										195228
									],
									[
										195502,
										195521
									],
									[
										195896,
										195915
									],
									[
										196339,
										196358
									],
									[
										196625,
										196644
									],
									[
										197040,
										197059
									],
									[
										197433,
										197452
									],
									[
										197733,
										197752
									],
									[
										198184,
										198203
									],
									[
										198698,
										198717
									],
									[
										199063,
										199082
									],
									[
										199265,
										199284
									],
									[
										199432,
										199451
									],
									[
										199633,
										199652
									],
									[
										199681,
										199700
									],
									[
										199851,
										199870
									],
									[
										200097,
										200116
									],
									[
										200182,
										200201
									],
									[
										200339,
										200358
									],
									[
										200579,
										200598
									],
									[
										201024,
										201043
									],
									[
										201491,
										201510
									],
									[
										202038,
										202057
									],
									[
										202378,
										202397
									],
									[
										202648,
										202667
									],
									[
										202967,
										202986
									],
									[
										203264,
										203283
									],
									[
										203432,
										203451
									],
									[
										203728,
										203747
									],
									[
										204018,
										204037
									],
									[
										204329,
										204348
									],
									[
										204613,
										204632
									],
									[
										204816,
										204835
									],
									[
										205099,
										205118
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								199269,
								199269
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 3,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 83940.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/stonehearth/components/job/job_component.lua",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 26067,
						"regions":
						{
						},
						"selection":
						[
							[
								537,
								556
							],
							[
								1374,
								1393
							],
							[
								3155,
								3174
							],
							[
								3780,
								3799
							],
							[
								3821,
								3840
							],
							[
								9252,
								9271
							],
							[
								10879,
								10898
							],
							[
								10950,
								10969
							],
							[
								15428,
								15447
							],
							[
								19719,
								19738
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html"
								},
								{
									"characters": ".#",
									"selector": "text.html"
								}
							],
							"syntax": "Packages/LuaExtended/LuaExtended.sublime-syntax",
							"tab_size": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 14266.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "jobs/varanus_herder/varanus_herder.lua",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 228,
						"regions":
						{
						},
						"selection":
						[
							[
								228,
								228
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html"
								},
								{
									"characters": ".#",
									"selector": "text.html"
								}
							],
							"syntax": "Packages/LuaExtended/LuaExtended.sublime-syntax",
							"tab_size": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/mods/stonehearth/jobs/shepherd/shepherd.lua",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9319,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								9319
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html"
								},
								{
									"characters": ".#",
									"selector": "text.html"
								}
							],
							"syntax": "Packages/LuaExtended/LuaExtended.sublime-syntax",
							"tab_size": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "jobs/varanus_herder/varanus_herder_description.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3110,
						"regions":
						{
						},
						"selection":
						[
							[
								1028,
								1028
							]
						],
						"settings":
						{
							"auto_complete": true,
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html"
								},
								{
									"characters": ".#",
									"selector": "text.html"
								}
							],
							"syntax": "Packages/JavaScript/JSON.sublime-syntax",
							"tab_size": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "/C/Users/Adam/AppData/Local/Temp/7zO87A0E3DD/fisher_description.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3111,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html"
								},
								{
									"characters": ".#",
									"selector": "text.html"
								}
							],
							"syntax": "Packages/JavaScript/JSON.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "mixins/start_menu.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 641,
						"regions":
						{
						},
						"selection":
						[
							[
								314,
								314
							]
						],
						"settings":
						{
							"auto_complete": true,
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html"
								},
								{
									"characters": ".#",
									"selector": "text.html"
								}
							],
							"syntax": "Packages/JavaScript/JSON.sublime-syntax",
							"tab_size": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/user_settings.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7458,
						"regions":
						{
						},
						"selection":
						[
							[
								1200,
								1200
							]
						],
						"settings":
						{
							"auto_complete": true,
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html"
								},
								{
									"characters": ".#",
									"selector": "text.html"
								}
							],
							"syntax": "Packages/JavaScript/JSON.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 600.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 41.0
	},
	"input":
	{
		"height": 42.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.CSS Extended Completions":
	{
		"height": 132.0
	},
	"output.exec":
	{
		"height": 142.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/User/Chrome.sublime-build",
	"project": "/C/Users/Adam/Documents/Steam Client/steamapps/common/Stonehearth/IDE.sublime-project",
	"replace":
	{
		"height": 74.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"index.jso",
				"stonehearth\\jobs\\index.json"
			],
			[
				"shepherd",
				"stonehearth\\jobs\\shepherd\\shepherd.lua"
			],
			[
				"archer_de",
				"stonehearth\\jobs\\archer\\archer_description.json"
			],
			[
				"start_menu",
				"stonehearth\\data\\ui\\start_menu.json"
			],
			[
				"hotkeys",
				"stonehearth\\hotkeys.json"
			],
			[
				"manifest",
				"stonehearth\\manifest.json"
			],
			[
				"entities",
				"radiant\\modules\\entities.lua"
			],
			[
				"manifes",
				"stonehearth\\manifest.json"
			],
			[
				"entity_editor",
				"debugtools\\ui\\entity_editor\\entity_editor.html"
			],
			[
				"tooltip",
				"stonehearth\\ui\\root\\js\\libs\\jquery.tooltipster.js"
			],
			[
				"tool",
				"stonehearth\\ui\\common\\tooltip_helper\\tooltip_helper.js"
			],
			[
				"item_pla",
				"stonehearth\\services\\client\\build_editor\\item_placer.lua"
			],
			[
				"mani",
				"box_command_tool\\manifest.json"
			],
			[
				"selection_",
				"stonehearth\\services\\client\\selection\\selection_service.lua"
			],
			[
				"build_",
				"stonehearth\\lib\\build_util.lua"
			],
			[
				"xz_",
				"stonehearth\\services\\client\\selection\\xz_region_selector.lua"
			],
			[
				"item_pl",
				"stonehearth\\services\\client\\build_editor\\item_placer.lua"
			],
			[
				"plce_it",
				"stonehearth\\call_handlers\\place_item_call_handler.lua"
			],
			[
				"place_i",
				"stonehearth\\call_handlers\\place_item_call_handler.lua"
			],
			[
				"tool_call_han",
				"stonehearth\\call_handlers\\selection_call_handler.lua"
			],
			[
				"selection",
				"stonehearth\\services\\client\\selection\\selection_service.lua"
			],
			[
				"stonehea",
				"stonehearth\\ui\\game\\start_menu\\stonehearth_menu.js"
			],
			[
				"place",
				"stonehearth\\call_handlers\\place_item_call_handler.lua"
			],
			[
				"start_menu.js",
				"stonehearth\\ui\\game\\start_menu\\start_menu.js"
			],
			[
				"less",
				"stonehearth\\ui\\game\\game.less"
			],
			[
				"start_",
				"stonehearth\\ui\\game\\start_menu\\start_menu.js"
			],
			[
				"speedrunling",
				"speedrunlings\\ui\\speedrunlings_main_window\\speedrunlings_main_window.less"
			],
			[
				"stonehe",
				"stonehearth\\stonehearth_client.lua"
			],
			[
				"camera_s",
				"stonehearth\\services\\client\\camera\\camera_service.lua"
			],
			[
				"field",
				"stonehearth\\ai\\actions\\till_field_adjacent_action.lua"
			],
			[
				"farm",
				"stonehearth\\call_handlers\\farming_call_handler.lua"
			],
			[
				"hotkey",
				"gridkeys\\hotkeys.json"
			],
			[
				"player",
				"stonehearth\\services\\client\\camera\\player_camera_controller.lua"
			],
			[
				"player_",
				"stonehearth\\services\\client\\camera\\player_camera_controller.lua"
			],
			[
				"edge",
				"edge_pan\\ui\\edge_pan.less"
			],
			[
				"place_it",
				"stonehearth\\call_handlers\\place_item_call_handler.lua"
			],
			[
				"player_c",
				"stonehearth\\services\\client\\camera\\player_camera_controller.lua"
			],
			[
				".less",
				"settlementdecor\\jobs\\gardener\\skin\\workshop.less"
			],
			[
				"party_edit",
				"stonehearth\\ui\\game\\party_editor\\party_editor.less"
			],
			[
				"speed",
				"speedrunlings\\ui\\speedrunlings_main_window\\speedrunlings_main_window.js"
			],
			[
				"grid",
				"gridkeys\\ui\\gridkeys.js"
			],
			[
				"party_",
				"stonehearth\\ui\\game\\party_editor\\party_editor.html"
			],
			[
				"",
				"stonehearth\\ui\\game\\start_menu\\start_menu.js"
			],
			[
				"start_menu.less",
				"stonehearth\\ui\\game\\start_menu\\start_menu.less"
			],
			[
				"start_menu.h",
				"stonehearth\\ui\\game\\start_menu\\start_menu.html"
			],
			[
				"stonehearth_me",
				"stonehearth\\ui\\game\\start_menu\\stonehearth_menu.js"
			],
			[
				"scree",
				"screen_panner\\ui\\screen_panner.js"
			],
			[
				"screen",
				"screen_panner\\ui\\screen_panner.js"
			],
			[
				"init",
				"screen_panner\\init.lua"
			],
			[
				"follow_c",
				"stonehearth\\services\\client\\camera\\follow_camera_controller.lua"
			],
			[
				"move_to",
				"stonehearth\\services\\client\\camera\\move_to_camera_controller.lua"
			],
			[
				"call_handler",
				"stonehearth\\call_handlers\\camera_call_handler.lua"
			],
			[
				"mass_u",
				"mass_undeploy\\call_handlers\\mass_undeploy_call_handler\\mass_undeploy_call_handler.lua"
			],
			[
				"manif",
				"stonehearth\\manifest.json"
			],
			[
				"mass",
				"mass_undeploy\\ui\\mass_undeploy.js"
			],
			[
				"help_cam",
				"stonehearth\\ui\\game\\help_camera\\help_camera.js"
			],
			[
				"camera_servi",
				"stonehearth\\services\\client\\camera\\camera_service.lua"
			],
			[
				"hotkey_",
				"stonehearth\\ui\\common\\hotkey_manager\\hotkey_manager.js"
			],
			[
				"start_m",
				"stonehearth\\data\\ui\\start_menu.json"
			],
			[
				"inventory.l",
				"stonehearth\\services\\server\\inventory\\inventory.lua"
			],
			[
				"start_mneu",
				"gridkeys\\ui\\game\\start_menu\\start_menu.js"
			],
			[
				"stonehearth_cli",
				"stonehearth\\ui\\root\\js\\stonehearth\\stonehearth_client.js"
			],
			[
				"resource",
				"stonehearth\\call_handlers\\resource_call_handler.lua"
			],
			[
				"en",
				"stonehearth\\locales\\en.json"
			],
			[
				"stonehearth_client",
				"stonehearth\\ui\\root\\js\\stonehearth\\stonehearth_client.js"
			],
			[
				"resource_call",
				"stonehearth\\call_handlers\\resource_call_handler.lua"
			],
			[
				"start_men",
				"stonehearth\\data\\ui\\start_menu.json"
			],
			[
				"start_menu.json",
				"stonehearth\\data\\ui\\start_menu.json"
			],
			[
				"comp",
				"compactify\\ui\\compactify.js"
			],
			[
				"stoneheart",
				"stonehearth\\ui\\game\\start_menu\\stonehearth_menu.js"
			],
			[
				"speedr",
				"speedrunlings\\ui\\speedrunlings_main_window\\speedrunlings_main_window.js"
			],
			[
				"stonhearth",
				"stonehearth\\ui\\game\\start_menu\\stonehearth_menu.js"
			],
			[
				"calen",
				"stonehearth\\services\\server\\calendar\\calendar_service.lua"
			],
			[
				"manifest.",
				"stonehearth\\manifest.json"
			],
			[
				"clock_",
				"stonehearth\\ui\\game\\clock_widget\\clock_widget.html"
			],
			[
				"party_e",
				"stonehearth\\ui\\game\\party_editor\\party_editor.less"
			],
			[
				"stonehearth",
				"stonehearth\\ui\\game\\start_menu\\stonehearth_menu.js"
			],
			[
				"man",
				"gridkeys\\manifest.json"
			],
			[
				"init.",
				"gridkeys\\ui\\init.js"
			],
			[
				"view",
				"stonehearth\\ui\\root\\js\\stonehearth\\view.js"
			],
			[
				"start_me",
				"stonehearth\\data\\ui\\start_menu.json"
			],
			[
				"stoneh",
				"stonehearth\\stonehearth_server.lua"
			],
			[
				"ember",
				"ui\\root\\js\\libs\\ember-1.8.1.js"
			],
			[
				"hotke",
				"services\\client\\hotkey\\hotkey_service.lua"
			],
			[
				"input",
				"services\\client\\input\\input_service.lua"
			],
			[
				"input_",
				"services\\client\\input\\input_service.lua"
			],
			[
				"instabuild",
				"data\\interactions\\extractors\\building_extractor.lua"
			],
			[
				"building",
				"stonehearth\\components\\building\\building_component.lua"
			],
			[
				"build_s",
				"stonehearth\\services\\server\\build\\build_service.lua"
			],
			[
				"terrain",
				"stonehearth\\data\\terrain\\terrain_blocks.json"
			],
			[
				"chop_o",
				"stonehearth\\data\\effects\\chop_overlay_effect\\chop_overlay_effect.json"
			],
			[
				"brazier_",
				"stonehearth\\data\\effects\\brazier_effect\\brazier_effect.json"
			],
			[
				"player_sc",
				"stonehearth\\services\\server\\score\\player_score_data.lua"
			],
			[
				"sheep",
				"stonehearth\\entities\\critters\\sheep\\sheep.json"
			],
			[
				"shephe",
				"stonehearth\\components\\shepherd_pasture\\shepherd_pasture_component.lua"
			],
			[
				"poyo",
				"stonehearth\\entities\\critters\\poyo\\poyo.json"
			],
			[
				"shep",
				"stonehearth\\components\\shepherd_pasture\\shepherd_pasture_component.lua"
			],
			[
				"pasture",
				"stonehearth\\jobs\\shepherd\\shepherd_pasture\\shepherd_pasture.json"
			],
			[
				"equipment",
				"stonehearth\\components\\equipment\\equipment_component.lua"
			],
			[
				"pasture_animal",
				"stonehearth\\components\\shepherd_pasture\\shepherded_animal_component.lua"
			],
			[
				"colla",
				"stonehearth\\ai\\actions\\collect_animal_for_pasture_action.lua"
			],
			[
				"debris",
				"stonehearth\\components\\debris\\debris_component.lua"
			],
			[
				"shepherded",
				"stonehearth\\components\\shepherd_pasture\\shepherded_animal_component.lua"
			],
			[
				"sheph",
				"stonehearth\\components\\shepherd_pasture\\shepherd_pasture_component.lua"
			],
			[
				"shepher",
				"stonehearth\\components\\shepherd_pasture\\shepherd_pasture_component.lua"
			],
			[
				"shepherd_p",
				"stonehearth\\components\\shepherd_pasture_component.lua"
			],
			[
				"harvest_tr",
				"stonehearth\\data\\effects\\trapped_beast_overlay_effect\\harvest_trapped_beast_overlay_effect.json"
			],
			[
				"shepherd_",
				"stonehearth\\components\\shepherd_pasture\\shepherd_pasture_component.lua"
			],
			[
				"sheper",
				"stonehearth\\renderers\\shepherd_pasture\\shepherd_pasture_renderer.lua"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"_addItems"
			]
		],
		"width": 392.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 221.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
